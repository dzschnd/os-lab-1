<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="694" onload="init(evt)" viewBox="0 0 1200 694" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="694.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="677" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="677" > </text>
<g id="frames">
<g >
<title>void std::thread::_Invoker&lt;std::tuple&lt;void  (31,930,883,735 samples, 99.98%)</title><rect x="10.3" y="533" width="1179.7" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="13.26" y="543.5" >void std::thread::_Invoker&lt;std::tuple&lt;void </text>
</g>
<g >
<title>prepend (71,897,931 samples, 0.23%)</title><rect x="40.3" y="69" width="2.7" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="43.33" y="79.5" ></text>
</g>
<g >
<title>ktime_get_coarse_real_ts64 (4,310,709 samples, 0.01%)</title><rect x="85.8" y="181" width="0.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="88.78" y="191.5" ></text>
</g>
<g >
<title>start_thread (31,930,883,735 samples, 99.98%)</title><rect x="10.3" y="597" width="1179.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="13.26" y="607.5" >start_thread</text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::open (1,104,673,881 samples, 3.46%)</title><rect x="16.5" y="437" width="40.8" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="19.48" y="447.5" >std..</text>
</g>
<g >
<title>update_process_times (25,680,975 samples, 0.08%)</title><rect x="1044.5" y="325" width="1.0" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1047.55" y="335.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (6,456,493 samples, 0.02%)</title><rect x="69.6" y="421" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="72.63" y="431.5" ></text>
</g>
<g >
<title>aa_audit_file (3,824,043 samples, 0.01%)</title><rect x="36.1" y="133" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="39.05" y="143.5" ></text>
</g>
<g >
<title>void std::__fill_a&lt;int*, int&gt; (8,553,091 samples, 0.03%)</title><rect x="1188.7" y="357" width="0.3" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="1191.66" y="367.5" ></text>
</g>
<g >
<title>io_latency_read (2,151,896,929 samples, 6.74%)</title><rect x="14.4" y="485" width="79.5" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="17.36" y="495.5" >io_latenc..</text>
</g>
<g >
<title>arch_asym_cpu_priority (4,324,278 samples, 0.01%)</title><rect x="879.9" y="277" width="0.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="882.86" y="287.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64 (4,234,201 samples, 0.01%)</title><rect x="1044.4" y="325" width="0.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1047.39" y="335.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::close (273,624,395 samples, 0.86%)</title><rect x="59.5" y="437" width="10.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="62.52" y="447.5" ></text>
</g>
<g >
<title>security_file_alloc (30,210,183 samples, 0.09%)</title><rect x="21.6" y="213" width="1.1" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="24.59" y="223.5" ></text>
</g>
<g >
<title>handle_fasteoi_irq (4,087,786 samples, 0.01%)</title><rect x="1187.1" y="405" width="0.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1190.15" y="415.5" ></text>
</g>
<g >
<title>trigger_load_balance (14,974,151 samples, 0.05%)</title><rect x="879.9" y="309" width="0.5" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="882.86" y="319.5" ></text>
</g>
<g >
<title>d_absolute_path (114,886,673 samples, 0.36%)</title><rect x="38.8" y="101" width="4.3" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="41.82" y="111.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (36,437,593 samples, 0.11%)</title><rect x="1044.2" y="389" width="1.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1047.23" y="399.5" ></text>
</g>
<g >
<title>getname_flags.part.0 (89,416,660 samples, 0.28%)</title><rect x="51.9" y="261" width="3.3" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="54.90" y="271.5" ></text>
</g>
<g >
<title>do_syscall_64 (487,544,754 samples, 1.53%)</title><rect x="74.6" y="357" width="18.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="77.56" y="367.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::close (286,557,649 samples, 0.90%)</title><rect x="59.3" y="453" width="10.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="62.28" y="463.5" ></text>
</g>
<g >
<title>prepend_copy (44,191,525 samples, 0.14%)</title><rect x="41.3" y="53" width="1.7" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="44.35" y="63.5" ></text>
</g>
<g >
<title>x64_sys_call (446,086,731 samples, 1.40%)</title><rect x="76.1" y="341" width="16.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="79.09" y="351.5" ></text>
</g>
<g >
<title>path_name (151,379,027 samples, 0.47%)</title><rect x="38.0" y="149" width="5.6" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="41.02" y="159.5" ></text>
</g>
<g >
<title>schedule (6,520,578 samples, 0.02%)</title><rect x="1045.7" y="373" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1048.66" y="383.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (6,675,831 samples, 0.02%)</title><rect x="58.2" y="453" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="61.17" y="463.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (38,509,503 samples, 0.12%)</title><rect x="1044.2" y="421" width="1.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1047.23" y="431.5" ></text>
</g>
<g >
<title>__close_nocancel (241,561,034 samples, 0.76%)</title><rect x="60.6" y="405" width="8.9" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="63.62" y="415.5" ></text>
</g>
<g >
<title>aa_get_buffer (4,387,142 samples, 0.01%)</title><rect x="37.8" y="149" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="40.78" y="159.5" ></text>
</g>
<g >
<title>nohz_balancer_kick (4,308,829 samples, 0.01%)</title><rect x="1187.5" y="293" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1190.54" y="303.5" ></text>
</g>
<g >
<title>irqentry_exit (4,337,983 samples, 0.01%)</title><rect x="878.2" y="421" width="0.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="881.20" y="431.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (12,877,329 samples, 0.04%)</title><rect x="1187.3" y="405" width="0.5" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1190.30" y="415.5" ></text>
</g>
<g >
<title>int* std::__fill_n_a&lt;int*, unsigned long, int&gt; (8,553,091 samples, 0.03%)</title><rect x="1188.7" y="373" width="0.3" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1191.66" y="383.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (36,437,593 samples, 0.11%)</title><rect x="1044.2" y="405" width="1.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1047.23" y="415.5" ></text>
</g>
<g >
<title>__legitimize_path (8,606,561 samples, 0.03%)</title><rect x="24.7" y="197" width="0.3" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="27.72" y="207.5" ></text>
</g>
<g >
<title>__fsnotify_parent (44,658,729 samples, 0.14%)</title><rect x="32.9" y="181" width="1.7" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="35.90" y="191.5" ></text>
</g>
<g >
<title>reweight_entity (4,291,615 samples, 0.01%)</title><rect x="1044.8" y="261" width="0.1" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1047.78" y="271.5" ></text>
</g>
<g >
<title>mutex_lock (4,304,887 samples, 0.01%)</title><rect x="77.3" y="277" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="80.34" y="287.5" ></text>
</g>
<g >
<title>read (543,347,186 samples, 1.70%)</title><rect x="73.1" y="389" width="20.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="76.13" y="399.5" ></text>
</g>
<g >
<title>handle_irq_event (4,669,640 samples, 0.01%)</title><rect x="877.9" y="389" width="0.1" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="880.87" y="399.5" ></text>
</g>
<g >
<title>dget_parent (8,613,101 samples, 0.03%)</title><rect x="29.2" y="181" width="0.4" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="32.24" y="191.5" ></text>
</g>
<g >
<title>int* std::fill_n&lt;int*, unsigned long, int&gt; (8,553,091 samples, 0.03%)</title><rect x="1188.7" y="389" width="0.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1191.66" y="399.5" ></text>
</g>
<g >
<title>apparmor_file_free_security (4,294,710 samples, 0.01%)</title><rect x="65.3" y="293" width="0.1" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="68.25" y="303.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (10,751,898 samples, 0.03%)</title><rect x="1187.3" y="389" width="0.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1190.30" y="399.5" ></text>
</g>
<g >
<title>_IO_file_fopen@@GLIBC_2.2.5 (1,074,790,085 samples, 3.37%)</title><rect x="16.9" y="405" width="39.8" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="19.95" y="415.5" >_IO..</text>
</g>
<g >
<title>_IO_file_open (1,066,325,134 samples, 3.34%)</title><rect x="16.9" y="389" width="39.4" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="19.95" y="399.5" >_IO..</text>
</g>
<g >
<title>ext4_sample_last_mounted (3,715,399 samples, 0.01%)</title><rect x="30.4" y="181" width="0.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="33.39" y="191.5" ></text>
</g>
<g >
<title>hook_file_alloc_security (4,314,864 samples, 0.01%)</title><rect x="21.4" y="213" width="0.2" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="24.43" y="223.5" ></text>
</g>
<g >
<title>asm_common_interrupt (4,087,786 samples, 0.01%)</title><rect x="1187.1" y="453" width="0.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1190.15" y="463.5" ></text>
</g>
<g >
<title>aa_label_is_subset (4,313,326 samples, 0.01%)</title><rect x="92.2" y="213" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="95.18" y="223.5" ></text>
</g>
<g >
<title>timekeeping_advance (4,234,201 samples, 0.01%)</title><rect x="1044.4" y="293" width="0.1" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="1047.39" y="303.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (3,939,836 samples, 0.01%)</title><rect x="1188.8" y="325" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1191.83" y="335.5" ></text>
</g>
<g >
<title>__close_nocancel (8,378,254 samples, 0.03%)</title><rect x="16.5" y="421" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="19.48" y="431.5" ></text>
</g>
<g >
<title>_dl_start_user (3,653,310 samples, 0.01%)</title><rect x="10.1" y="613" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="13.08" y="623.5" ></text>
</g>
<g >
<title>alloc_fd (29,427,368 samples, 0.09%)</title><rect x="50.8" y="261" width="1.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="53.81" y="271.5" ></text>
</g>
<g >
<title>mutex_unlock (4,283,955 samples, 0.01%)</title><rect x="77.7" y="293" width="0.2" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="80.74" y="303.5" ></text>
</g>
<g >
<title>__check_object_size.part.0 (16,987,203 samples, 0.05%)</title><rect x="54.4" y="213" width="0.6" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="57.42" y="223.5" ></text>
</g>
<g >
<title>__memcg_slab_post_alloc_hook (6,410,757 samples, 0.02%)</title><rect x="23.1" y="213" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="26.15" y="223.5" ></text>
</g>
<g >
<title>__rcu_read_lock (4,260,013 samples, 0.01%)</title><rect x="28.9" y="181" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="31.92" y="191.5" ></text>
</g>
<g >
<title>scheduler_tick (25,680,975 samples, 0.08%)</title><rect x="1044.5" y="309" width="1.0" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1047.55" y="319.5" ></text>
</g>
<g >
<title>all (31,938,053,406 samples, 100%)</title><rect x="10.0" y="645" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="655.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (21,504,614 samples, 0.07%)</title><rect x="1187.9" y="469" width="0.8" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1190.86" y="479.5" ></text>
</g>
<g >
<title>fclose@@GLIBC_2.2.5 (262,929,546 samples, 0.82%)</title><rect x="59.9" y="421" width="9.7" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="62.91" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (8,700,128 samples, 0.03%)</title><rect x="1188.7" y="469" width="0.3" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1191.65" y="479.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (72,684,670 samples, 0.23%)</title><rect x="878.4" y="437" width="2.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="881.36" y="447.5" ></text>
</g>
<g >
<title>inode_permission (30,323,511 samples, 0.09%)</title><rect x="26.1" y="213" width="1.2" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="29.13" y="223.5" ></text>
</g>
<g >
<title>run_binary_search (29,642,505,125 samples, 92.81%)</title><rect x="93.9" y="485" width="1095.2" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="96.87" y="495.5" >run_binary_search</text>
</g>
<g >
<title>int* std::__uninitialized_default_n_1&lt;true&gt;::__uninit_default_n&lt;int*, unsigned long&gt; (8,553,091 samples, 0.03%)</title><rect x="1188.7" y="405" width="0.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1191.66" y="415.5" ></text>
</g>
<g >
<title>asm_common_interrupt (13,253,794 samples, 0.04%)</title><rect x="877.9" y="453" width="0.5" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="880.87" y="463.5" ></text>
</g>
<g >
<title>account_process_tick (4,287,189 samples, 0.01%)</title><rect x="878.8" y="325" width="0.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="881.83" y="335.5" ></text>
</g>
<g >
<title>generic_permission (19,383,035 samples, 0.06%)</title><rect x="26.5" y="197" width="0.7" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="29.45" y="207.5" ></text>
</g>
<g >
<title>handle_softirqs (4,187,995 samples, 0.01%)</title><rect x="880.8" y="389" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="883.81" y="399.5" ></text>
</g>
<g >
<title>xas_load (9,338,614 samples, 0.03%)</title><rect x="83.9" y="197" width="0.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="86.88" y="207.5" ></text>
</g>
<g >
<title>native_read_msr (4,284,481 samples, 0.01%)</title><rect x="879.0" y="293" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="881.99" y="303.5" ></text>
</g>
<g >
<title>touch_atime (4,305,155 samples, 0.01%)</title><rect x="86.1" y="245" width="0.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="89.09" y="255.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (40,576,299 samples, 0.13%)</title><rect x="1044.2" y="437" width="1.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1047.16" y="447.5" ></text>
</g>
<g >
<title>_IO_file_close_it@@GLIBC_2.2.5 (6,367,853 samples, 0.02%)</title><rect x="60.1" y="405" width="0.2" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="63.07" y="415.5" ></text>
</g>
<g >
<title>check_heap_object (4,256,014 samples, 0.01%)</title><rect x="55.0" y="213" width="0.2" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="58.04" y="223.5" ></text>
</g>
<g >
<title>update_process_times (8,645,764 samples, 0.03%)</title><rect x="1187.4" y="341" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1190.38" y="351.5" ></text>
</g>
<g >
<title>ext4_file_open (45,566,736 samples, 0.14%)</title><rect x="30.1" y="197" width="1.7" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="33.07" y="207.5" ></text>
</g>
<g >
<title>__fdget_pos (17,273,081 samples, 0.05%)</title><rect x="76.9" y="293" width="0.6" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="79.86" y="303.5" ></text>
</g>
<g >
<title>terminate_walk (25,178,395 samples, 0.08%)</title><rect x="49.6" y="245" width="0.9" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="52.56" y="255.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode_prepare (4,301,168 samples, 0.01%)</title><rect x="61.8" y="357" width="0.1" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="64.79" y="367.5" ></text>
</g>
<g >
<title>irqentry_exit (6,520,578 samples, 0.02%)</title><rect x="1045.7" y="405" width="0.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1048.66" y="415.5" ></text>
</g>
<g >
<title>filp_flush (21,247,607 samples, 0.07%)</title><rect x="68.4" y="325" width="0.8" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="71.38" y="335.5" ></text>
</g>
<g >
<title>path_get (4,276,738 samples, 0.01%)</title><rect x="32.1" y="197" width="0.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="35.15" y="207.5" ></text>
</g>
<g >
<title>dput (4,306,956 samples, 0.01%)</title><rect x="34.3" y="165" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="37.31" y="175.5" ></text>
</g>
<g >
<title>std::basic_ifstream&lt;char, std::char_traits&lt;char&gt; &gt;::~basic_ifstream (8,850,067 samples, 0.03%)</title><rect x="69.9" y="469" width="0.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="72.87" y="479.5" ></text>
</g>
<g >
<title>x64_sys_call (1,012,283,799 samples, 3.17%)</title><rect x="18.1" y="325" width="37.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="21.15" y="335.5" >x64..</text>
</g>
<g >
<title>__GI___pthread_enable_asynccancel (4,305,220 samples, 0.01%)</title><rect x="56.2" y="373" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="59.18" y="383.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,036,329,054 samples, 3.24%)</title><rect x="17.4" y="357" width="38.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="20.42" y="367.5" >ent..</text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::open (1,141,525,399 samples, 3.57%)</title><rect x="16.0" y="453" width="42.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="18.99" y="463.5" >std..</text>
</g>
<g >
<title>security_inode_permission (4,310,493 samples, 0.01%)</title><rect x="47.5" y="229" width="0.2" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="50.52" y="239.5" ></text>
</g>
<g >
<title>handle_pte_fault (3,126,839 samples, 0.01%)</title><rect x="1188.9" y="245" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1191.86" y="255.5" ></text>
</g>
<g >
<title>ksys_read (441,778,302 samples, 1.38%)</title><rect x="76.2" y="309" width="16.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="79.25" y="319.5" ></text>
</g>
<g >
<title>__fsnotify_parent (88,799,396 samples, 0.28%)</title><rect x="87.0" y="261" width="3.3" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="89.98" y="271.5" ></text>
</g>
<g >
<title>dget_parent (8,531,749 samples, 0.03%)</title><rect x="80.0" y="261" width="0.3" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="82.97" y="271.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (8,645,764 samples, 0.03%)</title><rect x="1187.4" y="373" width="0.3" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1190.38" y="383.5" ></text>
</g>
<g >
<title>binary_search (110,907,505 samples, 0.35%)</title><rect x="10.3" y="485" width="4.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.26" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__enable_if&lt;std::__is_scalar&lt;int&gt;::__value, void&gt;::__type std::__fill_a1&lt;int*, int&gt; (8,553,091 samples, 0.03%)</title><rect x="1188.7" y="341" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1191.66" y="351.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (31,930,883,735 samples, 99.98%)</title><rect x="10.3" y="549" width="1179.7" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="13.26" y="559.5" >std::thread::_Invoker&lt;std::tuple&lt;void </text>
</g>
<g >
<title>do_filp_open (862,707,911 samples, 2.70%)</title><rect x="18.9" y="277" width="31.8" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="21.86" y="287.5" >do..</text>
</g>
<g >
<title>lockref_get_not_zero (4,602,742 samples, 0.01%)</title><rect x="31.2" y="149" width="0.2" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="34.19" y="159.5" ></text>
</g>
<g >
<title>dput (5,915,611 samples, 0.02%)</title><rect x="80.3" y="261" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="83.29" y="271.5" ></text>
</g>
<g >
<title>update_cfs_group (6,482,530 samples, 0.02%)</title><rect x="880.4" y="309" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="883.42" y="319.5" ></text>
</g>
<g >
<title>__x64_sys_read (6,454,646 samples, 0.02%)</title><rect x="75.0" y="341" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="78.03" y="351.5" ></text>
</g>
<g >
<title>irq_exit_rcu (4,187,995 samples, 0.01%)</title><rect x="880.8" y="421" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="883.81" y="431.5" ></text>
</g>
<g >
<title>std::__invoke_result&lt;void  (31,930,883,735 samples, 99.98%)</title><rect x="10.3" y="517" width="1179.7" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="13.26" y="527.5" >std::__invoke_result&lt;void </text>
</g>
<g >
<title>refill_obj_stock (4,390,260 samples, 0.01%)</title><rect x="66.4" y="245" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="69.39" y="255.5" ></text>
</g>
<g >
<title>__handle_mm_fault (3,126,839 samples, 0.01%)</title><rect x="1188.9" y="261" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1191.86" y="271.5" ></text>
</g>
<g >
<title>task_tick_fair (15,031,652 samples, 0.05%)</title><rect x="879.3" y="309" width="0.6" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="882.31" y="319.5" ></text>
</g>
<g >
<title>__check_object_size (21,243,217 samples, 0.07%)</title><rect x="54.4" y="229" width="0.8" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="57.42" y="239.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (8,601,369 samples, 0.03%)</title><rect x="22.3" y="197" width="0.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="25.31" y="207.5" ></text>
</g>
<g >
<title>__f_unlock_pos (4,308,429 samples, 0.01%)</title><rect x="76.1" y="309" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="79.09" y="319.5" ></text>
</g>
<g >
<title>sched_use_asym_prio (8,478,942 samples, 0.03%)</title><rect x="880.0" y="277" width="0.3" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="883.02" y="287.5" ></text>
</g>
<g >
<title>malloc (21,512,524 samples, 0.07%)</title><rect x="57.4" y="405" width="0.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="60.37" y="415.5" ></text>
</g>
<g >
<title>lockref_put_return (8,005,461 samples, 0.03%)</title><rect x="50.1" y="229" width="0.3" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="53.12" y="239.5" ></text>
</g>
<g >
<title>dl_main (3,653,310 samples, 0.01%)</title><rect x="10.1" y="565" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="13.08" y="575.5" ></text>
</g>
<g >
<title>nohz_balancer_kick (6,513,472 samples, 0.02%)</title><rect x="1045.1" y="277" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1048.10" y="287.5" ></text>
</g>
<g >
<title>handle_edge_irq (4,669,640 samples, 0.01%)</title><rect x="877.9" y="405" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="880.87" y="415.5" ></text>
</g>
<g >
<title>__rcu_read_lock (6,445,209 samples, 0.02%)</title><rect x="49.8" y="229" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="52.80" y="239.5" ></text>
</g>
<g >
<title>operator new (21,512,524 samples, 0.07%)</title><rect x="57.4" y="421" width="0.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="60.37" y="431.5" ></text>
</g>
<g >
<title>handle_dots (10,752,331 samples, 0.03%)</title><rect x="47.9" y="213" width="0.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="50.92" y="223.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::basic_filebuf (8,948,575 samples, 0.03%)</title><rect x="15.7" y="453" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="18.66" y="463.5" ></text>
</g>
<g >
<title>std::istream::read (621,294,245 samples, 1.95%)</title><rect x="70.8" y="469" width="22.9" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="73.75" y="479.5" >s..</text>
</g>
<g >
<title>__x64_sys_close (190,826,089 samples, 0.60%)</title><rect x="62.2" y="341" width="7.0" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="65.19" y="351.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (72,684,670 samples, 0.23%)</title><rect x="878.4" y="453" width="2.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="881.36" y="463.5" ></text>
</g>
<g >
<title>aa_str_perms (43,007,848 samples, 0.13%)</title><rect x="36.2" y="133" width="1.6" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="39.19" y="143.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (4,451,710 samples, 0.01%)</title><rect x="66.4" y="261" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="69.39" y="271.5" ></text>
</g>
<g >
<title>getname (89,416,660 samples, 0.28%)</title><rect x="51.9" y="277" width="3.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="54.90" y="287.5" ></text>
</g>
<g >
<title>apparmor_file_permission (47,821,557 samples, 0.15%)</title><rect x="90.6" y="245" width="1.8" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="93.65" y="255.5" ></text>
</g>
<g >
<title>handle_mm_fault (3,126,839 samples, 0.01%)</title><rect x="1188.9" y="277" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1191.86" y="287.5" ></text>
</g>
<g >
<title>binary_search (25,927,813,243 samples, 81.18%)</title><rect x="98.0" y="469" width="958.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="101.04" y="479.5" >binary_search</text>
</g>
<g >
<title>dput (4,493,921 samples, 0.01%)</title><rect x="29.6" y="181" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="32.56" y="191.5" ></text>
</g>
<g >
<title>aa_path_perm (230,523,701 samples, 0.72%)</title><rect x="35.1" y="165" width="8.5" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="38.10" y="175.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (15,122,246 samples, 0.05%)</title><rect x="1187.3" y="437" width="0.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1190.30" y="447.5" ></text>
</g>
<g >
<title>scheduler_tick (45,010,615 samples, 0.14%)</title><rect x="879.0" y="325" width="1.7" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="881.99" y="335.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (4,337,983 samples, 0.01%)</title><rect x="878.2" y="405" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="881.20" y="415.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::xsgetn (554,740,083 samples, 1.74%)</title><rect x="72.7" y="405" width="20.5" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="75.71" y="415.5" ></text>
</g>
<g >
<title>terminate_walk (4,297,561 samples, 0.01%)</title><rect x="50.6" y="261" width="0.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="53.57" y="271.5" ></text>
</g>
<g >
<title>mntput (4,274,142 samples, 0.01%)</title><rect x="67.8" y="309" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="70.82" y="319.5" ></text>
</g>
<g >
<title>update_cfs_group (4,331,969 samples, 0.01%)</title><rect x="1045.3" y="293" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1048.34" y="303.5" ></text>
</g>
<g >
<title>update_wall_time (4,234,201 samples, 0.01%)</title><rect x="1044.4" y="309" width="0.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1047.39" y="319.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (4,306,601 samples, 0.01%)</title><rect x="49.3" y="245" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="52.35" y="255.5" ></text>
</g>
<g >
<title>__fsnotify_parent (31,027,305 samples, 0.10%)</title><rect x="28.8" y="197" width="1.2" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="31.84" y="207.5" ></text>
</g>
<g >
<title>do_user_addr_fault (3,126,839 samples, 0.01%)</title><rect x="1188.9" y="293" width="0.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1191.86" y="303.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (20,004,880 samples, 0.06%)</title><rect x="75.3" y="341" width="0.7" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="78.27" y="351.5" ></text>
</g>
<g >
<title>perf_event_task_tick (4,237,801 samples, 0.01%)</title><rect x="879.2" y="309" width="0.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="882.15" y="319.5" ></text>
</g>
<g >
<title>generic_file_read_iter (140,684,175 samples, 0.44%)</title><rect x="81.1" y="261" width="5.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="84.05" y="271.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (66,348,048 samples, 0.21%)</title><rect x="878.4" y="421" width="2.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="881.36" y="431.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (146,811,551 samples, 0.46%)</title><rect x="80.8" y="277" width="5.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="83.83" y="287.5" ></text>
</g>
<g >
<title>do_open (560,592,170 samples, 1.76%)</title><rect x="23.5" y="245" width="20.8" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="26.54" y="255.5" ></text>
</g>
<g >
<title>lockref_get_not_dead (4,308,951 samples, 0.01%)</title><rect x="24.9" y="181" width="0.1" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="27.87" y="191.5" ></text>
</g>
<g >
<title>std::basic_ifstream&lt;char, std::char_traits&lt;char&gt; &gt;::close (292,842,419 samples, 0.92%)</title><rect x="59.0" y="469" width="10.9" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="62.05" y="479.5" ></text>
</g>
<g >
<title>__fsnotify_parent (32,094,707 samples, 0.10%)</title><rect x="64.0" y="293" width="1.2" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="66.99" y="303.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (18,832,051 samples, 0.06%)</title><rect x="61.1" y="357" width="0.7" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="64.09" y="367.5" ></text>
</g>
<g >
<title>locks_remove_posix (10,556,380 samples, 0.03%)</title><rect x="68.8" y="309" width="0.4" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="71.77" y="319.5" ></text>
</g>
<g >
<title>xas_start (4,269,831 samples, 0.01%)</title><rect x="84.1" y="181" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="87.07" y="191.5" ></text>
</g>
<g >
<title>update_cfs_group (4,291,615 samples, 0.01%)</title><rect x="1044.8" y="277" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1047.78" y="287.5" ></text>
</g>
<g >
<title>atime_needs_update (33,054,240 samples, 0.10%)</title><rect x="84.9" y="213" width="1.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="87.87" y="223.5" ></text>
</g>
<g >
<title>prepend_path (108,482,125 samples, 0.34%)</title><rect x="39.0" y="85" width="4.0" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="41.97" y="95.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (6,576,238 samples, 0.02%)</title><rect x="77.5" y="293" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="80.50" y="303.5" ></text>
</g>
<g >
<title>path_openat (845,473,579 samples, 2.65%)</title><rect x="19.3" y="261" width="31.3" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="22.33" y="271.5" >pa..</text>
</g>
<g >
<title>init_file (40,716,609 samples, 0.13%)</title><rect x="21.2" y="229" width="1.5" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="24.20" y="239.5" ></text>
</g>
<g >
<title>lookup_fast (8,574,527 samples, 0.03%)</title><rect x="48.9" y="229" width="0.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="51.95" y="239.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (6,520,578 samples, 0.02%)</title><rect x="1045.7" y="389" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1048.66" y="399.5" ></text>
</g>
<g >
<title>do_syscall_64 (226,815,368 samples, 0.71%)</title><rect x="60.9" y="373" width="8.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="63.94" y="383.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (8,625,354 samples, 0.03%)</title><rect x="55.7" y="357" width="0.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="58.71" y="367.5" ></text>
</g>
<g >
<title>trigger_load_balance (6,513,472 samples, 0.02%)</title><rect x="1045.1" y="293" width="0.2" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="1048.10" y="303.5" ></text>
</g>
<g >
<title>apparmor_file_open (249,638,281 samples, 0.78%)</title><rect x="34.6" y="181" width="9.2" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="37.55" y="191.5" ></text>
</g>
<g >
<title>dget_parent (8,871,912 samples, 0.03%)</title><rect x="31.0" y="165" width="0.4" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="34.04" y="175.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (4,234,201 samples, 0.01%)</title><rect x="1044.4" y="341" width="0.1" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="1047.39" y="351.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (60,032,802 samples, 0.19%)</title><rect x="878.5" y="389" width="2.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="881.52" y="399.5" ></text>
</g>
<g >
<title>__virt_addr_valid (8,515,051 samples, 0.03%)</title><rect x="54.5" y="197" width="0.3" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="57.50" y="207.5" ></text>
</g>
<g >
<title>inode_permission (41,914,560 samples, 0.13%)</title><rect x="46.0" y="229" width="1.5" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="48.97" y="239.5" ></text>
</g>
<g >
<title>_IO_new_file_init_internal (6,343,008 samples, 0.02%)</title><rect x="56.7" y="405" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="59.66" y="415.5" ></text>
</g>
<g >
<title>update_process_times (51,438,521 samples, 0.16%)</title><rect x="878.8" y="341" width="1.9" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="881.83" y="351.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (8,618,571 samples, 0.03%)</title><rect x="92.9" y="373" width="0.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="95.89" y="383.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64 (4,305,658 samples, 0.01%)</title><rect x="878.6" y="341" width="0.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="881.59" y="351.5" ></text>
</g>
<g >
<title>filemap_get_read_batch (12,682,749 samples, 0.04%)</title><rect x="83.8" y="213" width="0.4" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="86.75" y="223.5" ></text>
</g>
<g >
<title>dget_parent (4,309,095 samples, 0.01%)</title><rect x="34.2" y="165" width="0.1" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="37.16" y="175.5" ></text>
</g>
<g >
<title>__fput_sync (6,609,962 samples, 0.02%)</title><rect x="61.9" y="341" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="64.95" y="351.5" ></text>
</g>
<g >
<title>security_file_permission (53,966,700 samples, 0.17%)</title><rect x="90.4" y="261" width="2.0" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="93.42" y="271.5" ></text>
</g>
<g >
<title>handle_fasteoi_irq (4,246,171 samples, 0.01%)</title><rect x="878.0" y="405" width="0.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="881.04" y="415.5" ></text>
</g>
<g >
<title>dget_parent (6,470,939 samples, 0.02%)</title><rect x="64.5" y="277" width="0.3" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="67.54" y="287.5" ></text>
</g>
<g >
<title>malloc (8,712,485 samples, 0.03%)</title><rect x="57.0" y="405" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="59.97" y="415.5" ></text>
</g>
<g >
<title>update_wall_time (4,305,658 samples, 0.01%)</title><rect x="878.6" y="325" width="0.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="881.59" y="335.5" ></text>
</g>
<g >
<title>fsnotify (4,287,683 samples, 0.01%)</title><rect x="64.9" y="277" width="0.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="67.94" y="287.5" ></text>
</g>
<g >
<title>file_close_fd (4,311,315 samples, 0.01%)</title><rect x="68.1" y="325" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="71.14" y="335.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,029,908,729 samples, 3.22%)</title><rect x="17.5" y="341" width="38.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="20.50" y="351.5" >do_..</text>
</g>
<g >
<title>try_to_unlazy (22,276,438 samples, 0.07%)</title><rect x="24.2" y="213" width="0.8" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="27.21" y="223.5" ></text>
</g>
<g >
<title>__strstr_generic (4,211,084 samples, 0.01%)</title><rect x="56.5" y="389" width="0.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="59.50" y="399.5" ></text>
</g>
<g >
<title>aa_dfa_match (38,132,090 samples, 0.12%)</title><rect x="36.4" y="117" width="1.4" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="39.37" y="127.5" ></text>
</g>
<g >
<title>__schedule (4,329,569 samples, 0.01%)</title><rect x="878.2" y="373" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="881.20" y="383.5" ></text>
</g>
<g >
<title>__rcu_read_lock (8,537,862 samples, 0.03%)</title><rect x="88.0" y="245" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="91.01" y="255.5" ></text>
</g>
<g >
<title>__GI__IO_un_link.part.0 (4,283,879 samples, 0.01%)</title><rect x="60.4" y="405" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="63.39" y="415.5" ></text>
</g>
<g >
<title>__memcg_slab_free_hook (11,570,228 samples, 0.04%)</title><rect x="66.1" y="277" width="0.5" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="69.13" y="287.5" ></text>
</g>
<g >
<title>__GI___libc_open (6,382,624 samples, 0.02%)</title><rect x="73.4" y="373" width="0.2" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="76.37" y="383.5" ></text>
</g>
<g >
<title>std::codecvt&lt;char, char, __mbstate_t&gt;::do_always_noconv (2,860,124 samples, 0.01%)</title><rect x="93.2" y="421" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="96.21" y="431.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (237,433,415 samples, 0.74%)</title><rect x="60.6" y="389" width="8.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="63.62" y="399.5" ></text>
</g>
<g >
<title>touch_atime (44,110,058 samples, 0.14%)</title><rect x="84.5" y="229" width="1.6" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="87.46" y="239.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsgetn (576,814,352 samples, 1.81%)</title><rect x="72.0" y="437" width="21.3" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="75.00" y="447.5" >s..</text>
</g>
<g >
<title>__fsnotify_parent (39,147,220 samples, 0.12%)</title><rect x="79.3" y="277" width="1.4" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="82.30" y="287.5" ></text>
</g>
<g >
<title>tick_sched_handle (53,602,898 samples, 0.17%)</title><rect x="878.8" y="357" width="1.9" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="881.75" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (4,453,423,908 samples, 13.94%)</title><rect x="881.4" y="453" width="164.5" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="884.36" y="463.5" >std::vector&lt;int, std:..</text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (31,930,883,735 samples, 99.98%)</title><rect x="10.3" y="581" width="1179.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="13.26" y="591.5" >[libstdc++.so.6.0.33]</text>
</g>
<g >
<title>get_unused_fd_flags (29,427,368 samples, 0.09%)</title><rect x="50.8" y="277" width="1.1" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="53.81" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (3,569,271,234 samples, 11.18%)</title><rect x="1056.0" y="469" width="131.9" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1058.99" y="479.5" >std::vector&lt;int,..</text>
</g>
<g >
<title>asm_sysvec_reschedule_ipi (6,520,578 samples, 0.02%)</title><rect x="1045.7" y="437" width="0.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1048.66" y="447.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (4,669,640 samples, 0.01%)</title><rect x="877.9" y="373" width="0.1" height="15.0" fill="rgb(236,147,35)" rx="2" ry="2" />
<text  x="880.87" y="383.5" ></text>
</g>
<g >
<title>account_user_time (4,287,189 samples, 0.01%)</title><rect x="878.8" y="309" width="0.2" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="881.83" y="319.5" ></text>
</g>
<g >
<title>dput (4,262,975 samples, 0.01%)</title><rect x="64.8" y="277" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="67.78" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_default_initialize (8,553,091 samples, 0.03%)</title><rect x="1188.7" y="453" width="0.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1191.66" y="463.5" ></text>
</g>
<g >
<title>vfs_open (455,828,714 samples, 1.43%)</title><rect x="27.4" y="229" width="16.9" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="30.41" y="239.5" ></text>
</g>
<g >
<title>rw_verify_area (168,999,032 samples, 0.53%)</title><rect x="86.3" y="277" width="6.2" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="89.25" y="287.5" ></text>
</g>
<g >
<title>copy_page_to_iter (21,483,486 samples, 0.07%)</title><rect x="82.6" y="229" width="0.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="85.56" y="239.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::underflow (565,336,184 samples, 1.77%)</title><rect x="72.3" y="421" width="20.9" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="75.32" y="431.5" ></text>
</g>
<g >
<title>__memset (27,689,594 samples, 0.09%)</title><rect x="52.4" y="245" width="1.0" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="55.37" y="255.5" ></text>
</g>
<g >
<title>common_interrupt (4,087,786 samples, 0.01%)</title><rect x="1187.1" y="437" width="0.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1190.15" y="447.5" ></text>
</g>
<g >
<title>dnotify_flush (4,299,716 samples, 0.01%)</title><rect x="68.6" y="309" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="71.61" y="319.5" ></text>
</g>
<g >
<title>schedule (4,329,569 samples, 0.01%)</title><rect x="878.2" y="389" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="881.20" y="399.5" ></text>
</g>
<g >
<title>ima_file_check (23,275,265 samples, 0.07%)</title><rect x="25.0" y="229" width="0.9" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="28.03" y="239.5" ></text>
</g>
<g >
<title>security_current_getlsmblob_subj (4,308,750 samples, 0.01%)</title><rect x="25.7" y="213" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="28.73" y="223.5" ></text>
</g>
<g >
<title>__x64_sys_openat (1,012,283,799 samples, 3.17%)</title><rect x="18.1" y="309" width="37.4" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="21.15" y="319.5" >__x..</text>
</g>
<g >
<title>filemap_get_pages (27,957,622 samples, 0.09%)</title><rect x="83.3" y="229" width="1.1" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="86.35" y="239.5" ></text>
</g>
<g >
<title>dput (4,240,384 samples, 0.01%)</title><rect x="31.4" y="165" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="34.36" y="175.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (29,915,176 samples, 0.09%)</title><rect x="1044.4" y="357" width="1.1" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1047.39" y="367.5" ></text>
</g>
<g >
<title>x64_sys_call (4,305,356 samples, 0.01%)</title><rect x="55.5" y="341" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="58.55" y="351.5" ></text>
</g>
<g >
<title>handle_irq_event (4,087,786 samples, 0.01%)</title><rect x="1187.1" y="389" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1190.15" y="399.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (4,305,658 samples, 0.01%)</title><rect x="878.6" y="357" width="0.2" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="881.59" y="367.5" ></text>
</g>
<g >
<title>vfs_read (397,014,622 samples, 1.24%)</title><rect x="77.9" y="293" width="14.7" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="80.90" y="303.5" ></text>
</g>
<g >
<title>filemap_read (127,309,140 samples, 0.40%)</title><rect x="81.4" y="245" width="4.7" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="84.39" y="255.5" ></text>
</g>
<g >
<title>do_sys_openat2 (994,469,690 samples, 3.11%)</title><rect x="18.5" y="293" width="36.8" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="21.54" y="303.5" >do_..</text>
</g>
<g >
<title>security_file_open (316,899,517 samples, 0.99%)</title><rect x="32.3" y="197" width="11.7" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="35.31" y="207.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (4,285,974 samples, 0.01%)</title><rect x="58.6" y="437" width="0.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="61.57" y="447.5" ></text>
</g>
<g >
<title>strncpy_from_user (36,329,045 samples, 0.11%)</title><rect x="53.9" y="245" width="1.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="56.86" y="255.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (112,036,564 samples, 0.35%)</title><rect x="44.3" y="245" width="4.1" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="47.25" y="255.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (10,389,215 samples, 0.03%)</title><rect x="53.4" y="245" width="0.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="56.40" y="255.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (4,295,532 samples, 0.01%)</title><rect x="92.7" y="357" width="0.2" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="95.73" y="367.5" ></text>
</g>
<g >
<title>our_mnt (15,038,364 samples, 0.05%)</title><rect x="43.1" y="117" width="0.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="46.06" y="127.5" ></text>
</g>
<g >
<title>alloc_empty_file (92,452,916 samples, 0.29%)</title><rect x="20.1" y="245" width="3.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="23.13" y="255.5" ></text>
</g>
<g >
<title>__fput (144,500,590 samples, 0.45%)</title><rect x="62.5" y="309" width="5.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="65.48" y="319.5" ></text>
</g>
<g >
<title>_IO_link_in (6,343,008 samples, 0.02%)</title><rect x="56.7" y="389" width="0.2" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="59.66" y="399.5" ></text>
</g>
<g >
<title>clone3 (31,930,910,492 samples, 99.98%)</title><rect x="10.3" y="613" width="1179.7" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="13.26" y="623.5" >clone3</text>
</g>
<g >
<title>entry_SYSCALL_64 (8,378,254 samples, 0.03%)</title><rect x="16.5" y="405" width="0.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="19.48" y="415.5" ></text>
</g>
<g >
<title>mntput (6,455,361 samples, 0.02%)</title><rect x="66.9" y="293" width="0.3" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="69.95" y="303.5" ></text>
</g>
<g >
<title>tick_sched_handle (8,645,764 samples, 0.03%)</title><rect x="1187.4" y="357" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1190.38" y="367.5" ></text>
</g>
<g >
<title>handle_irq_event (4,246,171 samples, 0.01%)</title><rect x="878.0" y="389" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="881.04" y="399.5" ></text>
</g>
<g >
<title>idle_cpu (6,309,424 samples, 0.02%)</title><rect x="880.1" y="261" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="883.10" y="271.5" ></text>
</g>
<g >
<title>std::locale::~locale (4,158,477 samples, 0.01%)</title><rect x="70.0" y="453" width="0.2" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="73.04" y="463.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::close (6,288,734 samples, 0.02%)</title><rect x="14.9" y="469" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="17.88" y="479.5" ></text>
</g>
<g >
<title>_int_malloc (15,051,636 samples, 0.05%)</title><rect x="57.6" y="389" width="0.6" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="60.61" y="399.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (11,161,002 samples, 0.03%)</title><rect x="17.7" y="325" width="0.4" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="20.66" y="335.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (20,507,656 samples, 0.06%)</title><rect x="22.7" y="229" width="0.8" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="25.70" y="239.5" ></text>
</g>
<g >
<title>get_cached_acl_rcu (4,183,038 samples, 0.01%)</title><rect x="47.3" y="197" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="50.28" y="207.5" ></text>
</g>
<g >
<title>current_time (12,881,402 samples, 0.04%)</title><rect x="85.5" y="197" width="0.4" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="88.47" y="207.5" ></text>
</g>
<g >
<title>std::locale::locale (4,301,110 samples, 0.01%)</title><rect x="58.9" y="453" width="0.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="61.89" y="463.5" ></text>
</g>
<g >
<title>arch_scale_freq_tick (4,284,481 samples, 0.01%)</title><rect x="879.0" y="309" width="0.2" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="881.99" y="319.5" ></text>
</g>
<g >
<title>_copy_to_iter (19,333,745 samples, 0.06%)</title><rect x="82.6" y="213" width="0.7" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="85.63" y="223.5" ></text>
</g>
<g >
<title>copy_page_to_iter (4,305,165 samples, 0.01%)</title><rect x="81.2" y="245" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="84.23" y="255.5" ></text>
</g>
<g >
<title>std::istream::gcount (10,742,097 samples, 0.03%)</title><rect x="1189.4" y="485" width="0.4" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1192.37" y="495.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (8,660,404 samples, 0.03%)</title><rect x="91.5" y="229" width="0.3" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="94.46" y="239.5" ></text>
</g>
<g >
<title>update_load_avg (8,561,920 samples, 0.03%)</title><rect x="879.5" y="293" width="0.4" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="882.55" y="303.5" ></text>
</g>
<g >
<title>std::istream::read (6,210,336 samples, 0.02%)</title><rect x="1189.8" y="485" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1192.77" y="495.5" ></text>
</g>
<g >
<title>exc_page_fault (3,126,839 samples, 0.01%)</title><rect x="1188.9" y="309" width="0.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1191.86" y="319.5" ></text>
</g>
<g >
<title>__GI___libc_open (1,055,670,538 samples, 3.31%)</title><rect x="17.2" y="373" width="39.0" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="20.18" y="383.5" >__G..</text>
</g>
<g >
<title>int* std::__uninitialized_default_n_a&lt;int*, unsigned long, int&gt; (8,553,091 samples, 0.03%)</title><rect x="1188.7" y="437" width="0.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1191.66" y="447.5" ></text>
</g>
<g >
<title>get_cached_acl (6,446,481 samples, 0.02%)</title><rect x="26.9" y="165" width="0.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="29.85" y="175.5" ></text>
</g>
<g >
<title>_int_free (6,456,493 samples, 0.02%)</title><rect x="69.6" y="405" width="0.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="72.63" y="415.5" ></text>
</g>
<g >
<title>lockref_put_return (4,151,742 samples, 0.01%)</title><rect x="31.5" y="165" width="0.2" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="34.52" y="175.5" ></text>
</g>
<g >
<title>aa_file_perm (14,941,419 samples, 0.05%)</title><rect x="91.8" y="229" width="0.5" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="94.78" y="239.5" ></text>
</g>
<g >
<title>void std::__invoke_impl&lt;void, void  (31,930,883,735 samples, 99.98%)</title><rect x="10.3" y="501" width="1179.7" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="13.26" y="511.5" >void std::__invoke_impl&lt;void, void </text>
</g>
<g >
<title>get_unused_fd_flags (5,093,010 samples, 0.02%)</title><rect x="55.3" y="293" width="0.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="58.28" y="303.5" ></text>
</g>
<g >
<title>timekeeping_update (4,234,201 samples, 0.01%)</title><rect x="1044.4" y="277" width="0.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1047.39" y="287.5" ></text>
</g>
<g >
<title>do_anonymous_page (3,126,839 samples, 0.01%)</title><rect x="1188.9" y="229" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1191.86" y="239.5" ></text>
</g>
<g >
<title>step_into (6,461,115 samples, 0.02%)</title><rect x="48.1" y="197" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="51.07" y="207.5" ></text>
</g>
<g >
<title>__memset (10,917,845 samples, 0.03%)</title><rect x="20.8" y="229" width="0.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="23.80" y="239.5" ></text>
</g>
<g >
<title>do_dentry_open (449,354,906 samples, 1.41%)</title><rect x="27.5" y="213" width="16.6" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="30.49" y="223.5" ></text>
</g>
<g >
<title>sysvec_reschedule_ipi (6,520,578 samples, 0.02%)</title><rect x="1045.7" y="421" width="0.2" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="1048.66" y="431.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void  (31,930,883,735 samples, 99.98%)</title><rect x="10.3" y="565" width="1179.7" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="13.26" y="575.5" >std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void </text>
</g>
<g >
<title>x64_sys_call (199,524,380 samples, 0.62%)</title><rect x="61.9" y="357" width="7.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="64.95" y="367.5" ></text>
</g>
<g >
<title>common_interrupt (13,253,794 samples, 0.04%)</title><rect x="877.9" y="437" width="0.5" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="880.87" y="447.5" ></text>
</g>
<g >
<title>std::locale::locale (4,248,838 samples, 0.01%)</title><rect x="15.8" y="437" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="18.83" y="447.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::clear (10,716,792 samples, 0.03%)</title><rect x="70.2" y="469" width="0.4" height="15.0" fill="rgb(220,71,16)" rx="2" ry="2" />
<text  x="73.19" y="479.5" ></text>
</g>
<g >
<title>__rcu_read_lock (5,373,399 samples, 0.02%)</title><rect x="79.7" y="261" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="82.70" y="271.5" ></text>
</g>
<g >
<title>scheduler_tick (6,466,095 samples, 0.02%)</title><rect x="1187.5" y="325" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1190.46" y="335.5" ></text>
</g>
<g >
<title>dput (8,606,688 samples, 0.03%)</title><rect x="65.5" y="293" width="0.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="68.49" y="303.5" ></text>
</g>
<g >
<title>mntput_no_expire (6,455,361 samples, 0.02%)</title><rect x="66.9" y="277" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="69.95" y="287.5" ></text>
</g>
<g >
<title>copy_from_kernel_nofault (27,435,311 samples, 0.09%)</title><rect x="41.8" y="37" width="1.0" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="44.82" y="47.5" ></text>
</g>
<g >
<title>_dl_start (3,653,310 samples, 0.01%)</title><rect x="10.1" y="597" width="0.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="13.08" y="607.5" ></text>
</g>
<g >
<title>apparmor_file_alloc_security (4,310,960 samples, 0.01%)</title><rect x="22.1" y="197" width="0.2" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="25.15" y="207.5" ></text>
</g>
<g >
<title>locks_remove_file (4,301,929 samples, 0.01%)</title><rect x="66.8" y="293" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="69.79" y="303.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (10,732,935 samples, 0.03%)</title><rect x="58.4" y="453" width="0.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="61.41" y="463.5" ></text>
</g>
<g >
<title>open_last_lookups (19,276,997 samples, 0.06%)</title><rect x="48.6" y="245" width="0.7" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="51.55" y="255.5" ></text>
</g>
<g >
<title>d_namespace_path.constprop.0 (121,331,983 samples, 0.38%)</title><rect x="38.6" y="117" width="4.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="41.58" y="127.5" ></text>
</g>
<g >
<title>check_heap_object (6,318,072 samples, 0.02%)</title><rect x="54.8" y="197" width="0.2" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="57.81" y="207.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (4,306,563 samples, 0.01%)</title><rect x="30.9" y="165" width="0.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="33.88" y="175.5" ></text>
</g>
<g >
<title>__common_interrupt (8,915,811 samples, 0.03%)</title><rect x="877.9" y="421" width="0.3" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="880.87" y="431.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (513,307,566 samples, 1.61%)</title><rect x="73.9" y="373" width="19.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="76.92" y="383.5" ></text>
</g>
<g >
<title>task_tick_fair (8,464,575 samples, 0.03%)</title><rect x="1044.8" y="293" width="0.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1047.78" y="303.5" ></text>
</g>
<g >
<title>xas_load (4,303,232 samples, 0.01%)</title><rect x="84.2" y="213" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="87.22" y="223.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (15,122,246 samples, 0.05%)</title><rect x="1187.3" y="421" width="0.6" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1190.30" y="431.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsgetn (600,794,553 samples, 1.88%)</title><rect x="71.1" y="453" width="22.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="74.12" y="463.5" >s..</text>
</g>
<g >
<title>tick_sched_handle (25,680,975 samples, 0.08%)</title><rect x="1044.5" y="341" width="1.0" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1047.55" y="351.5" ></text>
</g>
<g >
<title>generic_permission (23,188,112 samples, 0.07%)</title><rect x="46.6" y="213" width="0.8" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="49.58" y="223.5" ></text>
</g>
<g >
<title>inode_to_bdi (4,235,190 samples, 0.01%)</title><rect x="31.9" y="197" width="0.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="34.91" y="207.5" ></text>
</g>
<g >
<title>trigger_load_balance (4,308,829 samples, 0.01%)</title><rect x="1187.5" y="309" width="0.2" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="1190.54" y="319.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (4,187,995 samples, 0.01%)</title><rect x="880.8" y="405" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="883.81" y="415.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (4,316,993 samples, 0.01%)</title><rect x="92.6" y="357" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="95.57" y="367.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (15,122,246 samples, 0.05%)</title><rect x="1187.3" y="453" width="0.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1190.30" y="463.5" ></text>
</g>
<g >
<title>__schedule (6,520,347 samples, 0.02%)</title><rect x="1045.7" y="357" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1048.66" y="367.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (57,908,556 samples, 0.18%)</title><rect x="878.6" y="373" width="2.1" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="881.59" y="383.5" ></text>
</g>
<g >
<title>lockref_get_not_zero (6,462,000 samples, 0.02%)</title><rect x="29.3" y="165" width="0.3" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="32.32" y="175.5" ></text>
</g>
<g >
<title>process_measurement (10,788,388 samples, 0.03%)</title><rect x="25.3" y="213" width="0.4" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="28.34" y="223.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (4,310,833 samples, 0.01%)</title><rect x="67.2" y="293" width="0.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="70.19" y="303.5" ></text>
</g>
<g >
<title>__fput_sync (152,348,663 samples, 0.48%)</title><rect x="62.4" y="325" width="5.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="65.43" y="335.5" ></text>
</g>
<g >
<title>fsnotify (5,152,881 samples, 0.02%)</title><rect x="29.7" y="181" width="0.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="32.72" y="191.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::open (6,289,175 samples, 0.02%)</title><rect x="15.1" y="469" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="18.11" y="479.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (3,653,310 samples, 0.01%)</title><rect x="10.1" y="581" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="13.08" y="591.5" ></text>
</g>
<g >
<title>std::istream::sentry::sentry (8,521,145 samples, 0.03%)</title><rect x="93.4" y="453" width="0.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="96.39" y="463.5" ></text>
</g>
<g >
<title>update_curr (4,326,927 samples, 0.01%)</title><rect x="879.4" y="293" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="882.39" y="303.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_terminate_output (6,284,770 samples, 0.02%)</title><rect x="59.0" y="453" width="0.3" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="62.05" y="463.5" ></text>
</g>
<g >
<title>complete_walk (22,276,438 samples, 0.07%)</title><rect x="24.2" y="229" width="0.8" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="27.21" y="239.5" ></text>
</g>
<g >
<title>__common_interrupt (4,087,786 samples, 0.01%)</title><rect x="1187.1" y="421" width="0.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1190.15" y="431.5" ></text>
</g>
<g >
<title>fscrypt_file_open (31,121,157 samples, 0.10%)</title><rect x="30.5" y="181" width="1.2" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="33.52" y="191.5" ></text>
</g>
<g >
<title>__aa_path_perm (59,960,933 samples, 0.19%)</title><rect x="35.6" y="149" width="2.2" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="38.57" y="159.5" ></text>
</g>
<g >
<title>apparmor_current_getlsmblob_subj (6,407,911 samples, 0.02%)</title><rect x="25.1" y="213" width="0.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="28.10" y="223.5" ></text>
</g>
<g >
<title>kmem_cache_free (20,198,903 samples, 0.06%)</title><rect x="66.0" y="293" width="0.7" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="68.97" y="303.5" ></text>
</g>
<g >
<title>fsnotify (6,468,408 samples, 0.02%)</title><rect x="80.5" y="261" width="0.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="83.51" y="271.5" ></text>
</g>
<g >
<title>nohz_balancer_kick (12,803,220 samples, 0.04%)</title><rect x="879.9" y="293" width="0.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="882.86" y="303.5" ></text>
</g>
<g >
<title>std::basic_ifstream&lt;char, std::char_traits&lt;char&gt; &gt;::close (4,302,406 samples, 0.01%)</title><rect x="1189.1" y="485" width="0.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1192.05" y="495.5" ></text>
</g>
<g >
<title>int* std::__uninitialized_default_n&lt;int*, unsigned long&gt; (8,553,091 samples, 0.03%)</title><rect x="1188.7" y="421" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1191.66" y="431.5" ></text>
</g>
<g >
<title>aa_path_name (147,077,743 samples, 0.46%)</title><rect x="38.2" y="133" width="5.4" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="41.18" y="143.5" ></text>
</g>
<g >
<title>__d_lookup_rcu (6,424,727 samples, 0.02%)</title><rect x="49.0" y="213" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="52.03" y="223.5" ></text>
</g>
<g >
<title>fopen@@GLIBC_2.2.5 (1,096,295,627 samples, 3.43%)</title><rect x="16.8" y="421" width="40.5" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="19.79" y="431.5" >fop..</text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_destroy_internal_buffer (6,456,493 samples, 0.02%)</title><rect x="69.6" y="437" width="0.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="72.63" y="447.5" ></text>
</g>
<g >
<title>dput (12,848,447 samples, 0.04%)</title><rect x="88.9" y="245" width="0.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="91.87" y="255.5" ></text>
</g>
<g >
<title>dget_parent (12,499,526 samples, 0.04%)</title><rect x="88.4" y="245" width="0.5" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="91.41" y="255.5" ></text>
</g>
<g >
<title>std::basic_ifstream&lt;char, std::char_traits&lt;char&gt; &gt;::basic_ifstream (1,180,787,358 samples, 3.70%)</title><rect x="15.4" y="469" width="43.6" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="18.42" y="479.5" >std:..</text>
</g>
<g >
<title>__hrtimer_run_queues (32,074,957 samples, 0.10%)</title><rect x="1044.3" y="373" width="1.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1047.31" y="383.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_allocate_internal_buffer (23,628,999 samples, 0.07%)</title><rect x="57.3" y="437" width="0.9" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="60.29" y="447.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (4,296,479 samples, 0.01%)</title><rect x="58.4" y="437" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="61.41" y="447.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (6,436,312 samples, 0.02%)</title><rect x="73.7" y="373" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="76.69" y="383.5" ></text>
</g>
<g >
<title>get_inode_acl (10,764,800 samples, 0.03%)</title><rect x="26.7" y="181" width="0.4" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="29.69" y="191.5" ></text>
</g>
<g >
<title>aa_put_buffer (4,309,926 samples, 0.01%)</title><rect x="43.6" y="165" width="0.2" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="46.62" y="175.5" ></text>
</g>
<g >
<title>copy_from_kernel_nofault_allowed (3,999,549 samples, 0.01%)</title><rect x="42.8" y="37" width="0.2" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="45.83" y="47.5" ></text>
</g>
<g >
<title>walk_component (17,293,987 samples, 0.05%)</title><rect x="47.8" y="229" width="0.6" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="50.75" y="239.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (4,317,567 samples, 0.01%)</title><rect x="29.1" y="181" width="0.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="32.08" y="191.5" ></text>
</g>
<g >
<title>security_file_free (10,624,173 samples, 0.03%)</title><rect x="67.3" y="293" width="0.4" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="70.35" y="303.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (6,382,624 samples, 0.02%)</title><rect x="73.4" y="357" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="76.37" y="367.5" ></text>
</g>
<g >
<title>__x64_sys_read (446,086,731 samples, 1.40%)</title><rect x="76.1" y="325" width="16.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="79.09" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (273,101,639 samples, 0.86%)</title><rect x="1045.9" y="453" width="10.1" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1048.90" y="463.5" ></text>
</g>
<g >
<title>both (31,938,043,604 samples, 100.00%)</title><rect x="10.0" y="629" width="1180.0" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="13.00" y="639.5" >both</text>
</g>
<g >
<title>hrtimer_interrupt (64,285,799 samples, 0.20%)</title><rect x="878.4" y="405" width="2.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="881.44" y="415.5" ></text>
</g>
<g >
<title>fsnotify (22,732,195 samples, 0.07%)</title><rect x="89.3" y="245" width="0.9" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="92.35" y="255.5" ></text>
</g>
<g >
<title>may_open (38,948,237 samples, 0.12%)</title><rect x="25.9" y="229" width="1.4" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="28.89" y="239.5" ></text>
</g>
<g >
<title>__strchr_avx2 (4,253,867 samples, 0.01%)</title><rect x="56.3" y="389" width="0.2" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="59.34" y="399.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (19,772,670 samples, 0.06%)</title><rect x="71.2" y="437" width="0.7" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="74.19" y="447.5" ></text>
</g>
</g>
</svg>
