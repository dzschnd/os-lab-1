<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="710" onload="init(evt)" viewBox="0 0 1200 710" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="710.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="693" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="693" > </text>
<g id="frames">
<g >
<title>__rcu_read_unlock (4,189,569 samples, 0.02%)</title><rect x="87.7" y="229" width="0.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="90.69" y="239.5" ></text>
</g>
<g >
<title>std::basic_ifstream&lt;char, std::char_traits&lt;char&gt; &gt;::close (220,726,587 samples, 0.93%)</title><rect x="60.0" y="485" width="11.0" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="62.97" y="495.5" ></text>
</g>
<g >
<title>std::operator| (2,172,665 samples, 0.01%)</title><rect x="96.1" y="485" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="99.11" y="495.5" ></text>
</g>
<g >
<title>__check_object_size.part.0 (12,996,045 samples, 0.06%)</title><rect x="56.3" y="229" width="0.6" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="59.29" y="239.5" ></text>
</g>
<g >
<title>kmem_cache_free (41,257,588 samples, 0.17%)</title><rect x="66.1" y="309" width="2.1" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="69.11" y="319.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (4,333,714 samples, 0.02%)</title><rect x="68.0" y="293" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="70.96" y="303.5" ></text>
</g>
<g >
<title>alloc_empty_file (108,501,771 samples, 0.46%)</title><rect x="19.9" y="261" width="5.4" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="22.87" y="271.5" ></text>
</g>
<g >
<title>dquot_file_open (2,167,971 samples, 0.01%)</title><rect x="33.2" y="197" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="36.18" y="207.5" ></text>
</g>
<g >
<title>next_expiry_recalc (2,162,948 samples, 0.01%)</title><rect x="876.8" y="357" width="0.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="879.81" y="367.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (2,156,164 samples, 0.01%)</title><rect x="33.6" y="181" width="0.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="36.61" y="191.5" ></text>
</g>
<g >
<title>update_process_times (6,570,299 samples, 0.03%)</title><rect x="1045.5" y="341" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1048.48" y="351.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::open (893,733,901 samples, 3.78%)</title><rect x="14.9" y="469" width="44.6" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="17.88" y="479.5" >std:..</text>
</g>
<g >
<title>[unknown] (6,550,687 samples, 0.03%)</title><rect x="10.0" y="629" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="639.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (10,884,826 samples, 0.05%)</title><rect x="1188.7" y="485" width="0.6" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1191.72" y="495.5" ></text>
</g>
<g >
<title>rcu_pending (2,157,129 samples, 0.01%)</title><rect x="1045.5" y="309" width="0.1" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="1048.48" y="319.5" ></text>
</g>
<g >
<title>std::basic_ifstream&lt;char, std::char_traits&lt;char&gt; &gt;::basic_ifstream (913,234,368 samples, 3.87%)</title><rect x="14.3" y="485" width="45.7" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="17.34" y="495.5" >std:..</text>
</g>
<g >
<title>std::istream::read (491,855,730 samples, 2.08%)</title><rect x="71.4" y="485" width="24.6" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="74.43" y="495.5" >s..</text>
</g>
<g >
<title>syscall_exit_to_user_mode_prepare (8,721,061 samples, 0.04%)</title><rect x="62.3" y="373" width="0.4" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="65.31" y="383.5" ></text>
</g>
<g >
<title>__check_object_size (2,186,773 samples, 0.01%)</title><rect x="54.8" y="261" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="57.78" y="271.5" ></text>
</g>
<g >
<title>__x64_sys_read (342,242,403 samples, 1.45%)</title><rect x="77.6" y="341" width="17.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="80.60" y="351.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::operator bool (10,892,369 samples, 0.05%)</title><rect x="1189.5" y="501" width="0.5" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1192.46" y="511.5" ></text>
</g>
<g >
<title>locks_remove_posix (6,597,434 samples, 0.03%)</title><rect x="70.4" y="325" width="0.4" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="73.45" y="335.5" ></text>
</g>
<g >
<title>path_init (4,372,362 samples, 0.02%)</title><rect x="19.0" y="277" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="22.01" y="287.5" ></text>
</g>
<g >
<title>__fput_sync (117,271,571 samples, 0.50%)</title><rect x="63.8" y="341" width="5.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="66.83" y="351.5" ></text>
</g>
<g >
<title>__common_interrupt (2,012,674 samples, 0.01%)</title><rect x="1187.6" y="437" width="0.1" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1190.64" y="447.5" ></text>
</g>
<g >
<title>do_sys_openat2 (804,780,512 samples, 3.41%)</title><rect x="17.5" y="309" width="40.2" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="20.49" y="319.5" >do_..</text>
</g>
<g >
<title>__GI___libc_open (4,348,883 samples, 0.02%)</title><rect x="74.2" y="389" width="0.3" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="77.24" y="399.5" ></text>
</g>
<g >
<title>__rcu_read_lock (2,176,965 samples, 0.01%)</title><rect x="32.0" y="197" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="34.97" y="207.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (2,155,287 samples, 0.01%)</title><rect x="1188.5" y="293" width="0.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1191.50" y="303.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::__basic_file (2,186,731 samples, 0.01%)</title><rect x="14.7" y="469" width="0.1" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="17.66" y="479.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (2,174,319 samples, 0.01%)</title><rect x="70.9" y="405" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="73.89" y="415.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (8,386,304 samples, 0.04%)</title><rect x="1045.4" y="453" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1048.38" y="463.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (25,946,385 samples, 0.11%)</title><rect x="76.2" y="357" width="1.3" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="79.20" y="367.5" ></text>
</g>
<g >
<title>scheduler_tick (19,282,500 samples, 0.08%)</title><rect x="875.3" y="341" width="1.0" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="878.31" y="351.5" ></text>
</g>
<g >
<title>dput (2,169,794 samples, 0.01%)</title><rect x="34.2" y="181" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="37.16" y="191.5" ></text>
</g>
<g >
<title>rcu_sched_clock_irq (2,157,129 samples, 0.01%)</title><rect x="1045.5" y="325" width="0.1" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="1048.48" y="335.5" ></text>
</g>
<g >
<title>process_measurement (4,329,837 samples, 0.02%)</title><rect x="29.6" y="245" width="0.2" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="32.59" y="255.5" ></text>
</g>
<g >
<title>do_amd_gpio_irq_handler (6,462,814 samples, 0.03%)</title><rect x="873.5" y="357" width="0.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="876.47" y="367.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (2,232,083 samples, 0.01%)</title><rect x="28.2" y="229" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="31.18" y="239.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (2,249,113 samples, 0.01%)</title><rect x="1045.7" y="293" width="0.1" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="1048.69" y="303.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::close (214,201,144 samples, 0.91%)</title><rect x="60.3" y="469" width="10.7" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="63.29" y="479.5" ></text>
</g>
<g >
<title>aa_put_buffer (2,149,503 samples, 0.01%)</title><rect x="40.9" y="165" width="0.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="43.87" y="175.5" ></text>
</g>
<g >
<title>dput (6,503,825 samples, 0.03%)</title><rect x="92.2" y="261" width="0.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="95.21" y="271.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (2,152,661 samples, 0.01%)</title><rect x="46.5" y="181" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="49.51" y="191.5" ></text>
</g>
<g >
<title>inode_permission (23,842,477 samples, 0.10%)</title><rect x="28.4" y="229" width="1.2" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="31.40" y="239.5" ></text>
</g>
<g >
<title>fast_mix (2,201,253 samples, 0.01%)</title><rect x="873.8" y="389" width="0.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="876.79" y="399.5" ></text>
</g>
<g >
<title>__aa_path_perm (45,547,113 samples, 0.19%)</title><rect x="38.4" y="165" width="2.3" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="41.38" y="175.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::open (874,275,041 samples, 3.70%)</title><rect x="15.2" y="453" width="43.7" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="18.21" y="463.5" >std:..</text>
</g>
<g >
<title>filp_flush (10,860,854 samples, 0.05%)</title><rect x="70.2" y="341" width="0.6" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="73.24" y="351.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (389,984,718 samples, 1.65%)</title><rect x="75.4" y="389" width="19.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="78.44" y="399.5" ></text>
</g>
<g >
<title>update_wall_time (2,183,271 samples, 0.01%)</title><rect x="1187.9" y="341" width="0.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1190.85" y="351.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3,242,547 samples, 0.01%)</title><rect x="10.4" y="549" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="13.36" y="559.5" ></text>
</g>
<g >
<title>alloc_pages_mpol (3,242,547 samples, 0.01%)</title><rect x="10.4" y="293" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="13.36" y="303.5" ></text>
</g>
<g >
<title>vfs_open (345,275,484 samples, 1.46%)</title><rect x="29.8" y="245" width="17.3" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="32.81" y="255.5" ></text>
</g>
<g >
<title>operator new (10,792,252 samples, 0.05%)</title><rect x="59.0" y="437" width="0.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="62.00" y="447.5" ></text>
</g>
<g >
<title>ioapic_ir_ack_level (2,012,674 samples, 0.01%)</title><rect x="1187.6" y="405" width="0.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1190.64" y="415.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (4,350,699 samples, 0.02%)</title><rect x="59.5" y="453" width="0.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="62.54" y="463.5" ></text>
</g>
<g >
<title>try_to_unlazy (11,394,878 samples, 0.05%)</title><rect x="26.5" y="229" width="0.6" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="29.49" y="239.5" ></text>
</g>
<g >
<title>apparmor_current_getlsmblob_subj (5,128,164 samples, 0.02%)</title><rect x="27.9" y="213" width="0.3" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="30.92" y="223.5" ></text>
</g>
<g >
<title>idle_cpu (4,369,176 samples, 0.02%)</title><rect x="876.1" y="277" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="879.06" y="287.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (3,242,547 samples, 0.01%)</title><rect x="10.4" y="373" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="13.36" y="383.5" ></text>
</g>
<g >
<title>__memset (10,829,570 samples, 0.05%)</title><rect x="21.6" y="213" width="0.6" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="24.61" y="223.5" ></text>
</g>
<g >
<title>free_unref_page_list (2,143,922 samples, 0.01%)</title><rect x="1189.3" y="213" width="0.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1192.35" y="223.5" ></text>
</g>
<g >
<title>prepend_path (87,186,417 samples, 0.37%)</title><rect x="41.8" y="101" width="4.4" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="44.85" y="111.5" ></text>
</g>
<g >
<title>aa_str_perms (36,858,112 samples, 0.16%)</title><rect x="38.8" y="149" width="1.9" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="41.81" y="159.5" ></text>
</g>
<g >
<title>update_load_avg (6,523,191 samples, 0.03%)</title><rect x="875.6" y="309" width="0.4" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="878.63" y="319.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (4,359,875 samples, 0.02%)</title><rect x="17.2" y="341" width="0.2" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="20.16" y="351.5" ></text>
</g>
<g >
<title>path_init (6,498,318 samples, 0.03%)</title><rect x="51.6" y="261" width="0.4" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="54.63" y="271.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode_prepare (2,167,382 samples, 0.01%)</title><rect x="77.5" y="357" width="0.1" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="80.49" y="367.5" ></text>
</g>
<g >
<title>file_close_fd (8,692,142 samples, 0.04%)</title><rect x="69.8" y="341" width="0.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="72.80" y="351.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (41,004,913 samples, 0.17%)</title><rect x="874.4" y="437" width="2.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="877.44" y="447.5" ></text>
</g>
<g >
<title>irq_exit_rcu (8,565,596 samples, 0.04%)</title><rect x="876.5" y="437" width="0.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="879.49" y="447.5" ></text>
</g>
<g >
<title>__common_interrupt (2,146,337 samples, 0.01%)</title><rect x="1045.3" y="421" width="0.1" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1048.28" y="431.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (6,662,859 samples, 0.03%)</title><rect x="46.7" y="213" width="0.4" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="49.72" y="223.5" ></text>
</g>
<g >
<title>update_blocked_averages (2,063,329 samples, 0.01%)</title><rect x="876.6" y="373" width="0.1" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="879.60" y="383.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2,143,922 samples, 0.01%)</title><rect x="1189.3" y="405" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1192.35" y="415.5" ></text>
</g>
<g >
<title>common_interrupt (2,012,674 samples, 0.01%)</title><rect x="1187.6" y="453" width="0.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1190.64" y="463.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::is_open (2,176,909 samples, 0.01%)</title><rect x="60.2" y="469" width="0.1" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="63.19" y="479.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (8,386,304 samples, 0.04%)</title><rect x="1045.4" y="421" width="0.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1048.38" y="431.5" ></text>
</g>
<g >
<title>do_syscall_64 (381,306,277 samples, 1.61%)</title><rect x="75.8" y="373" width="19.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="78.76" y="383.5" ></text>
</g>
<g >
<title>fd_install (2,172,017 samples, 0.01%)</title><rect x="53.8" y="293" width="0.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="56.81" y="303.5" ></text>
</g>
<g >
<title>path_get (6,669,429 samples, 0.03%)</title><rect x="34.8" y="213" width="0.3" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="37.80" y="223.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (10,528,668 samples, 0.04%)</title><rect x="52.0" y="261" width="0.5" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="54.96" y="271.5" ></text>
</g>
<g >
<title>__memcg_slab_free_hook (23,903,147 samples, 0.10%)</title><rect x="66.5" y="293" width="1.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="69.54" y="303.5" ></text>
</g>
<g >
<title>fsnotify (2,174,866 samples, 0.01%)</title><rect x="37.4" y="181" width="0.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="40.40" y="191.5" ></text>
</g>
<g >
<title>tick_sched_handle (12,964,222 samples, 0.05%)</title><rect x="1188.0" y="373" width="0.6" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1190.96" y="383.5" ></text>
</g>
<g >
<title>__fsnotify_parent (39,089,900 samples, 0.17%)</title><rect x="35.6" y="197" width="1.9" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="38.56" y="207.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (2,174,566 samples, 0.01%)</title><rect x="94.6" y="325" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="97.59" y="335.5" ></text>
</g>
<g >
<title>update_process_times (12,964,222 samples, 0.05%)</title><rect x="1188.0" y="357" width="0.6" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1190.96" y="367.5" ></text>
</g>
<g >
<title>aa_file_perm (2,121,816 samples, 0.01%)</title><rect x="93.6" y="261" width="0.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="96.62" y="271.5" ></text>
</g>
<g >
<title>trigger_load_balance (6,418,804 samples, 0.03%)</title><rect x="876.0" y="325" width="0.3" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="878.95" y="335.5" ></text>
</g>
<g >
<title>should_failslab.constprop.0 (6,449,856 samples, 0.03%)</title><rect x="55.5" y="261" width="0.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="58.54" y="271.5" ></text>
</g>
<g >
<title>mod_objcg_state (2,168,595 samples, 0.01%)</title><rect x="67.8" y="293" width="0.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="70.85" y="303.5" ></text>
</g>
<g >
<title>_IO_link_in (2,190,289 samples, 0.01%)</title><rect x="58.7" y="405" width="0.1" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="61.67" y="415.5" ></text>
</g>
<g >
<title>get_page_from_freelist (3,242,547 samples, 0.01%)</title><rect x="10.4" y="261" width="0.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="13.36" y="271.5" ></text>
</g>
<g >
<title>read (6,503,449 samples, 0.03%)</title><rect x="10.0" y="597" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="13.00" y="607.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (66,800,364 samples, 0.28%)</title><rect x="47.1" y="261" width="3.3" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="50.06" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (3,380,025,056 samples, 14.31%)</title><rect x="876.9" y="469" width="168.9" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="879.92" y="479.5" >std::vector&lt;int, std:..</text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (2,176,510 samples, 0.01%)</title><rect x="74.4" y="373" width="0.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="77.35" y="383.5" ></text>
</g>
<g >
<title>do_filp_open (709,482,502 samples, 3.00%)</title><rect x="18.4" y="293" width="35.4" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="21.36" y="303.5" >do_..</text>
</g>
<g >
<title>__cond_resched (2,174,561 samples, 0.01%)</title><rect x="78.6" y="293" width="0.1" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="81.57" y="303.5" ></text>
</g>
<g >
<title>__get_free_pages (3,242,547 samples, 0.01%)</title><rect x="10.4" y="325" width="0.1" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="13.36" y="335.5" ></text>
</g>
<g >
<title>__memset (4,310,513 samples, 0.02%)</title><rect x="54.9" y="261" width="0.2" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="57.89" y="271.5" ></text>
</g>
<g >
<title>_dl_start_user (3,896,113 samples, 0.02%)</title><rect x="10.3" y="629" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="13.33" y="639.5" ></text>
</g>
<g >
<title>tick_program_event (2,167,692 samples, 0.01%)</title><rect x="82.2" y="197" width="0.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="85.20" y="207.5" ></text>
</g>
<g >
<title>aa_put_buffer (3,879,887 samples, 0.02%)</title><rect x="46.3" y="181" width="0.2" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="49.31" y="191.5" ></text>
</g>
<g >
<title>lockref_get (8,411,568 samples, 0.04%)</title><rect x="34.4" y="213" width="0.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="37.38" y="223.5" ></text>
</g>
<g >
<title>__munmap (2,143,922 samples, 0.01%)</title><rect x="1189.3" y="421" width="0.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1192.35" y="431.5" ></text>
</g>
<g >
<title>tlb_batch_pages_flush (2,143,922 samples, 0.01%)</title><rect x="1189.3" y="261" width="0.2" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="1192.35" y="271.5" ></text>
</g>
<g >
<title>prepend_copy (43,809,718 samples, 0.19%)</title><rect x="43.8" y="69" width="2.2" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="46.80" y="79.5" ></text>
</g>
<g >
<title>timerqueue_add (2,188,205 samples, 0.01%)</title><rect x="874.4" y="373" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="877.44" y="383.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::xsgetn (433,379,824 samples, 1.84%)</title><rect x="73.8" y="421" width="21.7" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="76.81" y="431.5" >s..</text>
</g>
<g >
<title>__fsnotify_parent (23,859,280 samples, 0.10%)</title><rect x="64.7" y="309" width="1.2" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="67.70" y="319.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (2,142,151 samples, 0.01%)</title><rect x="23.7" y="229" width="0.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="26.67" y="239.5" ></text>
</g>
<g >
<title>__fput_sync (6,519,307 samples, 0.03%)</title><rect x="62.7" y="357" width="0.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="65.75" y="367.5" ></text>
</g>
<g >
<title>__rcu_read_lock (4,355,142 samples, 0.02%)</title><rect x="91.1" y="261" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="94.14" y="271.5" ></text>
</g>
<g >
<title>lockref_put_return (6,889,123 samples, 0.03%)</title><rect x="53.1" y="245" width="0.4" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="56.14" y="255.5" ></text>
</g>
<g >
<title>getname (56,180,838 samples, 0.24%)</title><rect x="54.3" y="293" width="2.9" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="57.35" y="303.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (2,120,177 samples, 0.01%)</title><rect x="25.1" y="245" width="0.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="28.08" y="255.5" ></text>
</g>
<g >
<title>init_file (50,048,399 samples, 0.21%)</title><rect x="20.5" y="245" width="2.5" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="23.52" y="255.5" ></text>
</g>
<g >
<title>security_file_alloc (39,195,387 samples, 0.17%)</title><rect x="21.1" y="229" width="1.9" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="24.07" y="239.5" ></text>
</g>
<g >
<title>handle_softirqs (8,565,596 samples, 0.04%)</title><rect x="876.5" y="405" width="0.4" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="879.49" y="415.5" ></text>
</g>
<g >
<title>all (23,616,585,879 samples, 100%)</title><rect x="10.0" y="661" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="671.5" ></text>
</g>
<g >
<title>ktime_get_update_offsets_now (2,180,963 samples, 0.01%)</title><rect x="876.3" y="405" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="879.27" y="415.5" ></text>
</g>
<g >
<title>read (429,048,555 samples, 1.82%)</title><rect x="74.0" y="405" width="21.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="77.03" y="415.5" >r..</text>
</g>
<g >
<title>both (23,616,583,666 samples, 100.00%)</title><rect x="10.0" y="645" width="1180.0" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="13.00" y="655.5" >both</text>
</g>
<g >
<title>dget_parent (8,675,902 samples, 0.04%)</title><rect x="36.3" y="181" width="0.5" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="39.32" y="191.5" ></text>
</g>
<g >
<title>__rcu_read_lock (4,349,458 samples, 0.02%)</title><rect x="81.9" y="277" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="84.88" y="287.5" ></text>
</g>
<g >
<title>do_dentry_open (2,188,330 samples, 0.01%)</title><rect x="27.1" y="245" width="0.1" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="30.06" y="255.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (4,350,699 samples, 0.02%)</title><rect x="59.5" y="469" width="0.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="62.54" y="479.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;void  (23,606,136,583 samples, 99.96%)</title><rect x="10.5" y="565" width="1179.5" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="13.52" y="575.5" >std::thread::_Invoker&lt;std::tuple&lt;void </text>
</g>
<g >
<title>syscall_return_via_sysret (3,055,253 samples, 0.01%)</title><rect x="58.5" y="373" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="61.51" y="383.5" ></text>
</g>
<g >
<title>lockref_get_not_zero (4,361,547 samples, 0.02%)</title><rect x="33.9" y="165" width="0.3" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="36.94" y="175.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (2,183,271 samples, 0.01%)</title><rect x="1187.9" y="309" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1190.85" y="319.5" ></text>
</g>
<g >
<title>hook_file_alloc_security (2,168,788 samples, 0.01%)</title><rect x="21.0" y="229" width="0.1" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="23.96" y="239.5" ></text>
</g>
<g >
<title>__common_interrupt (12,968,364 samples, 0.05%)</title><rect x="873.5" y="437" width="0.6" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="876.47" y="447.5" ></text>
</g>
<g >
<title>__GI___libc_cleanup_push_defer (2,175,178 samples, 0.01%)</title><rect x="61.6" y="421" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="64.55" y="431.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (15,174,775 samples, 0.06%)</title><rect x="74.7" y="389" width="0.7" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="77.68" y="399.5" ></text>
</g>
<g >
<title>rcu_core (2,171,814 samples, 0.01%)</title><rect x="876.5" y="373" width="0.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="879.49" y="383.5" ></text>
</g>
<g >
<title>prepend (56,745,537 samples, 0.24%)</title><rect x="43.2" y="85" width="2.8" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="46.15" y="95.5" ></text>
</g>
<g >
<title>__raw_spin_lock_irqsave (2,012,674 samples, 0.01%)</title><rect x="1187.6" y="357" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1190.64" y="367.5" ></text>
</g>
<g >
<title>aa_file_perm (6,529,382 samples, 0.03%)</title><rect x="94.2" y="245" width="0.3" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="97.16" y="255.5" ></text>
</g>
<g >
<title>open_last_lookups (2,176,307 samples, 0.01%)</title><rect x="18.9" y="277" width="0.1" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="21.90" y="287.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (23,894,301 samples, 0.10%)</title><rect x="23.9" y="229" width="1.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="26.89" y="239.5" ></text>
</g>
<g >
<title>run_timer_softirq (4,330,453 samples, 0.02%)</title><rect x="876.7" y="389" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="879.70" y="399.5" ></text>
</g>
<g >
<title>putname (10,875,537 samples, 0.05%)</title><rect x="57.2" y="293" width="0.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="60.16" y="303.5" ></text>
</g>
<g >
<title>do_syscall_64 (182,464,375 samples, 0.77%)</title><rect x="61.8" y="389" width="9.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="64.77" y="399.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (8,386,304 samples, 0.04%)</title><rect x="1045.4" y="405" width="0.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1048.38" y="415.5" ></text>
</g>
<g >
<title>alloc_fd (8,671,838 samples, 0.04%)</title><rect x="53.9" y="277" width="0.4" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="56.91" y="287.5" ></text>
</g>
<g >
<title>filemap_get_read_batch (6,493,413 samples, 0.03%)</title><rect x="87.9" y="229" width="0.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="90.90" y="239.5" ></text>
</g>
<g >
<title>calc_global_load_tick (2,185,852 samples, 0.01%)</title><rect x="875.2" y="341" width="0.1" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="878.20" y="351.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (2,171,754 samples, 0.01%)</title><rect x="59.9" y="453" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="62.86" y="463.5" ></text>
</g>
<g >
<title>_raw_spin_unlock (2,177,075 samples, 0.01%)</title><rect x="69.7" y="341" width="0.1" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="72.69" y="351.5" ></text>
</g>
<g >
<title>void std::__invoke_impl&lt;void, void  (23,606,136,583 samples, 99.96%)</title><rect x="10.5" y="517" width="1179.5" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="13.52" y="527.5" >void std::__invoke_impl&lt;void, void </text>
</g>
<g >
<title>clone3 (23,606,136,583 samples, 99.96%)</title><rect x="10.5" y="629" width="1179.5" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="13.52" y="639.5" >clone3</text>
</g>
<g >
<title>update_process_times (23,649,506 samples, 0.10%)</title><rect x="875.1" y="357" width="1.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="878.09" y="367.5" ></text>
</g>
<g >
<title>__run_timers (4,330,453 samples, 0.02%)</title><rect x="876.7" y="373" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="879.70" y="383.5" ></text>
</g>
<g >
<title>lookup_fast (9,607,822 samples, 0.04%)</title><rect x="50.9" y="245" width="0.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="53.94" y="255.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (2,172,035 samples, 0.01%)</title><rect x="36.2" y="181" width="0.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="39.21" y="191.5" ></text>
</g>
<g >
<title>apparmor_file_permission (4,343,190 samples, 0.02%)</title><rect x="93.1" y="277" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="96.08" y="287.5" ></text>
</g>
<g >
<title>generic_file_read_iter (118,210,023 samples, 0.50%)</title><rect x="83.7" y="277" width="5.9" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="86.72" y="287.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge_pages (13,032,580 samples, 0.06%)</title><rect x="67.0" y="245" width="0.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="69.98" y="255.5" ></text>
</g>
<g >
<title>__rcu_read_lock (6,506,909 samples, 0.03%)</title><rect x="35.9" y="181" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="38.88" y="191.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::is_open (2,171,769 samples, 0.01%)</title><rect x="14.8" y="469" width="0.1" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="17.77" y="479.5" ></text>
</g>
<g >
<title>apparmor_file_permission (17,318,414 samples, 0.07%)</title><rect x="93.7" y="261" width="0.9" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="96.73" y="271.5" ></text>
</g>
<g >
<title>may_open (26,010,322 samples, 0.11%)</title><rect x="28.3" y="245" width="1.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="31.29" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (2,713,648,188 samples, 11.49%)</title><rect x="1053.1" y="485" width="135.6" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1056.13" y="495.5" >std::vector&lt;int, ..</text>
</g>
<g >
<title>__update_load_avg_cfs_rq (2,178,110 samples, 0.01%)</title><rect x="875.8" y="293" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="878.85" y="303.5" ></text>
</g>
<g >
<title>x64_sys_call (344,471,483 samples, 1.46%)</title><rect x="77.6" y="357" width="17.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="80.60" y="367.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (8,386,304 samples, 0.04%)</title><rect x="1045.4" y="437" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1048.38" y="447.5" ></text>
</g>
<g >
<title>unmap_region (2,143,922 samples, 0.01%)</title><rect x="1189.3" y="293" width="0.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1192.35" y="303.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (6,462,814 samples, 0.03%)</title><rect x="873.5" y="389" width="0.3" height="15.0" fill="rgb(236,147,35)" rx="2" ry="2" />
<text  x="876.47" y="399.5" ></text>
</g>
<g >
<title>dget_parent (6,494,230 samples, 0.03%)</title><rect x="82.3" y="277" width="0.3" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="85.31" y="287.5" ></text>
</g>
<g >
<title>zap_pte_range (3,242,547 samples, 0.01%)</title><rect x="10.4" y="357" width="0.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="13.36" y="367.5" ></text>
</g>
<g >
<title>asm_common_interrupt (2,012,674 samples, 0.01%)</title><rect x="1187.6" y="469" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1190.64" y="479.5" ></text>
</g>
<g >
<title>vfs_read (290,386,303 samples, 1.23%)</title><rect x="80.1" y="309" width="14.5" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="83.08" y="319.5" ></text>
</g>
<g >
<title>touch_atime (25,981,241 samples, 0.11%)</title><rect x="88.3" y="245" width="1.3" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="91.33" y="255.5" ></text>
</g>
<g >
<title>filemap_get_pages (15,026,570 samples, 0.06%)</title><rect x="87.6" y="245" width="0.7" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="90.58" y="255.5" ></text>
</g>
<g >
<title>perf_event_task_tick (2,249,113 samples, 0.01%)</title><rect x="1045.7" y="309" width="0.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1048.69" y="319.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (2,183,271 samples, 0.01%)</title><rect x="1187.9" y="373" width="0.1" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="1190.85" y="383.5" ></text>
</g>
<g >
<title>current_time (8,681,559 samples, 0.04%)</title><rect x="88.7" y="213" width="0.4" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="91.65" y="223.5" ></text>
</g>
<g >
<title>timekeeping_advance (6,500,050 samples, 0.03%)</title><rect x="874.7" y="325" width="0.3" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="877.66" y="335.5" ></text>
</g>
<g >
<title>common_interrupt (12,968,364 samples, 0.05%)</title><rect x="873.5" y="453" width="0.6" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="876.47" y="463.5" ></text>
</g>
<g >
<title>amd_gpio_irq_handler (2,146,337 samples, 0.01%)</title><rect x="1045.3" y="357" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1048.28" y="367.5" ></text>
</g>
<g >
<title>pvclock_gtod_notify (2,175,022 samples, 0.01%)</title><rect x="874.8" y="277" width="0.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="877.77" y="287.5" ></text>
</g>
<g >
<title>handle_fasteoi_irq (2,012,674 samples, 0.01%)</title><rect x="1187.6" y="421" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1190.64" y="431.5" ></text>
</g>
<g >
<title>void std::thread::_Invoker&lt;std::tuple&lt;void  (23,606,136,583 samples, 99.96%)</title><rect x="10.5" y="549" width="1179.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="13.52" y="559.5" >void std::thread::_Invoker&lt;std::tuple&lt;void </text>
</g>
<g >
<title>tick_sched_handle (6,570,299 samples, 0.03%)</title><rect x="1045.5" y="357" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1048.48" y="367.5" ></text>
</g>
<g >
<title>__vm_munmap (2,143,922 samples, 0.01%)</title><rect x="1189.3" y="341" width="0.2" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="1192.35" y="351.5" ></text>
</g>
<g >
<title>generic_permission (24,544,713 samples, 0.10%)</title><rect x="48.7" y="229" width="1.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="51.74" y="239.5" ></text>
</g>
<g >
<title>clockevents_program_event (2,167,692 samples, 0.01%)</title><rect x="82.2" y="181" width="0.1" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="85.20" y="191.5" ></text>
</g>
<g >
<title>kmem_cache_free (2,170,619 samples, 0.01%)</title><rect x="69.2" y="293" width="0.1" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="72.15" y="303.5" ></text>
</g>
<g >
<title>copy_from_kernel_nofault_allowed (4,351,242 samples, 0.02%)</title><rect x="45.8" y="37" width="0.2" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="48.77" y="47.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (146,608,067 samples, 0.62%)</title><rect x="1045.8" y="469" width="7.3" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1048.80" y="479.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (129,072,786 samples, 0.55%)</title><rect x="83.2" y="293" width="6.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="86.18" y="303.5" ></text>
</g>
<g >
<title>read_tsc (2,163,636 samples, 0.01%)</title><rect x="876.4" y="405" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="879.38" y="415.5" ></text>
</g>
<g >
<title>__alloc_pages (3,242,547 samples, 0.01%)</title><rect x="10.4" y="277" width="0.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="13.36" y="287.5" ></text>
</g>
<g >
<title>ktime_get (2,167,692 samples, 0.01%)</title><rect x="82.2" y="165" width="0.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="85.20" y="175.5" ></text>
</g>
<g >
<title>make_vfsgid (2,175,904 samples, 0.01%)</title><rect x="89.5" y="229" width="0.1" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="92.52" y="239.5" ></text>
</g>
<g >
<title>mntput (4,362,535 samples, 0.02%)</title><rect x="50.4" y="261" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="53.40" y="271.5" ></text>
</g>
<g >
<title>do_syscall_64 (826,579,594 samples, 3.50%)</title><rect x="16.7" y="357" width="41.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="19.73" y="367.5" >do_..</text>
</g>
<g >
<title>aa_dfa_match (36,858,112 samples, 0.16%)</title><rect x="38.8" y="133" width="1.9" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="41.81" y="143.5" ></text>
</g>
<g >
<title>check_cpu_stall (2,157,129 samples, 0.01%)</title><rect x="1045.5" y="293" width="0.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="1048.48" y="303.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2,167,692 samples, 0.01%)</title><rect x="82.2" y="213" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="85.20" y="223.5" ></text>
</g>
<g >
<title>perf_ibs_stop (2,249,113 samples, 0.01%)</title><rect x="1045.7" y="277" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1048.69" y="287.5" ></text>
</g>
<g >
<title>handle_irq_event (2,146,337 samples, 0.01%)</title><rect x="1045.3" y="389" width="0.1" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1048.28" y="399.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_rax (4,347,370 samples, 0.02%)</title><rect x="79.0" y="309" width="0.2" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="82.00" y="319.5" ></text>
</g>
<g >
<title>__mod_memcg_state (2,178,178 samples, 0.01%)</title><rect x="24.9" y="197" width="0.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="27.86" y="207.5" ></text>
</g>
<g >
<title>rw_verify_area (99,407,553 samples, 0.42%)</title><rect x="89.6" y="293" width="5.0" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="92.63" y="303.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (19,490,179 samples, 0.08%)</title><rect x="1187.7" y="469" width="1.0" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1190.74" y="479.5" ></text>
</g>
<g >
<title>std::__invoke_result&lt;void  (23,606,136,583 samples, 99.96%)</title><rect x="10.5" y="533" width="1179.5" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="13.52" y="543.5" >std::__invoke_result&lt;void </text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::clear (2,157,557 samples, 0.01%)</title><rect x="71.1" y="485" width="0.1" height="15.0" fill="rgb(220,71,16)" rx="2" ry="2" />
<text  x="74.11" y="495.5" ></text>
</g>
<g >
<title>tick_sched_handle (23,649,506 samples, 0.10%)</title><rect x="875.1" y="373" width="1.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="878.09" y="383.5" ></text>
</g>
<g >
<title>clear_page_erms (3,242,547 samples, 0.01%)</title><rect x="10.4" y="245" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="13.36" y="255.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (182,464,375 samples, 0.77%)</title><rect x="61.8" y="405" width="9.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="64.77" y="415.5" ></text>
</g>
<g >
<title>x64_sys_call (162,883,232 samples, 0.69%)</title><rect x="62.7" y="373" width="8.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="65.75" y="383.5" ></text>
</g>
<g >
<title>fclose@@GLIBC_2.2.5 (209,876,632 samples, 0.89%)</title><rect x="60.5" y="437" width="10.5" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="63.51" y="447.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (2,172,373 samples, 0.01%)</title><rect x="74.2" y="373" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="77.24" y="383.5" ></text>
</g>
<g >
<title>security_current_getlsmblob_subj (9,474,108 samples, 0.04%)</title><rect x="27.7" y="229" width="0.5" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="30.71" y="239.5" ></text>
</g>
<g >
<title>security_inode_permission (2,160,813 samples, 0.01%)</title><rect x="29.5" y="213" width="0.1" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="32.48" y="223.5" ></text>
</g>
<g >
<title>__close_nocancel (4,341,630 samples, 0.02%)</title><rect x="15.4" y="437" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="18.42" y="447.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;int&gt;::deallocate (2,143,922 samples, 0.01%)</title><rect x="1189.3" y="437" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1192.35" y="447.5" ></text>
</g>
<g >
<title>std::ios_base::_M_call_callbacks (2,176,011 samples, 0.01%)</title><rect x="71.2" y="485" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="74.21" y="495.5" ></text>
</g>
<g >
<title>task_tick_fair (10,789,797 samples, 0.05%)</title><rect x="1188.1" y="325" width="0.5" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1191.07" y="335.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::close (209,876,632 samples, 0.89%)</title><rect x="60.5" y="453" width="10.5" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="63.51" y="463.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void  (23,606,136,583 samples, 99.96%)</title><rect x="10.5" y="581" width="1179.5" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="13.52" y="591.5" >std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;void </text>
</g>
<g >
<title>current_time (2,170,203 samples, 0.01%)</title><rect x="89.4" y="229" width="0.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="92.41" y="239.5" ></text>
</g>
<g >
<title>raw_notifier_call_chain (2,175,022 samples, 0.01%)</title><rect x="874.8" y="293" width="0.1" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="877.77" y="303.5" ></text>
</g>
<g >
<title>calc_global_load (2,170,693 samples, 0.01%)</title><rect x="874.6" y="341" width="0.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="877.55" y="351.5" ></text>
</g>
<g >
<title>task_tick_fair (8,699,975 samples, 0.04%)</title><rect x="875.5" y="325" width="0.5" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="878.52" y="335.5" ></text>
</g>
<g >
<title>ext4_file_open (34,766,958 samples, 0.15%)</title><rect x="32.6" y="213" width="1.8" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="35.64" y="223.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (8,565,596 samples, 0.04%)</title><rect x="876.5" y="421" width="0.4" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="879.49" y="431.5" ></text>
</g>
<g >
<title>unmap_vmas (3,242,547 samples, 0.01%)</title><rect x="10.4" y="421" width="0.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="13.36" y="431.5" ></text>
</g>
<g >
<title>std::ios_base::ios_base (2,165,084 samples, 0.01%)</title><rect x="71.3" y="485" width="0.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="74.32" y="495.5" ></text>
</g>
<g >
<title>fscrypt_file_open (19,563,503 samples, 0.08%)</title><rect x="33.3" y="197" width="1.0" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="36.29" y="207.5" ></text>
</g>
<g >
<title>update_cfs_group (2,151,148 samples, 0.01%)</title><rect x="1188.3" y="309" width="0.1" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1191.28" y="319.5" ></text>
</g>
<g >
<title>lockref_put_return (2,171,128 samples, 0.01%)</title><rect x="68.2" y="309" width="0.1" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="71.17" y="319.5" ></text>
</g>
<g >
<title>get_current_fs_domain (2,188,774 samples, 0.01%)</title><rect x="46.6" y="197" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="49.62" y="207.5" ></text>
</g>
<g >
<title>start_thread (23,606,136,583 samples, 99.96%)</title><rect x="10.5" y="613" width="1179.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="13.52" y="623.5" >start_thread</text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsgetn (466,070,082 samples, 1.97%)</title><rect x="72.4" y="469" width="23.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="75.39" y="479.5" >s..</text>
</g>
<g >
<title>__GI__IO_un_link.part.0 (4,347,975 samples, 0.02%)</title><rect x="61.3" y="421" width="0.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="64.34" y="431.5" ></text>
</g>
<g >
<title>__GI___libc_open (845,904,176 samples, 3.58%)</title><rect x="16.4" y="389" width="42.3" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="19.40" y="399.5" >__G..</text>
</g>
<g >
<title>dget_parent (8,718,452 samples, 0.04%)</title><rect x="33.7" y="181" width="0.5" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="36.72" y="191.5" ></text>
</g>
<g >
<title>__fput (108,597,897 samples, 0.46%)</title><rect x="63.8" y="325" width="5.5" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="66.83" y="335.5" ></text>
</g>
<g >
<title>scheduler_tick (10,789,797 samples, 0.05%)</title><rect x="1188.1" y="341" width="0.5" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1191.07" y="351.5" ></text>
</g>
<g >
<title>ksys_read (340,067,837 samples, 1.44%)</title><rect x="77.6" y="325" width="17.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="80.60" y="335.5" ></text>
</g>
<g >
<title>prepend_copy (2,162,429 samples, 0.01%)</title><rect x="46.0" y="85" width="0.1" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="48.99" y="95.5" ></text>
</g>
<g >
<title>__x64_sys_openat (2,175,035 samples, 0.01%)</title><rect x="16.9" y="341" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="19.94" y="351.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (10,822,603 samples, 0.05%)</title><rect x="874.6" y="373" width="0.5" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="877.55" y="383.5" ></text>
</g>
<g >
<title>generic_file_open (2,188,617 samples, 0.01%)</title><rect x="34.3" y="197" width="0.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="37.27" y="207.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (2,177,865 samples, 0.01%)</title><rect x="95.4" y="389" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="98.36" y="399.5" ></text>
</g>
<g >
<title>consume_obj_stock (2,170,973 samples, 0.01%)</title><rect x="23.8" y="229" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="26.78" y="239.5" ></text>
</g>
<g >
<title>binary_search (63,348,720 samples, 0.27%)</title><rect x="10.5" y="501" width="3.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.52" y="511.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (2,143,922 samples, 0.01%)</title><rect x="1189.3" y="469" width="0.2" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1192.35" y="479.5" ></text>
</g>
<g >
<title>step_into (4,311,766 samples, 0.02%)</title><rect x="51.4" y="245" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="54.42" y="255.5" ></text>
</g>
<g >
<title>ksys_read (2,229,080 samples, 0.01%)</title><rect x="94.7" y="341" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="97.70" y="351.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::xsgetn (6,503,449 samples, 0.03%)</title><rect x="10.0" y="613" width="0.3" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="13.00" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (2,143,922 samples, 0.01%)</title><rect x="1189.3" y="485" width="0.2" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1192.35" y="495.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (2,188,205 samples, 0.01%)</title><rect x="874.4" y="389" width="0.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="877.44" y="399.5" ></text>
</g>
<g >
<title>dput (12,992,256 samples, 0.06%)</title><rect x="65.2" y="293" width="0.7" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="68.24" y="303.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (10,860,082 samples, 0.05%)</title><rect x="61.8" y="373" width="0.5" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="64.77" y="383.5" ></text>
</g>
<g >
<title>terminate_walk (22,078,403 samples, 0.09%)</title><rect x="52.5" y="261" width="1.1" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="55.49" y="271.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64 (8,670,743 samples, 0.04%)</title><rect x="874.6" y="357" width="0.4" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="877.55" y="367.5" ></text>
</g>
<g >
<title>note_interrupt (4,304,297 samples, 0.02%)</title><rect x="873.9" y="389" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="876.90" y="399.5" ></text>
</g>
<g >
<title>__GI___pthread_enable_asynccancel (2,175,245 samples, 0.01%)</title><rect x="73.9" y="405" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="76.92" y="415.5" ></text>
</g>
<g >
<title>atime_needs_update (21,635,134 samples, 0.09%)</title><rect x="88.3" y="229" width="1.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="91.33" y="239.5" ></text>
</g>
<g >
<title>security_file_free (8,673,705 samples, 0.04%)</title><rect x="68.8" y="309" width="0.5" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="71.83" y="319.5" ></text>
</g>
<g >
<title>handle_irq_event (12,968,364 samples, 0.05%)</title><rect x="873.5" y="405" width="0.6" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="876.47" y="415.5" ></text>
</g>
<g >
<title>io_latency_read (1,651,865,121 samples, 6.99%)</title><rect x="13.7" y="501" width="82.5" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="16.69" y="511.5" >io_latenc..</text>
</g>
<g >
<title>__handle_irq_event_percpu (2,146,337 samples, 0.01%)</title><rect x="1045.3" y="373" width="0.1" height="15.0" fill="rgb(236,147,35)" rx="2" ry="2" />
<text  x="1048.28" y="383.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (15,147,493 samples, 0.06%)</title><rect x="1187.9" y="405" width="0.7" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1190.85" y="415.5" ></text>
</g>
<g >
<title>ima_file_check (22,502,418 samples, 0.10%)</title><rect x="27.2" y="245" width="1.1" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="30.17" y="255.5" ></text>
</g>
<g >
<title>__close_nocancel (186,798,405 samples, 0.79%)</title><rect x="61.7" y="421" width="9.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="64.66" y="431.5" ></text>
</g>
<g >
<title>__rcu_read_lock (2,168,531 samples, 0.01%)</title><rect x="52.8" y="245" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="55.81" y="255.5" ></text>
</g>
<g >
<title>__rcu_read_lock (2,170,293 samples, 0.01%)</title><rect x="37.3" y="165" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="40.30" y="175.5" ></text>
</g>
<g >
<title>dput (2,174,161 samples, 0.01%)</title><rect x="65.9" y="309" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="68.89" y="319.5" ></text>
</g>
<g >
<title>handle_fasteoi_irq (2,146,337 samples, 0.01%)</title><rect x="1045.3" y="405" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1048.28" y="415.5" ></text>
</g>
<g >
<title>alloc_pages (3,242,547 samples, 0.01%)</title><rect x="10.4" y="309" width="0.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="13.36" y="319.5" ></text>
</g>
<g >
<title>do_vmi_align_munmap (3,242,547 samples, 0.01%)</title><rect x="10.4" y="453" width="0.1" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="13.36" y="463.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (4,341,630 samples, 0.02%)</title><rect x="15.4" y="421" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="18.42" y="431.5" ></text>
</g>
<g >
<title>apparmor_file_alloc_security (2,175,098 samples, 0.01%)</title><rect x="20.8" y="229" width="0.2" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="23.85" y="239.5" ></text>
</g>
<g >
<title>reweight_entity (2,151,148 samples, 0.01%)</title><rect x="1188.3" y="293" width="0.1" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1191.28" y="303.5" ></text>
</g>
<g >
<title>std::istream::sentry::sentry (2,165,239 samples, 0.01%)</title><rect x="96.0" y="485" width="0.1" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="99.01" y="495.5" ></text>
</g>
<g >
<title>_IO_file_finish@@GLIBC_2.2.5 (4,346,302 samples, 0.02%)</title><rect x="60.9" y="421" width="0.3" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="63.94" y="431.5" ></text>
</g>
<g >
<title>fsnotify (8,687,911 samples, 0.04%)</title><rect x="92.5" y="261" width="0.5" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="95.54" y="271.5" ></text>
</g>
<g >
<title>timekeeping_advance (2,183,271 samples, 0.01%)</title><rect x="1187.9" y="325" width="0.1" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="1190.85" y="335.5" ></text>
</g>
<g >
<title>_IO_file_close_it@@GLIBC_2.2.5 (4,286,354 samples, 0.02%)</title><rect x="60.7" y="421" width="0.2" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="63.73" y="431.5" ></text>
</g>
<g >
<title>mntput_no_expire (2,187,365 samples, 0.01%)</title><rect x="68.5" y="309" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="71.50" y="319.5" ></text>
</g>
<g >
<title>update_min_vruntime (2,176,784 samples, 0.01%)</title><rect x="875.5" y="293" width="0.1" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="878.52" y="303.5" ></text>
</g>
<g >
<title>_raw_spin_rq_lock_irqsave (2,063,329 samples, 0.01%)</title><rect x="876.6" y="357" width="0.1" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="879.60" y="367.5" ></text>
</g>
<g >
<title>apparmor_current_getlsmblob_subj (2,143,604 samples, 0.01%)</title><rect x="27.4" y="229" width="0.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="30.38" y="239.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (2,177,526 samples, 0.01%)</title><rect x="1188.6" y="421" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1191.61" y="431.5" ></text>
</g>
<g >
<title>update_wall_time (6,500,050 samples, 0.03%)</title><rect x="874.7" y="341" width="0.3" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="877.66" y="351.5" ></text>
</g>
<g >
<title>lockref_get_not_zero (4,351,980 samples, 0.02%)</title><rect x="65.0" y="277" width="0.2" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="68.03" y="287.5" ></text>
</g>
<g >
<title>security_inode_permission (2,184,191 samples, 0.01%)</title><rect x="50.1" y="229" width="0.1" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="53.07" y="239.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (23,606,136,583 samples, 99.96%)</title><rect x="10.5" y="597" width="1179.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="13.52" y="607.5" >[libstdc++.so.6.0.33]</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (56,048,258 samples, 0.24%)</title><rect x="874.1" y="469" width="2.8" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="877.12" y="479.5" ></text>
</g>
<g >
<title>handle_fasteoi_irq (12,968,364 samples, 0.05%)</title><rect x="873.5" y="421" width="0.6" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="876.47" y="431.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (36,660,314 samples, 0.16%)</title><rect x="874.4" y="405" width="1.9" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="877.44" y="415.5" ></text>
</g>
<g >
<title>file_close_fd_locked (4,339,568 samples, 0.02%)</title><rect x="70.0" y="325" width="0.2" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="73.02" y="335.5" ></text>
</g>
<g >
<title>get_inode_acl (4,336,466 samples, 0.02%)</title><rect x="29.3" y="197" width="0.2" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="32.27" y="207.5" ></text>
</g>
<g >
<title>refill_stock (2,172,841 samples, 0.01%)</title><rect x="67.6" y="245" width="0.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="70.63" y="255.5" ></text>
</g>
<g >
<title>xas_load (2,175,974 samples, 0.01%)</title><rect x="88.2" y="229" width="0.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="91.22" y="239.5" ></text>
</g>
<g >
<title>timekeeping_update (2,175,022 samples, 0.01%)</title><rect x="874.8" y="309" width="0.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="877.77" y="319.5" ></text>
</g>
<g >
<title>_IO_un_link (3,585,702 samples, 0.02%)</title><rect x="61.2" y="421" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="64.16" y="431.5" ></text>
</g>
<g >
<title>__legitimize_path (4,920,837 samples, 0.02%)</title><rect x="26.8" y="213" width="0.3" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="29.81" y="223.5" ></text>
</g>
<g >
<title>lockref_get_not_zero (2,161,846 samples, 0.01%)</title><rect x="82.5" y="261" width="0.1" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="85.53" y="271.5" ></text>
</g>
<g >
<title>should_failslab.constprop.0 (2,173,103 samples, 0.01%)</title><rect x="25.2" y="245" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="28.19" y="255.5" ></text>
</g>
<g >
<title>do_syscall_64 (3,242,547 samples, 0.01%)</title><rect x="10.4" y="533" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.36" y="543.5" ></text>
</g>
<g >
<title>fsnotify (4,372,771 samples, 0.02%)</title><rect x="82.7" y="277" width="0.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="85.74" y="287.5" ></text>
</g>
<g >
<title>check_heap_object (4,330,232 samples, 0.02%)</title><rect x="56.9" y="229" width="0.3" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="59.94" y="239.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_allocate_internal_buffer (12,969,792 samples, 0.05%)</title><rect x="58.9" y="453" width="0.6" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="61.89" y="463.5" ></text>
</g>
<g >
<title>do_open (435,582,465 samples, 1.84%)</title><rect x="25.3" y="261" width="21.8" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="28.29" y="271.5" >d..</text>
</g>
<g >
<title>_IO_new_file_init_internal (2,190,289 samples, 0.01%)</title><rect x="58.7" y="421" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="61.67" y="431.5" ></text>
</g>
<g >
<title>rcu_report_qs_rnp (2,171,814 samples, 0.01%)</title><rect x="876.5" y="341" width="0.1" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="879.49" y="351.5" ></text>
</g>
<g >
<title>call_timer_fn (2,167,505 samples, 0.01%)</title><rect x="876.7" y="357" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="879.70" y="367.5" ></text>
</g>
<g >
<title>make_vfsgid (6,453,106 samples, 0.03%)</title><rect x="89.1" y="213" width="0.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="92.09" y="223.5" ></text>
</g>
<g >
<title>dget_parent (15,067,040 samples, 0.06%)</title><rect x="91.5" y="261" width="0.7" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="94.46" y="271.5" ></text>
</g>
<g >
<title>mod_objcg_state (2,164,482 samples, 0.01%)</title><rect x="66.8" y="277" width="0.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="69.76" y="287.5" ></text>
</g>
<g >
<title>rcu_report_qs_rdp (2,171,814 samples, 0.01%)</title><rect x="876.5" y="357" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="879.49" y="367.5" ></text>
</g>
<g >
<title>update_curr (2,153,588 samples, 0.01%)</title><rect x="1188.4" y="309" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1191.39" y="319.5" ></text>
</g>
<g >
<title>mntput_no_expire (2,140,504 samples, 0.01%)</title><rect x="53.5" y="229" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="56.48" y="239.5" ></text>
</g>
<g >
<title>__rcu_read_lock (2,174,518 samples, 0.01%)</title><rect x="67.7" y="293" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="70.74" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (2,143,922 samples, 0.01%)</title><rect x="1189.3" y="453" width="0.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1192.35" y="463.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (4,317,117 samples, 0.02%)</title><rect x="50.2" y="245" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="53.18" y="255.5" ></text>
</g>
<g >
<title>lockref_put_return (4,335,305 samples, 0.02%)</title><rect x="83.0" y="277" width="0.2" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="85.96" y="287.5" ></text>
</g>
<g >
<title>filemap_read (103,834,785 samples, 0.44%)</title><rect x="84.4" y="261" width="5.2" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="87.44" y="271.5" ></text>
</g>
<g >
<title>process_measurement (4,346,112 samples, 0.02%)</title><rect x="27.5" y="229" width="0.2" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="30.49" y="239.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64 (2,183,271 samples, 0.01%)</title><rect x="1187.9" y="357" width="0.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1190.85" y="367.5" ></text>
</g>
<g >
<title>run_binary_search (21,880,030,373 samples, 92.65%)</title><rect x="96.2" y="501" width="1093.3" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="99.22" y="511.5" >run_binary_search</text>
</g>
<g >
<title>refill_stock (2,171,879 samples, 0.01%)</title><rect x="67.5" y="229" width="0.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="70.52" y="239.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (2,173,873 samples, 0.01%)</title><rect x="17.1" y="341" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="20.05" y="351.5" ></text>
</g>
<g >
<title>asm_common_interrupt (12,968,364 samples, 0.05%)</title><rect x="873.5" y="469" width="0.6" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="876.47" y="479.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (41,004,913 samples, 0.17%)</title><rect x="874.4" y="421" width="2.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="877.44" y="431.5" ></text>
</g>
<g >
<title>d_namespace_path.constprop.0 (100,237,792 samples, 0.42%)</title><rect x="41.3" y="133" width="5.0" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="44.31" y="143.5" ></text>
</g>
<g >
<title>put_pid (2,160,076 samples, 0.01%)</title><rect x="69.3" y="325" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="72.26" y="335.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (3,896,113 samples, 0.02%)</title><rect x="10.3" y="597" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="13.33" y="607.5" ></text>
</g>
<g >
<title>sched_use_asym_prio (6,418,804 samples, 0.03%)</title><rect x="876.0" y="293" width="0.3" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="878.95" y="303.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (15,147,493 samples, 0.06%)</title><rect x="1187.9" y="389" width="0.7" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1190.85" y="399.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (2,174,835 samples, 0.01%)</title><rect x="46.2" y="101" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="49.21" y="111.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (5,398,679 samples, 0.02%)</title><rect x="58.2" y="373" width="0.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="61.24" y="383.5" ></text>
</g>
<g >
<title>_copy_to_iter (17,265,049 samples, 0.07%)</title><rect x="86.7" y="229" width="0.9" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="89.72" y="239.5" ></text>
</g>
<g >
<title>std::istream::sentry::sentry (6,504,549 samples, 0.03%)</title><rect x="95.7" y="469" width="0.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="98.68" y="479.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (4,340,164 samples, 0.02%)</title><rect x="95.0" y="389" width="0.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="98.03" y="399.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (2,167,872 samples, 0.01%)</title><rect x="94.8" y="373" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="97.81" y="383.5" ></text>
</g>
<g >
<title>check_heap_object (8,645,011 samples, 0.04%)</title><rect x="56.5" y="213" width="0.4" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="59.51" y="223.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (2,167,692 samples, 0.01%)</title><rect x="82.2" y="245" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="85.20" y="255.5" ></text>
</g>
<g >
<title>__memcg_slab_post_alloc_hook (2,140,990 samples, 0.01%)</title><rect x="23.6" y="229" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="26.56" y="239.5" ></text>
</g>
<g >
<title>path_name (106,773,690 samples, 0.45%)</title><rect x="41.0" y="165" width="5.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="43.98" y="175.5" ></text>
</g>
<g >
<title>do_syscall_64 (2,177,476 samples, 0.01%)</title><rect x="16.5" y="373" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="19.51" y="383.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (2,143,922 samples, 0.01%)</title><rect x="1189.3" y="277" width="0.2" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1192.35" y="287.5" ></text>
</g>
<g >
<title>do_syscall_64 (2,143,922 samples, 0.01%)</title><rect x="1189.3" y="389" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1192.35" y="399.5" ></text>
</g>
<g >
<title>run_rebalance_domains (2,063,329 samples, 0.01%)</title><rect x="876.6" y="389" width="0.1" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="879.60" y="399.5" ></text>
</g>
<g >
<title>dl_main (3,242,547 samples, 0.01%)</title><rect x="10.4" y="581" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="13.36" y="591.5" ></text>
</g>
<g >
<title>srso_alias_untrain_ret (2,174,905 samples, 0.01%)</title><rect x="95.2" y="389" width="0.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="98.25" y="399.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (6,513,598 samples, 0.03%)</title><rect x="69.4" y="325" width="0.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="72.37" y="335.5" ></text>
</g>
<g >
<title>dput (13,051,865 samples, 0.06%)</title><rect x="36.8" y="181" width="0.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="39.75" y="191.5" ></text>
</g>
<g >
<title>__rcu_read_lock (2,177,762 samples, 0.01%)</title><rect x="41.7" y="101" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="44.74" y="111.5" ></text>
</g>
<g >
<title>amd_gpio_irq_handler (6,462,814 samples, 0.03%)</title><rect x="873.5" y="373" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="876.47" y="383.5" ></text>
</g>
<g >
<title>unmap_region (3,242,547 samples, 0.01%)</title><rect x="10.4" y="437" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="13.36" y="447.5" ></text>
</g>
<g >
<title>filemap_get_pages (3,573,579 samples, 0.02%)</title><rect x="84.3" y="261" width="0.1" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="87.26" y="271.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (2,012,674 samples, 0.01%)</title><rect x="1187.6" y="373" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1190.64" y="383.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (2,161,379 samples, 0.01%)</title><rect x="80.0" y="309" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="82.98" y="319.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (10,831,274 samples, 0.05%)</title><rect x="79.2" y="309" width="0.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="82.22" y="319.5" ></text>
</g>
<g >
<title>aa_label_is_subset (2,176,031 samples, 0.01%)</title><rect x="94.5" y="245" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="97.49" y="255.5" ></text>
</g>
<g >
<title>dget_parent (4,351,980 samples, 0.02%)</title><rect x="65.0" y="293" width="0.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="68.03" y="303.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (6,503,449 samples, 0.03%)</title><rect x="10.0" y="581" width="0.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="13.00" y="591.5" ></text>
</g>
<g >
<title>std::locale::locale (4,294,159 samples, 0.02%)</title><rect x="59.8" y="469" width="0.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="62.75" y="479.5" ></text>
</g>
<g >
<title>update_fast_timekeeper (2,160,933 samples, 0.01%)</title><rect x="874.9" y="309" width="0.1" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="877.88" y="319.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (49,570,509 samples, 0.21%)</title><rect x="874.4" y="453" width="2.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="877.44" y="463.5" ></text>
</g>
<g >
<title>mntput (2,140,504 samples, 0.01%)</title><rect x="53.5" y="245" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="56.48" y="255.5" ></text>
</g>
<g >
<title>x64_sys_call (813,518,459 samples, 3.44%)</title><rect x="17.4" y="341" width="40.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="20.38" y="351.5" >x64..</text>
</g>
<g >
<title>apparmor_file_alloc_security (4,354,827 samples, 0.02%)</title><rect x="22.2" y="213" width="0.2" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="25.15" y="223.5" ></text>
</g>
<g >
<title>__x64_sys_close (154,180,404 samples, 0.65%)</title><rect x="63.1" y="357" width="7.7" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="66.08" y="367.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (2,166,552 samples, 0.01%)</title><rect x="60.4" y="453" width="0.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="63.40" y="463.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (8,386,304 samples, 0.04%)</title><rect x="1045.4" y="389" width="0.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1048.38" y="399.5" ></text>
</g>
<g >
<title>do_vmi_munmap (2,143,922 samples, 0.01%)</title><rect x="1189.3" y="325" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1192.35" y="335.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (15,147,493 samples, 0.06%)</title><rect x="1187.9" y="421" width="0.7" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1190.85" y="431.5" ></text>
</g>
<g >
<title>malloc (10,792,252 samples, 0.05%)</title><rect x="59.0" y="421" width="0.5" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="62.00" y="431.5" ></text>
</g>
<g >
<title>open_last_lookups (20,436,958 samples, 0.09%)</title><rect x="50.6" y="261" width="1.0" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="53.61" y="271.5" ></text>
</g>
<g >
<title>filemap_read (2,176,085 samples, 0.01%)</title><rect x="83.6" y="277" width="0.1" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="86.61" y="287.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (2,143,922 samples, 0.01%)</title><rect x="1189.3" y="357" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1192.35" y="367.5" ></text>
</g>
<g >
<title>_int_malloc (6,481,474 samples, 0.03%)</title><rect x="59.2" y="405" width="0.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="62.21" y="415.5" ></text>
</g>
<g >
<title>do_syscall_64 (4,351,182 samples, 0.02%)</title><rect x="74.5" y="389" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="77.46" y="399.5" ></text>
</g>
<g >
<title>memcg_account_kmem (2,176,250 samples, 0.01%)</title><rect x="66.9" y="245" width="0.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="69.87" y="255.5" ></text>
</g>
<g >
<title>do_vmi_munmap (3,242,547 samples, 0.01%)</title><rect x="10.4" y="469" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="13.36" y="479.5" ></text>
</g>
<g >
<title>security_file_permission (21,613,185 samples, 0.09%)</title><rect x="93.5" y="277" width="1.1" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="96.51" y="287.5" ></text>
</g>
<g >
<title>aa_path_perm (167,491,119 samples, 0.71%)</title><rect x="37.9" y="181" width="8.4" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="40.95" y="191.5" ></text>
</g>
<g >
<title>__memset (2,181,183 samples, 0.01%)</title><rect x="20.4" y="245" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="23.41" y="255.5" ></text>
</g>
<g >
<title>__virt_addr_valid (6,515,006 samples, 0.03%)</title><rect x="56.6" y="197" width="0.3" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="59.61" y="207.5" ></text>
</g>
<g >
<title>aa_get_buffer (4,345,945 samples, 0.02%)</title><rect x="40.7" y="165" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="43.65" y="175.5" ></text>
</g>
<g >
<title>unmap_single_vma (3,242,547 samples, 0.01%)</title><rect x="10.4" y="405" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="13.36" y="415.5" ></text>
</g>
<g >
<title>read (2,148,866 samples, 0.01%)</title><rect x="94.9" y="389" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="97.92" y="399.5" ></text>
</g>
<g >
<title>__tlb_remove_page_size (3,242,547 samples, 0.01%)</title><rect x="10.4" y="341" width="0.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="13.36" y="351.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (2,143,922 samples, 0.01%)</title><rect x="1189.3" y="245" width="0.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1192.35" y="255.5" ></text>
</g>
<g >
<title>copy_page_to_iter (19,439,287 samples, 0.08%)</title><rect x="86.6" y="245" width="1.0" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="89.61" y="255.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsgetn (453,052,970 samples, 1.92%)</title><rect x="73.0" y="453" width="22.7" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="76.04" y="463.5" >s..</text>
</g>
<g >
<title>memcg_account_kmem (13,023,194 samples, 0.06%)</title><rect x="24.4" y="213" width="0.7" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="27.43" y="223.5" ></text>
</g>
<g >
<title>fsnotify (4,340,835 samples, 0.02%)</title><rect x="32.3" y="197" width="0.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="35.30" y="207.5" ></text>
</g>
<g >
<title>arch_scale_freq_tick (2,164,057 samples, 0.01%)</title><rect x="1045.6" y="309" width="0.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1048.58" y="319.5" ></text>
</g>
<g >
<title>update_wall_time (2,151,860 samples, 0.01%)</title><rect x="875.0" y="357" width="0.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="877.99" y="367.5" ></text>
</g>
<g >
<title>_IO_file_fopen@@GLIBC_2.2.5 (854,603,114 samples, 3.62%)</title><rect x="16.0" y="421" width="42.7" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="18.97" y="431.5" >_IO_..</text>
</g>
<g >
<title>security_file_open (232,084,561 samples, 0.98%)</title><rect x="35.1" y="213" width="11.6" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="38.13" y="223.5" ></text>
</g>
<g >
<title>apparmor_file_open (2,473,375 samples, 0.01%)</title><rect x="32.5" y="213" width="0.1" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="35.51" y="223.5" ></text>
</g>
<g >
<title>lockref_put_return (2,118,729 samples, 0.01%)</title><rect x="93.0" y="261" width="0.1" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="95.97" y="271.5" ></text>
</g>
<g >
<title>delayed_work_timer_fn (2,167,505 samples, 0.01%)</title><rect x="876.7" y="341" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="879.70" y="351.5" ></text>
</g>
<g >
<title>__vm_munmap (3,242,547 samples, 0.01%)</title><rect x="10.4" y="485" width="0.1" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="13.36" y="495.5" ></text>
</g>
<g >
<title>get_unused_fd_flags (8,671,838 samples, 0.04%)</title><rect x="53.9" y="293" width="0.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="56.91" y="303.5" ></text>
</g>
<g >
<title>_IO_file_close (2,153,997 samples, 0.01%)</title><rect x="60.6" y="421" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="63.62" y="431.5" ></text>
</g>
<g >
<title>common_interrupt (2,146,337 samples, 0.01%)</title><rect x="1045.3" y="437" width="0.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1048.28" y="447.5" ></text>
</g>
<g >
<title>sched_clock_tick (2,174,425 samples, 0.01%)</title><rect x="1188.0" y="341" width="0.1" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="1190.96" y="351.5" ></text>
</g>
<g >
<title>kmem_cache_free (6,519,024 samples, 0.03%)</title><rect x="57.4" y="277" width="0.3" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="60.37" y="287.5" ></text>
</g>
<g >
<title>aa_path_name (102,407,757 samples, 0.43%)</title><rect x="41.2" y="149" width="5.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="44.20" y="159.5" ></text>
</g>
<g >
<title>mod_memcg_state (4,351,044 samples, 0.02%)</title><rect x="67.3" y="229" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="70.30" y="239.5" ></text>
</g>
<g >
<title>release_pages (2,143,922 samples, 0.01%)</title><rect x="1189.3" y="229" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1192.35" y="239.5" ></text>
</g>
<g >
<title>fsnotify (2,175,100 samples, 0.01%)</title><rect x="93.4" y="277" width="0.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="96.41" y="287.5" ></text>
</g>
<g >
<title>mod_memcg_state (2,178,251 samples, 0.01%)</title><rect x="25.0" y="197" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="27.97" y="207.5" ></text>
</g>
<g >
<title>getname_flags.part.0 (56,180,838 samples, 0.24%)</title><rect x="54.3" y="277" width="2.9" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="57.35" y="287.5" ></text>
</g>
<g >
<title>get_cached_acl_rcu (2,160,558 samples, 0.01%)</title><rect x="50.0" y="229" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="52.96" y="239.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (2,169,777 samples, 0.01%)</title><rect x="58.0" y="357" width="0.1" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="61.03" y="367.5" ></text>
</g>
<g >
<title>do_amd_gpio_irq_handler (2,146,337 samples, 0.01%)</title><rect x="1045.3" y="341" width="0.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1048.28" y="351.5" ></text>
</g>
<g >
<title>__strstr_generic (2,163,785 samples, 0.01%)</title><rect x="58.8" y="421" width="0.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="61.77" y="431.5" ></text>
</g>
<g >
<title>mutex_unlock (4,342,899 samples, 0.02%)</title><rect x="79.8" y="309" width="0.2" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="82.76" y="319.5" ></text>
</g>
<g >
<title>std::codecvt&lt;char, char, __mbstate_t&gt;::do_always_noconv (4,335,312 samples, 0.02%)</title><rect x="95.5" y="437" width="0.2" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="98.46" y="447.5" ></text>
</g>
<g >
<title>unmap_page_range (3,242,547 samples, 0.01%)</title><rect x="10.4" y="389" width="0.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="13.36" y="399.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::underflow (440,148,923 samples, 1.86%)</title><rect x="73.5" y="437" width="22.0" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="76.47" y="447.5" >s..</text>
</g>
<g >
<title>update_curr (2,176,784 samples, 0.01%)</title><rect x="875.5" y="309" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="878.52" y="319.5" ></text>
</g>
<g >
<title>generic_permission (17,355,216 samples, 0.07%)</title><rect x="28.6" y="213" width="0.9" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="31.61" y="223.5" ></text>
</g>
<g >
<title>munmap (3,242,547 samples, 0.01%)</title><rect x="10.4" y="565" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="13.36" y="575.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2,167,692 samples, 0.01%)</title><rect x="82.2" y="261" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="85.20" y="271.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (2,169,298 samples, 0.01%)</title><rect x="46.1" y="85" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="49.10" y="95.5" ></text>
</g>
<g >
<title>x64_sys_call (2,143,922 samples, 0.01%)</title><rect x="1189.3" y="373" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1192.35" y="383.5" ></text>
</g>
<g >
<title>do_dentry_open (345,275,484 samples, 1.46%)</title><rect x="29.8" y="229" width="17.3" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="32.81" y="239.5" ></text>
</g>
<g >
<title>apparmor_file_open (182,182,174 samples, 0.77%)</title><rect x="37.5" y="197" width="9.1" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="40.51" y="207.5" ></text>
</g>
<g >
<title>get_unused_fd_flags (4,369,135 samples, 0.02%)</title><rect x="57.7" y="309" width="0.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="60.70" y="319.5" ></text>
</g>
<g >
<title>_IO_file_open (854,603,114 samples, 3.62%)</title><rect x="16.0" y="405" width="42.7" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="18.97" y="415.5" >_IO_..</text>
</g>
<g >
<title>dput (4,352,021 samples, 0.02%)</title><rect x="52.9" y="245" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="55.92" y="255.5" ></text>
</g>
<g >
<title>mntput (4,401,685 samples, 0.02%)</title><rect x="68.3" y="309" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="71.28" y="319.5" ></text>
</g>
<g >
<title>rcu_core_si (2,171,814 samples, 0.01%)</title><rect x="876.5" y="389" width="0.1" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="879.49" y="399.5" ></text>
</g>
<g >
<title>dput (2,172,782 samples, 0.01%)</title><rect x="93.3" y="277" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="96.30" y="287.5" ></text>
</g>
<g >
<title>do_vmi_align_munmap (2,143,922 samples, 0.01%)</title><rect x="1189.3" y="309" width="0.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1192.35" y="319.5" ></text>
</g>
<g >
<title>_dl_start (3,896,113 samples, 0.02%)</title><rect x="10.3" y="613" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="13.33" y="623.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (13,111,365 samples, 0.06%)</title><rect x="22.4" y="213" width="0.6" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="25.37" y="223.5" ></text>
</g>
<g >
<title>asm_common_interrupt (2,146,337 samples, 0.01%)</title><rect x="1045.3" y="453" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1048.28" y="463.5" ></text>
</g>
<g >
<title>vfs_open (4,363,471 samples, 0.02%)</title><rect x="53.6" y="261" width="0.2" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="56.59" y="271.5" ></text>
</g>
<g >
<title>lockref_get_not_zero (2,147,456 samples, 0.01%)</title><rect x="92.1" y="245" width="0.1" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="95.11" y="255.5" ></text>
</g>
<g >
<title>ext4_release_file (2,179,736 samples, 0.01%)</title><rect x="66.0" y="309" width="0.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="69.00" y="319.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (3,242,547 samples, 0.01%)</title><rect x="10.4" y="501" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="13.36" y="511.5" ></text>
</g>
<g >
<title>refill_obj_stock (17,381,671 samples, 0.07%)</title><rect x="66.9" y="261" width="0.8" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="69.87" y="271.5" ></text>
</g>
<g >
<title>binary_search (19,094,288,589 samples, 80.85%)</title><rect x="99.1" y="485" width="954.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="102.09" y="495.5" >binary_search</text>
</g>
<g >
<title>nohz_balancer_kick (6,418,804 samples, 0.03%)</title><rect x="876.0" y="309" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="878.95" y="319.5" ></text>
</g>
<g >
<title>fopen@@GLIBC_2.2.5 (865,584,449 samples, 3.67%)</title><rect x="15.6" y="437" width="43.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="18.64" y="447.5" >fope..</text>
</g>
<g >
<title>std::locale::locale (4,350,699 samples, 0.02%)</title><rect x="59.5" y="437" width="0.3" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="62.54" y="447.5" ></text>
</g>
<g >
<title>mntget (2,351,735 samples, 0.01%)</title><rect x="35.0" y="197" width="0.1" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="38.01" y="207.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (41,128,705 samples, 0.17%)</title><rect x="23.0" y="245" width="2.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="26.02" y="255.5" ></text>
</g>
<g >
<title>ktime_get_coarse_real_ts64 (2,155,463 samples, 0.01%)</title><rect x="89.0" y="197" width="0.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="91.98" y="207.5" ></text>
</g>
<g >
<title>x64_sys_call (3,242,547 samples, 0.01%)</title><rect x="10.4" y="517" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="13.36" y="527.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (2,177,109 samples, 0.01%)</title><rect x="91.4" y="261" width="0.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="94.35" y="271.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (17,325,019 samples, 0.07%)</title><rect x="1187.9" y="453" width="0.8" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1190.85" y="463.5" ></text>
</g>
<g >
<title>mutex_lock (6,539,482 samples, 0.03%)</title><rect x="78.7" y="293" width="0.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="81.67" y="303.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (8,386,304 samples, 0.04%)</title><rect x="1045.4" y="373" width="0.4" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1048.38" y="383.5" ></text>
</g>
<g >
<title>path_openat (692,085,111 samples, 2.93%)</title><rect x="19.2" y="277" width="34.6" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="22.23" y="287.5" >pa..</text>
</g>
<g >
<title>get_pfnblock_flags_mask (2,143,922 samples, 0.01%)</title><rect x="1189.3" y="197" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1192.35" y="207.5" ></text>
</g>
<g >
<title>d_absolute_path (93,714,838 samples, 0.40%)</title><rect x="41.6" y="117" width="4.7" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="44.63" y="127.5" ></text>
</g>
<g >
<title>strncpy_from_user (25,876,664 samples, 0.11%)</title><rect x="55.9" y="261" width="1.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="58.86" y="271.5" ></text>
</g>
<g >
<title>__check_object_size (17,326,277 samples, 0.07%)</title><rect x="56.3" y="245" width="0.9" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="59.29" y="255.5" ></text>
</g>
<g >
<title>operator new[] (2,155,099 samples, 0.01%)</title><rect x="15.1" y="453" width="0.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="18.10" y="463.5" ></text>
</g>
<g >
<title>__fsnotify_parent (64,749,550 samples, 0.27%)</title><rect x="89.8" y="277" width="3.3" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="92.84" y="287.5" ></text>
</g>
<g >
<title>__d_lookup_rcu (2,175,190 samples, 0.01%)</title><rect x="51.3" y="229" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="54.31" y="239.5" ></text>
</g>
<g >
<title>std::basic_ifstream&lt;char, std::char_traits&lt;char&gt; &gt;::~basic_ifstream (2,177,915 samples, 0.01%)</title><rect x="71.0" y="485" width="0.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="74.00" y="495.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (34,472,109 samples, 0.15%)</title><rect x="874.6" y="389" width="1.7" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="877.55" y="399.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (4,325,188 samples, 0.02%)</title><rect x="82.1" y="277" width="0.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="85.09" y="287.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (2,167,692 samples, 0.01%)</title><rect x="82.2" y="229" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="85.20" y="239.5" ></text>
</g>
<g >
<title>update_load_avg (2,155,287 samples, 0.01%)</title><rect x="1188.5" y="309" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1191.50" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (833,101,990 samples, 3.53%)</title><rect x="16.6" y="373" width="41.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="19.62" y="383.5" >ent..</text>
</g>
<g >
<title>__rcu_read_unlock (2,155,055 samples, 0.01%)</title><rect x="68.4" y="293" width="0.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="71.39" y="303.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (8,687,626 samples, 0.04%)</title><rect x="55.1" y="261" width="0.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="58.11" y="271.5" ></text>
</g>
<g >
<title>__fsnotify_parent (34,736,913 samples, 0.15%)</title><rect x="81.4" y="293" width="1.8" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="84.44" y="303.5" ></text>
</g>
<g >
<title>aa_audit_file (6,512,924 samples, 0.03%)</title><rect x="38.5" y="149" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="41.49" y="159.5" ></text>
</g>
<g >
<title>complete_walk (11,394,878 samples, 0.05%)</title><rect x="26.5" y="245" width="0.6" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="29.49" y="255.5" ></text>
</g>
<g >
<title>scheduler_tick (4,413,170 samples, 0.02%)</title><rect x="1045.6" y="325" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1048.58" y="335.5" ></text>
</g>
<g >
<title>__fsnotify_parent (28,255,333 samples, 0.12%)</title><rect x="31.1" y="213" width="1.4" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="34.10" y="223.5" ></text>
</g>
<g >
<title>raw_spin_rq_lock_nested (2,063,329 samples, 0.01%)</title><rect x="876.6" y="341" width="0.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="879.60" y="351.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (4,346,780 samples, 0.02%)</title><rect x="68.6" y="309" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="71.61" y="319.5" ></text>
</g>
<g >
<title>putname (2,181,853 samples, 0.01%)</title><rect x="57.9" y="309" width="0.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="60.92" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2,148,866 samples, 0.01%)</title><rect x="94.9" y="373" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="97.92" y="383.5" ></text>
</g>
<g >
<title>__check_heap_object (2,130,005 samples, 0.01%)</title><rect x="56.5" y="197" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="59.51" y="207.5" ></text>
</g>
<g >
<title>__cgroup_account_cputime (2,153,588 samples, 0.01%)</title><rect x="1188.4" y="293" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1191.39" y="303.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (17,325,019 samples, 0.07%)</title><rect x="1187.9" y="437" width="0.8" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1190.85" y="447.5" ></text>
</g>
<g >
<title>eoi_ioapic_pin (2,012,674 samples, 0.01%)</title><rect x="1187.6" y="389" width="0.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1190.64" y="399.5" ></text>
</g>
<g >
<title>__fdget_pos (17,206,594 samples, 0.07%)</title><rect x="78.1" y="309" width="0.9" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="81.14" y="319.5" ></text>
</g>
<g >
<title>__rcu_read_lock (2,246,630 samples, 0.01%)</title><rect x="68.3" y="293" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="71.28" y="303.5" ></text>
</g>
<g >
<title>dput (4,355,960 samples, 0.02%)</title><rect x="32.1" y="197" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="35.08" y="207.5" ></text>
</g>
<g >
<title>dput (2,175,894 samples, 0.01%)</title><rect x="82.6" y="277" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="85.63" y="287.5" ></text>
</g>
<g >
<title>x64_sys_call (2,172,821 samples, 0.01%)</title><rect x="58.1" y="357" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="61.13" y="367.5" ></text>
</g>
<g >
<title>do_open (2,150,789 samples, 0.01%)</title><rect x="18.8" y="277" width="0.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="21.79" y="287.5" ></text>
</g>
<g >
<title>file_close_fd (2,183,521 samples, 0.01%)</title><rect x="70.8" y="357" width="0.1" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="73.78" y="367.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (4,316,687 samples, 0.02%)</title><rect x="72.8" y="453" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="75.83" y="463.5" ></text>
</g>
<g >
<title>__x64_sys_openat (813,518,459 samples, 3.44%)</title><rect x="17.4" y="325" width="40.6" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="20.38" y="335.5" >__x..</text>
</g>
<g >
<title>obj_cgroup_uncharge (17,381,671 samples, 0.07%)</title><rect x="66.9" y="277" width="0.8" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="69.87" y="287.5" ></text>
</g>
<g >
<title>inode_permission (44,390,297 samples, 0.19%)</title><rect x="48.0" y="245" width="2.2" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="50.96" y="255.5" ></text>
</g>
<g >
<title>get_cached_acl (4,336,466 samples, 0.02%)</title><rect x="29.3" y="181" width="0.2" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="32.27" y="191.5" ></text>
</g>
<g >
<title>copy_from_kernel_nofault (33,012,740 samples, 0.14%)</title><rect x="44.3" y="53" width="1.7" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="47.34" y="63.5" ></text>
</g>
</g>
</svg>
