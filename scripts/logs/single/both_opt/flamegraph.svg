<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="598" onload="init(evt)" viewBox="0 0 1200 598" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="598.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="581" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="581" > </text>
<g id="frames">
<g >
<title>do_execveat_common.isra.0 (76,573 samples, 0.01%)</title><rect x="38.3" y="437" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="41.33" y="447.5" ></text>
</g>
<g >
<title>__munmap (1,459,100 samples, 0.27%)</title><rect x="59.4" y="469" width="3.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="62.42" y="479.5" ></text>
</g>
<g >
<title>security_file_alloc (15,155,391 samples, 2.84%)</title><rect x="294.7" y="213" width="33.4" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="297.66" y="223.5" >se..</text>
</g>
<g >
<title>__memset (8,667,452 samples, 1.62%)</title><rect x="710.7" y="245" width="19.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="713.68" y="255.5" ></text>
</g>
<g >
<title>check_stack_object (2,190,948 samples, 0.41%)</title><rect x="744.2" y="213" width="4.9" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="747.22" y="223.5" ></text>
</g>
<g >
<title>do_syscall_64 (76,573 samples, 0.01%)</title><rect x="38.3" y="485" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="41.33" y="495.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1,359,492 samples, 0.25%)</title><rect x="38.7" y="293" width="3.0" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="41.65" y="303.5" ></text>
</g>
<g >
<title>vfs_read (118,156,566 samples, 22.11%)</title><rect x="885.8" y="277" width="260.9" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="888.80" y="287.5" >vfs_read</text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::xsgetn (6,302,151 samples, 1.18%)</title><rect x="10.0" y="485" width="13.9" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>file_close_fd (2,185,335 samples, 0.41%)</title><rect x="223.2" y="325" width="4.9" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="226.23" y="335.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (518,709,812 samples, 97.08%)</title><rect x="44.4" y="485" width="1145.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="47.43" y="495.5" >[libstdc++.so.6.0.33]</text>
</g>
<g >
<title>srso_alias_safe_ret (2,172,256 samples, 0.41%)</title><rect x="328.1" y="213" width="4.8" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="331.13" y="223.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsgetn (286,022 samples, 0.05%)</title><rect x="785.4" y="453" width="0.6" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="788.40" y="463.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,459,100 samples, 0.27%)</title><rect x="59.4" y="437" width="3.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="62.42" y="447.5" ></text>
</g>
<g >
<title>__x64_sys_read (133,004,687 samples, 24.89%)</title><rect x="862.4" y="309" width="293.7" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="865.40" y="319.5" >__x64_sys_read</text>
</g>
<g >
<title>__legitimize_mnt (2,181,005 samples, 0.41%)</title><rect x="347.3" y="197" width="4.8" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="350.27" y="207.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (2,191,065 samples, 0.41%)</title><rect x="123.4" y="357" width="4.8" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="126.35" y="367.5" ></text>
</g>
<g >
<title>tcache_init.part.0 (82,386 samples, 0.02%)</title><rect x="1175.3" y="421" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1178.31" y="431.5" ></text>
</g>
<g >
<title>generic_file_open (1,046,877 samples, 0.20%)</title><rect x="445.4" y="181" width="2.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="448.40" y="191.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (1,459,100 samples, 0.27%)</title><rect x="59.4" y="325" width="3.2" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="62.42" y="335.5" ></text>
</g>
<g >
<title>run_binary_search (82,386 samples, 0.02%)</title><rect x="1175.3" y="469" width="0.2" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="1178.31" y="479.5" ></text>
</g>
<g >
<title>arena_get2.part.0 (82,386 samples, 0.02%)</title><rect x="1175.3" y="405" width="0.2" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="1178.31" y="415.5" ></text>
</g>
<g >
<title>dget_parent (4,352,504 samples, 0.81%)</title><rect x="1090.9" y="229" width="9.6" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1093.91" y="239.5" ></text>
</g>
<g >
<title>mntput (6,508,943 samples, 1.22%)</title><rect x="663.5" y="229" width="14.4" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="666.48" y="239.5" ></text>
</g>
<g >
<title>update_curr (2,164,321 samples, 0.41%)</title><rect x="375.8" y="37" width="4.8" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="378.78" y="47.5" ></text>
</g>
<g >
<title>count_memcg_events.constprop.0 (1,329,545 samples, 0.25%)</title><rect x="56.5" y="389" width="2.9" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="59.48" y="399.5" ></text>
</g>
<g >
<title>lockref_get (1,906,346 samples, 0.36%)</title><rect x="451.0" y="197" width="4.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="454.05" y="207.5" ></text>
</g>
<g >
<title>__f_unlock_pos (2,182,224 samples, 0.41%)</title><rect x="862.4" y="293" width="4.8" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="865.40" y="303.5" ></text>
</g>
<g >
<title>mas_wr_bnode (82,386 samples, 0.02%)</title><rect x="1175.3" y="181" width="0.2" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1178.31" y="191.5" ></text>
</g>
<g >
<title>d_absolute_path (16,800,736 samples, 3.14%)</title><rect x="539.1" y="101" width="37.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="542.12" y="111.5" >d_a..</text>
</g>
<g >
<title>do_syscall_64 (220,912,986 samples, 41.35%)</title><rect x="261.2" y="341" width="487.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="264.20" y="351.5" >do_syscall_64</text>
</g>
<g >
<title>generic_file_read_iter (44,027,981 samples, 8.24%)</title><rect x="951.2" y="245" width="97.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="954.16" y="255.5" >generic_fil..</text>
</g>
<g >
<title>aa_path_name (18,976,339 samples, 3.55%)</title><rect x="534.3" y="133" width="41.9" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="537.31" y="143.5" >aa_..</text>
</g>
<g >
<title>__rcu_read_unlock (3,838,335 samples, 0.72%)</title><rect x="1124.5" y="213" width="8.5" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1127.48" y="223.5" ></text>
</g>
<g >
<title>security_file_open (54,772,951 samples, 10.25%)</title><rect x="455.3" y="197" width="120.9" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="458.26" y="207.5" >security_file_o..</text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::basic_filebuf (2,178,091 samples, 0.41%)</title><rect x="81.8" y="453" width="4.8" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="84.82" y="463.5" ></text>
</g>
<g >
<title>_int_free (2,159,544 samples, 0.40%)</title><rect x="237.3" y="405" width="4.8" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="240.31" y="415.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (51,227,880 samples, 9.59%)</title><rect x="114.9" y="389" width="113.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="117.92" y="399.5" >entry_SYSCALL..</text>
</g>
<g >
<title>__hrtimer_run_queues (2,164,321 samples, 0.41%)</title><rect x="375.8" y="133" width="4.8" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="378.78" y="143.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_allocate_internal_buffer (2,197,854 samples, 0.41%)</title><rect x="77.0" y="453" width="4.8" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="79.97" y="463.5" ></text>
</g>
<g >
<title>vfs_read (2,152,122 samples, 0.40%)</title><rect x="1151.4" y="293" width="4.7" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1154.39" y="303.5" ></text>
</g>
<g >
<title>process_measurement (4,306,621 samples, 0.81%)</title><rect x="371.1" y="213" width="9.5" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="374.05" y="223.5" ></text>
</g>
<g >
<title>tick_sched_handle (1,359,492 samples, 0.25%)</title><rect x="38.7" y="229" width="3.0" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="41.65" y="239.5" ></text>
</g>
<g >
<title>[unknown] (6,302,183 samples, 1.18%)</title><rect x="10.0" y="501" width="13.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>handle_dots (10,483,792 samples, 1.96%)</title><rect x="609.5" y="213" width="23.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="612.53" y="223.5" >h..</text>
</g>
<g >
<title>hrtimer_interrupt (2,164,321 samples, 0.41%)</title><rect x="375.8" y="149" width="4.8" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="378.78" y="159.5" ></text>
</g>
<g >
<title>start_thread (518,709,812 samples, 97.08%)</title><rect x="44.4" y="501" width="1145.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="47.43" y="511.5" >start_thread</text>
</g>
<g >
<title>expand_files (4,010,556 samples, 0.75%)</title><rect x="692.2" y="261" width="8.9" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="695.20" y="271.5" ></text>
</g>
<g >
<title>apparmor_file_alloc_security (4,331,526 samples, 0.81%)</title><rect x="318.6" y="197" width="9.5" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="321.57" y="207.5" ></text>
</g>
<g >
<title>__fsnotify_parent (8,685,655 samples, 1.63%)</title><rect x="463.6" y="181" width="19.2" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="466.58" y="191.5" ></text>
</g>
<g >
<title>ima_file_check (2,166,445 samples, 0.41%)</title><rect x="576.2" y="245" width="4.8" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="579.22" y="255.5" ></text>
</g>
<g >
<title>__close_nocancel (57,765,560 samples, 10.81%)</title><rect x="105.3" y="405" width="127.6" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="108.30" y="415.5" >__close_nocancel</text>
</g>
<g >
<title>strncpy_from_user (8,712,989 samples, 1.63%)</title><rect x="729.8" y="245" width="19.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="732.82" y="255.5" ></text>
</g>
<g >
<title>do_syscall_64 (141,743,414 samples, 26.53%)</title><rect x="843.1" y="341" width="313.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="846.10" y="351.5" >do_syscall_64</text>
</g>
<g >
<title>copy_page_to_iter (4,146,810 samples, 0.78%)</title><rect x="979.0" y="213" width="9.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="982.00" y="223.5" ></text>
</g>
<g >
<title>__aa_path_perm (8,088,679 samples, 1.51%)</title><rect x="502.0" y="149" width="17.9" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="505.00" y="159.5" ></text>
</g>
<g >
<title>terminate_walk (12,923,658 samples, 2.42%)</title><rect x="649.3" y="245" width="28.6" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="652.31" y="255.5" >te..</text>
</g>
<g >
<title>__rcu_read_unlock (1,321,842 samples, 0.25%)</title><rect x="53.6" y="325" width="2.9" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="56.56" y="335.5" ></text>
</g>
<g >
<title>x64_sys_call (1,459,100 samples, 0.27%)</title><rect x="59.4" y="421" width="3.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="62.42" y="431.5" ></text>
</g>
<g >
<title>_dl_lookup_symbol_x (1,224,517 samples, 0.23%)</title><rect x="41.7" y="437" width="2.7" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="44.66" y="447.5" ></text>
</g>
<g >
<title>filemap_get_pages (2,162,012 samples, 0.40%)</title><rect x="960.5" y="229" width="4.8" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="963.48" y="239.5" ></text>
</g>
<g >
<title>inode_permission (2,167,091 samples, 0.41%)</title><rect x="380.6" y="229" width="4.7" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="383.56" y="239.5" ></text>
</g>
<g >
<title>_dl_load_cache_lookup (66,609 samples, 0.01%)</title><rect x="38.5" y="389" width="0.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="41.50" y="399.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsgetn (161,306,401 samples, 30.19%)</title><rect x="814.3" y="421" width="356.2" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="817.31" y="431.5" >std::basic_streambuf&lt;char, std::char_traits&lt;char..</text>
</g>
<g >
<title>ext4_file_read_iter (50,163,035 samples, 9.39%)</title><rect x="937.6" y="261" width="110.8" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="940.61" y="271.5" >ext4_file_rea..</text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::open (4,326,256 samples, 0.81%)</title><rect x="1175.5" y="469" width="9.5" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1178.49" y="479.5" ></text>
</g>
<g >
<title>read (154,805,603 samples, 28.97%)</title><rect x="828.7" y="373" width="341.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="831.66" y="383.5" >read</text>
</g>
<g >
<title>getname_flags.part.0 (21,736,413 samples, 4.07%)</title><rect x="701.1" y="261" width="48.0" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="704.06" y="271.5" >getn..</text>
</g>
<g >
<title>malloc (2,092,556 samples, 0.39%)</title><rect x="780.8" y="405" width="4.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="783.78" y="415.5" ></text>
</g>
<g >
<title>ima_file_free (2,169,150 samples, 0.41%)</title><rect x="195.2" y="293" width="4.8" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="198.21" y="303.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (2,057,673 samples, 0.39%)</title><rect x="649.3" y="229" width="4.6" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="652.31" y="239.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (6,514,335 samples, 1.22%)</title><rect x="261.2" y="325" width="14.4" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="264.20" y="335.5" ></text>
</g>
<g >
<title>alloc_new_heap (82,386 samples, 0.02%)</title><rect x="1175.3" y="389" width="0.2" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1178.31" y="399.5" ></text>
</g>
<g >
<title>_IO_file_open (229,559,241 samples, 42.96%)</title><rect x="246.9" y="389" width="506.9" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="249.86" y="399.5" >_IO_file_open</text>
</g>
<g >
<title>fclose@@GLIBC_2.2.5 (62,116,037 samples, 11.63%)</title><rect x="95.7" y="421" width="137.2" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="98.69" y="431.5" >fclose@@GLIBC_2.2.5</text>
</g>
<g >
<title>__handle_mm_fault (4,823,487 samples, 0.90%)</title><rect x="45.8" y="389" width="10.7" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="48.83" y="399.5" ></text>
</g>
<g >
<title>get_random_u64 (76,573 samples, 0.01%)</title><rect x="38.3" y="325" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="41.33" y="335.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (146,115,307 samples, 27.35%)</title><rect x="833.4" y="357" width="322.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="836.45" y="367.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>path_init (2,137,128 samples, 0.40%)</title><rect x="280.3" y="261" width="4.8" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="283.34" y="271.5" ></text>
</g>
<g >
<title>kmem_cache_free (6,526,592 samples, 1.22%)</title><rect x="200.0" y="293" width="14.4" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="203.00" y="303.5" ></text>
</g>
<g >
<title>mas_wr_modify (82,386 samples, 0.02%)</title><rect x="1175.3" y="197" width="0.2" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1178.31" y="207.5" ></text>
</g>
<g >
<title>arch_mmap_rnd (76,573 samples, 0.01%)</title><rect x="38.3" y="341" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="41.33" y="351.5" ></text>
</g>
<g >
<title>__GI___libc_open (229,559,241 samples, 42.96%)</title><rect x="246.9" y="373" width="506.9" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="249.86" y="383.5" >__GI___libc_open</text>
</g>
<g >
<title>mntput_no_expire (4,327,445 samples, 0.81%)</title><rect x="668.3" y="213" width="9.6" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="671.30" y="223.5" ></text>
</g>
<g >
<title>update_process_times (1,359,492 samples, 0.25%)</title><rect x="38.7" y="213" width="3.0" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="41.65" y="223.5" ></text>
</g>
<g >
<title>current_time (4,347,976 samples, 0.81%)</title><rect x="1034.0" y="181" width="9.6" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1036.98" y="191.5" ></text>
</g>
<g >
<title>lockref_put_return (2,190,888 samples, 0.41%)</title><rect x="171.3" y="277" width="4.8" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="174.28" y="287.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::close (62,116,037 samples, 11.63%)</title><rect x="95.7" y="437" width="137.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="98.69" y="447.5" >std::__basic_file..</text>
</g>
<g >
<title>x64_sys_call (45,218,243 samples, 8.46%)</title><rect x="128.2" y="357" width="99.9" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="131.19" y="367.5" >x64_sys_call</text>
</g>
<g >
<title>_copy_to_iter (4,146,810 samples, 0.78%)</title><rect x="979.0" y="197" width="9.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="982.00" y="207.5" ></text>
</g>
<g >
<title>_dl_map_object_deps (1,429,696 samples, 0.27%)</title><rect x="38.5" y="453" width="3.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="41.50" y="463.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (2,159,544 samples, 0.40%)</title><rect x="237.3" y="421" width="4.8" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="240.31" y="431.5" ></text>
</g>
<g >
<title>lockref_get_not_zero (2,176,785 samples, 0.41%)</title><rect x="1095.7" y="213" width="4.8" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="1098.72" y="223.5" ></text>
</g>
<g >
<title>generic_permission (2,182,378 samples, 0.41%)</title><rect x="385.3" y="197" width="4.9" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="388.35" y="207.5" ></text>
</g>
<g >
<title>mutex_lock (4,128,643 samples, 0.77%)</title><rect x="872.0" y="261" width="9.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="875.01" y="271.5" ></text>
</g>
<g >
<title>_IO_file_finish@@GLIBC_2.2.5 (2,185,874 samples, 0.41%)</title><rect x="100.5" y="405" width="4.8" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="103.47" y="415.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_allocate_internal_buffer (2,092,556 samples, 0.39%)</title><rect x="780.8" y="437" width="4.6" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="783.78" y="447.5" ></text>
</g>
<g >
<title>do_anonymous_page (4,823,487 samples, 0.90%)</title><rect x="45.8" y="357" width="10.7" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="48.83" y="367.5" ></text>
</g>
<g >
<title>x64_sys_call (82,386 samples, 0.02%)</title><rect x="1175.3" y="325" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1178.31" y="335.5" ></text>
</g>
<g >
<title>__rcu_read_lock (2,175,341 samples, 0.41%)</title><rect x="209.6" y="277" width="4.8" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="212.61" y="287.5" ></text>
</g>
<g >
<title>mas_store_prealloc (82,386 samples, 0.02%)</title><rect x="1175.3" y="229" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1178.31" y="239.5" ></text>
</g>
<g >
<title>aa_get_buffer (2,186,671 samples, 0.41%)</title><rect x="519.9" y="149" width="4.8" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="522.86" y="159.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (1,359,492 samples, 0.25%)</title><rect x="38.7" y="245" width="3.0" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="41.65" y="255.5" ></text>
</g>
<g >
<title>dl_main (2,654,213 samples, 0.50%)</title><rect x="38.5" y="469" width="5.9" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="41.50" y="479.5" ></text>
</g>
<g >
<title>kmem_cache_free (2,175,286 samples, 0.41%)</title><rect x="214.4" y="277" width="4.8" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="217.42" y="287.5" ></text>
</g>
<g >
<title>operator new (82,386 samples, 0.02%)</title><rect x="1175.3" y="453" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1178.31" y="463.5" ></text>
</g>
<g >
<title>handle_pte_fault (4,823,487 samples, 0.90%)</title><rect x="45.8" y="373" width="10.7" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="48.83" y="383.5" ></text>
</g>
<g >
<title>exc_page_fault (6,784,644 samples, 1.27%)</title><rect x="44.4" y="437" width="15.0" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="47.43" y="447.5" ></text>
</g>
<g >
<title>free_unref_page_list (1,177,120 samples, 0.22%)</title><rect x="51.0" y="293" width="2.6" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="53.96" y="303.5" ></text>
</g>
<g >
<title>get_unused_fd_flags (4,010,556 samples, 0.75%)</title><rect x="692.2" y="277" width="8.9" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="695.20" y="287.5" ></text>
</g>
<g >
<title>open_last_lookups (2,177,987 samples, 0.41%)</title><rect x="639.7" y="245" width="4.8" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="642.66" y="255.5" ></text>
</g>
<g >
<title>__fdget_pos (6,294,553 samples, 1.18%)</title><rect x="867.2" y="277" width="13.9" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="870.22" y="287.5" ></text>
</g>
<g >
<title>aa_path_perm (37,529,648 samples, 7.02%)</title><rect x="493.3" y="165" width="82.9" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="496.34" y="175.5" >aa_path_p..</text>
</g>
<g >
<title>task_tick_fair (2,164,321 samples, 0.41%)</title><rect x="375.8" y="53" width="4.8" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="378.78" y="63.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (2,145,421 samples, 0.40%)</title><rect x="1086.2" y="229" width="4.7" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1089.18" y="239.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (2,183,573 samples, 0.41%)</title><rect x="228.1" y="389" width="4.8" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="231.05" y="399.5" ></text>
</g>
<g >
<title>exc_page_fault (1,363,087 samples, 0.26%)</title><rect x="38.7" y="357" width="3.0" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="41.65" y="367.5" ></text>
</g>
<g >
<title>aa_str_perms (8,088,679 samples, 1.51%)</title><rect x="502.0" y="133" width="17.9" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="505.00" y="143.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1,359,492 samples, 0.25%)</title><rect x="38.7" y="261" width="3.0" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="41.65" y="271.5" ></text>
</g>
<g >
<title>fscrypt_file_open (6,520,415 samples, 1.22%)</title><rect x="431.0" y="181" width="14.4" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="434.00" y="191.5" ></text>
</g>
<g >
<title>touch_atime (18,583,020 samples, 3.48%)</title><rect x="1007.4" y="213" width="41.0" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1010.35" y="223.5" >tou..</text>
</g>
<g >
<title>_IO_file_fopen@@GLIBC_2.2.5 (239,687,854 samples, 44.86%)</title><rect x="246.9" y="405" width="529.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="249.86" y="415.5" >_IO_file_fopen@@GLIBC_2.2.5</text>
</g>
<g >
<title>_int_malloc (2,092,556 samples, 0.39%)</title><rect x="780.8" y="389" width="4.6" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="783.78" y="399.5" ></text>
</g>
<g >
<title>folio_batch_move_lru (2,364,518 samples, 0.44%)</title><rect x="48.3" y="309" width="5.3" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="51.34" y="319.5" ></text>
</g>
<g >
<title>handle_dots (2,057,068 samples, 0.38%)</title><rect x="590.6" y="229" width="4.6" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="593.62" y="239.5" ></text>
</g>
<g >
<title>lockref_put_return (2,174,476 samples, 0.41%)</title><rect x="658.7" y="229" width="4.8" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="661.68" y="239.5" ></text>
</g>
<g >
<title>aa_file_perm (6,242,777 samples, 1.17%)</title><rect x="1133.0" y="213" width="13.7" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1135.95" y="223.5" ></text>
</g>
<g >
<title>folio_add_lru_vma (2,364,518 samples, 0.44%)</title><rect x="48.3" y="341" width="5.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="51.34" y="351.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (2,186,859 samples, 0.41%)</title><rect x="185.6" y="293" width="4.8" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="188.60" y="303.5" ></text>
</g>
<g >
<title>_dl_relocate_object (1,224,517 samples, 0.23%)</title><rect x="41.7" y="453" width="2.7" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="44.66" y="463.5" ></text>
</g>
<g >
<title>lockref_put_return (2,173,620 samples, 0.41%)</title><rect x="932.8" y="245" width="4.8" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="935.81" y="255.5" ></text>
</g>
<g >
<title>__x64_sys_close (45,218,243 samples, 8.46%)</title><rect x="128.2" y="341" width="99.9" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="131.19" y="351.5" >__x64_sys_cl..</text>
</g>
<g >
<title>operator new (2,092,556 samples, 0.39%)</title><rect x="780.8" y="421" width="4.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="783.78" y="431.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2,164,321 samples, 0.41%)</title><rect x="375.8" y="197" width="4.8" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="378.78" y="207.5" ></text>
</g>
<g >
<title>mod_objcg_state (2,170,030 samples, 0.41%)</title><rect x="204.8" y="261" width="4.8" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="207.82" y="271.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::xsgetn (156,967,797 samples, 29.38%)</title><rect x="823.9" y="389" width="346.6" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="826.89" y="399.5" >std::__basic_file&lt;char&gt;::xsgetn</text>
</g>
<g >
<title>__GI___libc_open (6,524,807 samples, 1.22%)</title><rect x="23.9" y="501" width="14.4" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="26.92" y="511.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (6,524,807 samples, 1.22%)</title><rect x="23.9" y="485" width="14.4" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="26.92" y="495.5" ></text>
</g>
<g >
<title>dget_parent (1,224,491 samples, 0.23%)</title><rect x="928.1" y="245" width="2.7" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="931.10" y="255.5" ></text>
</g>
<g >
<title>__GI___libc_open (2,170,679 samples, 0.41%)</title><rect x="753.8" y="389" width="4.8" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="756.83" y="399.5" ></text>
</g>
<g >
<title>path_name (18,976,339 samples, 3.55%)</title><rect x="534.3" y="149" width="41.9" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="537.31" y="159.5" >pat..</text>
</g>
<g >
<title>_dl_start (2,654,213 samples, 0.50%)</title><rect x="38.5" y="501" width="5.9" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="41.50" y="511.5" ></text>
</g>
<g >
<title>_dl_catch_exception (1,429,696 samples, 0.27%)</title><rect x="38.5" y="437" width="3.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="41.50" y="447.5" ></text>
</g>
<g >
<title>__fsnotify_parent (17,096,714 samples, 3.20%)</title><rect x="899.9" y="261" width="37.7" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="902.85" y="271.5" >__f..</text>
</g>
<g >
<title>srso_alias_safe_ret (2,115,132 samples, 0.40%)</title><rect x="881.1" y="277" width="4.7" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="884.12" y="287.5" ></text>
</g>
<g >
<title>unmap_region (1,459,100 samples, 0.27%)</title><rect x="59.4" y="341" width="3.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="62.42" y="351.5" ></text>
</g>
<g >
<title>security_file_permission (12,220,354 samples, 2.29%)</title><rect x="1119.8" y="245" width="26.9" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="1122.75" y="255.5" >s..</text>
</g>
<g >
<title>__fput (39,046,928 samples, 7.31%)</title><rect x="133.0" y="309" width="86.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="135.99" y="319.5" >__fput</text>
</g>
<g >
<title>do_lookup_x (1,224,517 samples, 0.23%)</title><rect x="41.7" y="421" width="2.7" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="44.66" y="431.5" ></text>
</g>
<g >
<title>__fsnotify_parent (8,688,418 samples, 1.63%)</title><rect x="156.9" y="293" width="19.2" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="159.93" y="303.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::underflow (161,306,401 samples, 30.19%)</title><rect x="814.3" y="405" width="356.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="817.31" y="415.5" >std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; ..</text>
</g>
<g >
<title>entry_SYSCALL_64 (2,166,562 samples, 0.41%)</title><rect x="828.7" y="357" width="4.7" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="831.66" y="367.5" ></text>
</g>
<g >
<title>bothOptimized (534,301,061 samples, 100.00%)</title><rect x="10.0" y="533" width="1180.0" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="13.00" y="543.5" >bothOptimized</text>
</g>
<g >
<title>__check_object_size (2,156,478 samples, 0.40%)</title><rect x="705.9" y="245" width="4.8" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="708.92" y="255.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1,359,492 samples, 0.25%)</title><rect x="38.7" y="341" width="3.0" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="41.65" y="351.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsgetn (165,534,968 samples, 30.98%)</title><rect x="805.0" y="437" width="365.5" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="807.97" y="447.5" >std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;..</text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (2,164,321 samples, 0.41%)</title><rect x="375.8" y="165" width="4.8" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="378.78" y="175.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (631,612 samples, 0.12%)</title><rect x="44.4" y="405" width="1.4" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="47.43" y="415.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_destroy_internal_buffer (4,169,386 samples, 0.78%)</title><rect x="232.9" y="437" width="9.2" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="235.87" y="447.5" ></text>
</g>
<g >
<title>dput (4,325,952 samples, 0.81%)</title><rect x="161.7" y="277" width="9.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="164.73" y="287.5" ></text>
</g>
<g >
<title>atime_needs_update (14,456,655 samples, 2.71%)</title><rect x="1016.5" y="197" width="31.9" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1019.47" y="207.5" >at..</text>
</g>
<g >
<title>mmap_region (82,386 samples, 0.02%)</title><rect x="1175.3" y="245" width="0.2" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="1178.31" y="255.5" ></text>
</g>
<g >
<title>filemap_read (37,644,637 samples, 7.05%)</title><rect x="965.3" y="229" width="83.1" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="968.26" y="239.5" >filemap_r..</text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (4,351,359 samples, 0.81%)</title><rect x="786.0" y="453" width="9.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="789.03" y="463.5" ></text>
</g>
<g >
<title>__memcg_slab_free_hook (2,170,030 samples, 0.41%)</title><rect x="204.8" y="277" width="4.8" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="207.82" y="287.5" ></text>
</g>
<g >
<title>x64_sys_call (76,573 samples, 0.01%)</title><rect x="38.3" y="469" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="41.33" y="479.5" ></text>
</g>
<g >
<title>fsnotify (2,163,282 samples, 0.40%)</title><rect x="478.0" y="165" width="4.8" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="480.98" y="175.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (2,187,077 samples, 0.41%)</title><rect x="1114.9" y="229" width="4.9" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1117.92" y="239.5" ></text>
</g>
<g >
<title>read (6,302,151 samples, 1.18%)</title><rect x="10.0" y="469" width="13.9" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>update_process_times (2,164,321 samples, 0.41%)</title><rect x="375.8" y="85" width="4.8" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="378.78" y="95.5" ></text>
</g>
<g >
<title>__rcu_read_lock (2,181,498 samples, 0.41%)</title><rect x="663.5" y="213" width="4.8" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="666.48" y="223.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (2,190,330 samples, 0.41%)</title><rect x="644.5" y="245" width="4.8" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="647.47" y="255.5" ></text>
</g>
<g >
<title>_copy_to_iter (1,882,026 samples, 0.35%)</title><rect x="974.8" y="213" width="4.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="977.85" y="223.5" ></text>
</g>
<g >
<title>crng_fast_key_erasure (76,573 samples, 0.01%)</title><rect x="38.3" y="293" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="41.33" y="303.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (2,135,324 samples, 0.40%)</title><rect x="332.9" y="229" width="4.7" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="335.93" y="239.5" ></text>
</g>
<g >
<title>std::istream::read (169,758,406 samples, 31.77%)</title><rect x="795.6" y="453" width="374.9" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="798.64" y="463.5" >std::istream::read</text>
</g>
<g >
<title>__strstr_generic (3,612,811 samples, 0.68%)</title><rect x="768.2" y="389" width="8.0" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="771.22" y="399.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::close (70,389,052 samples, 13.17%)</title><rect x="86.6" y="453" width="155.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="89.63" y="463.5" >std::basic_filebuf&lt;..</text>
</g>
<g >
<title>path_openat (182,205,518 samples, 34.10%)</title><rect x="285.1" y="261" width="402.4" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="288.06" y="271.5" >path_openat</text>
</g>
<g >
<title>clone3 (518,740,499 samples, 97.09%)</title><rect x="44.4" y="517" width="1145.6" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="47.37" y="527.5" >clone3</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (227,407,851 samples, 42.56%)</title><rect x="246.9" y="357" width="502.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="249.86" y="367.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>std::locale::~locale (2,155,345 samples, 0.40%)</title><rect x="1170.5" y="453" width="4.8" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1173.55" y="463.5" ></text>
</g>
<g >
<title>do_sys_openat2 (214,398,651 samples, 40.13%)</title><rect x="275.6" y="293" width="473.5" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="278.59" y="303.5" >do_sys_openat2</text>
</g>
<g >
<title>scheduler_tick (2,164,321 samples, 0.41%)</title><rect x="375.8" y="69" width="4.8" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="378.78" y="79.5" ></text>
</g>
<g >
<title>do_filp_open (186,494,569 samples, 34.90%)</title><rect x="275.6" y="277" width="411.9" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="278.59" y="287.5" >do_filp_open</text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::open (241,760,506 samples, 45.25%)</title><rect x="246.9" y="437" width="533.9" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="249.86" y="447.5" >std::__basic_file&lt;char&gt;::open</text>
</g>
<g >
<title>apparmor_file_open (42,319,942 samples, 7.92%)</title><rect x="482.8" y="181" width="93.4" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="485.76" y="191.5" >apparmor_fi..</text>
</g>
<g >
<title>scheduler_tick (1,359,492 samples, 0.25%)</title><rect x="38.7" y="197" width="3.0" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="41.65" y="207.5" ></text>
</g>
<g >
<title>io_latency_read (503,817,880 samples, 94.29%)</title><rect x="62.6" y="469" width="1112.7" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="65.64" y="479.5" >io_latency_read</text>
</g>
<g >
<title>x64_sys_call (133,004,687 samples, 24.89%)</title><rect x="862.4" y="325" width="293.7" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="865.40" y="335.5" >x64_sys_call</text>
</g>
<g >
<title>alloc_empty_file (21,632,269 samples, 4.05%)</title><rect x="289.9" y="245" width="47.7" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="292.87" y="255.5" >allo..</text>
</g>
<g >
<title>mntput (3,162,265 samples, 0.59%)</title><rect x="632.7" y="245" width="7.0" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="635.68" y="255.5" ></text>
</g>
<g >
<title>try_to_unlazy (8,640,430 samples, 1.62%)</title><rect x="347.3" y="213" width="19.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="350.27" y="223.5" ></text>
</g>
<g >
<title>lockref_get_not_dead (2,146,188 samples, 0.40%)</title><rect x="361.6" y="181" width="4.8" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="364.61" y="191.5" ></text>
</g>
<g >
<title>do_vmi_munmap (1,459,100 samples, 0.27%)</title><rect x="59.4" y="373" width="3.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="62.42" y="383.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (82,386 samples, 0.02%)</title><rect x="1175.3" y="357" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1178.31" y="367.5" ></text>
</g>
<g >
<title>std::istream::read (2,171,801 samples, 0.41%)</title><rect x="1185.2" y="469" width="4.8" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1188.19" y="479.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (76,573 samples, 0.01%)</title><rect x="38.3" y="405" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="41.33" y="415.5" ></text>
</g>
<g >
<title>_int_free_maybe_consolidate (2,159,544 samples, 0.40%)</title><rect x="237.3" y="389" width="4.8" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="240.31" y="399.5" ></text>
</g>
<g >
<title>apparmor_file_permission (12,220,354 samples, 2.29%)</title><rect x="1119.8" y="229" width="26.9" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1122.75" y="239.5" >a..</text>
</g>
<g >
<title>security_inode_permission (2,164,008 samples, 0.41%)</title><rect x="599.9" y="213" width="4.8" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="602.94" y="223.5" ></text>
</g>
<g >
<title>do_open (108,026,813 samples, 20.22%)</title><rect x="337.6" y="245" width="238.6" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="340.65" y="255.5" >do_open</text>
</g>
<g >
<title>getname (21,736,413 samples, 4.07%)</title><rect x="701.1" y="277" width="48.0" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="704.06" y="287.5" >getn..</text>
</g>
<g >
<title>aa_label_next_confined (2,135,684 samples, 0.40%)</title><rect x="488.6" y="165" width="4.7" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="491.62" y="175.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (2,164,321 samples, 0.41%)</title><rect x="375.8" y="117" width="4.8" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="378.78" y="127.5" ></text>
</g>
<g >
<title>__vm_munmap (1,459,100 samples, 0.27%)</title><rect x="59.4" y="389" width="3.2" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="62.42" y="399.5" ></text>
</g>
<g >
<title>prepend_copy (10,297,792 samples, 1.93%)</title><rect x="553.5" y="53" width="22.7" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="556.48" y="63.5" >p..</text>
</g>
<g >
<title>folio_add_lru (2,364,518 samples, 0.44%)</title><rect x="48.3" y="325" width="5.3" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="51.34" y="335.5" ></text>
</g>
<g >
<title>alloc_pages_mpol (1,137,127 samples, 0.21%)</title><rect x="45.8" y="309" width="2.5" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="48.83" y="319.5" ></text>
</g>
<g >
<title>ima_file_free (1,814,192 samples, 0.34%)</title><rect x="219.2" y="309" width="4.0" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="222.22" y="319.5" ></text>
</g>
<g >
<title>dput (6,522,373 samples, 1.22%)</title><rect x="463.6" y="165" width="14.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="466.58" y="175.5" ></text>
</g>
<g >
<title>__mmap (82,386 samples, 0.02%)</title><rect x="1175.3" y="373" width="0.2" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="1178.31" y="383.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1,137,127 samples, 0.21%)</title><rect x="45.8" y="277" width="2.5" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="48.83" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (2,072,652 samples, 0.39%)</title><rect x="776.2" y="389" width="4.6" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="779.20" y="399.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1,359,492 samples, 0.25%)</title><rect x="38.7" y="277" width="3.0" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="41.65" y="287.5" ></text>
</g>
<g >
<title>__mutex_init (2,169,298 samples, 0.41%)</title><rect x="289.9" y="229" width="4.8" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="292.87" y="239.5" ></text>
</g>
<g >
<title>filemap_get_read_batch (4,343,033 samples, 0.81%)</title><rect x="997.8" y="197" width="9.6" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1000.76" y="207.5" ></text>
</g>
<g >
<title>_get_random_bytes (76,573 samples, 0.01%)</title><rect x="38.3" y="309" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="41.33" y="319.5" ></text>
</g>
<g >
<title>ima_file_check (6,433,189 samples, 1.20%)</title><rect x="366.4" y="229" width="14.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="369.35" y="239.5" ></text>
</g>
<g >
<title>aa_put_buffer (4,357,710 samples, 0.82%)</title><rect x="524.7" y="149" width="9.6" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="527.69" y="159.5" ></text>
</g>
<g >
<title>do_syscall_64 (82,386 samples, 0.02%)</title><rect x="1175.3" y="341" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1178.31" y="351.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::clear (67,745 samples, 0.01%)</title><rect x="1185.0" y="469" width="0.2" height="15.0" fill="rgb(220,71,16)" rx="2" ry="2" />
<text  x="1188.05" y="479.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2,164,218 samples, 0.41%)</title><rect x="809.5" y="421" width="4.8" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="812.53" y="431.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (82,386 samples, 0.02%)</title><rect x="1175.3" y="309" width="0.2" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1178.31" y="319.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1,359,492 samples, 0.25%)</title><rect x="38.7" y="309" width="3.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="41.65" y="319.5" ></text>
</g>
<g >
<title>__memcg_slab_post_alloc_hook (2,135,324 samples, 0.40%)</title><rect x="332.9" y="213" width="4.7" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="335.93" y="223.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (6,302,151 samples, 1.18%)</title><rect x="10.0" y="453" width="13.9" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (82,386 samples, 0.02%)</title><rect x="1175.3" y="277" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1178.31" y="287.5" ></text>
</g>
<g >
<title>__check_object_size.part.0 (2,163,296 samples, 0.40%)</title><rect x="739.4" y="213" width="4.8" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="742.45" y="223.5" ></text>
</g>
<g >
<title>ext4_file_open (9,730,591 samples, 1.82%)</title><rect x="426.2" y="197" width="21.5" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="429.22" y="207.5" >e..</text>
</g>
<g >
<title>ksys_mmap_pgoff (82,386 samples, 0.02%)</title><rect x="1175.3" y="293" width="0.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1178.31" y="303.5" ></text>
</g>
<g >
<title>inode_permission (2,182,378 samples, 0.41%)</title><rect x="385.3" y="213" width="4.9" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="388.35" y="223.5" ></text>
</g>
<g >
<title>clear_page_erms (1,137,127 samples, 0.21%)</title><rect x="45.8" y="261" width="2.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="48.83" y="271.5" ></text>
</g>
<g >
<title>search_binary_handler (76,573 samples, 0.01%)</title><rect x="38.3" y="373" width="0.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="41.33" y="383.5" ></text>
</g>
<g >
<title>mas_split.isra.0 (82,386 samples, 0.02%)</title><rect x="1175.3" y="165" width="0.2" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="1178.31" y="175.5" ></text>
</g>
<g >
<title>_dl_start_user (2,654,213 samples, 0.50%)</title><rect x="38.5" y="517" width="5.9" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="41.50" y="527.5" ></text>
</g>
<g >
<title>mas_wr_store_entry.isra.0 (82,386 samples, 0.02%)</title><rect x="1175.3" y="213" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1178.31" y="223.5" ></text>
</g>
<g >
<title>__x64_sys_openat (214,398,651 samples, 40.13%)</title><rect x="275.6" y="309" width="473.5" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="278.59" y="319.5" >__x64_sys_openat</text>
</g>
<g >
<title>security_file_free (2,175,286 samples, 0.41%)</title><rect x="214.4" y="293" width="4.8" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="217.42" y="303.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (2,654,213 samples, 0.50%)</title><rect x="38.5" y="485" width="5.9" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="41.50" y="495.5" ></text>
</g>
<g >
<title>may_open (2,182,378 samples, 0.41%)</title><rect x="385.3" y="229" width="4.9" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="388.35" y="239.5" ></text>
</g>
<g >
<title>dquot_file_open (2,163,299 samples, 0.40%)</title><rect x="426.2" y="181" width="4.8" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="429.22" y="191.5" ></text>
</g>
<g >
<title>dput (2,174,963 samples, 0.41%)</title><rect x="1100.5" y="229" width="4.8" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1103.53" y="239.5" ></text>
</g>
<g >
<title>inode_permission (4,326,711 samples, 0.81%)</title><rect x="595.2" y="229" width="9.5" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="598.16" y="239.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (2,168,937 samples, 0.41%)</title><rect x="786.0" y="437" width="4.8" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="789.03" y="447.5" ></text>
</g>
<g >
<title>handle_mm_fault (6,153,032 samples, 1.15%)</title><rect x="45.8" y="405" width="13.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="48.83" y="415.5" ></text>
</g>
<g >
<title>dput (2,166,510 samples, 0.41%)</title><rect x="190.4" y="293" width="4.8" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="193.43" y="303.5" ></text>
</g>
<g >
<title>rw_verify_area (44,531,902 samples, 8.33%)</title><rect x="1048.4" y="261" width="98.3" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="1051.39" y="271.5" >rw_verify_a..</text>
</g>
<g >
<title>__strchr_avx2 (4,345,123 samples, 0.81%)</title><rect x="758.6" y="389" width="9.6" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="761.63" y="399.5" ></text>
</g>
<g >
<title>apparmor_file_open (3,569,279 samples, 0.67%)</title><rect x="418.3" y="197" width="7.9" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="421.34" y="207.5" ></text>
</g>
<g >
<title>arch_scale_freq_tick (1,359,492 samples, 0.25%)</title><rect x="38.7" y="181" width="3.0" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="41.65" y="191.5" ></text>
</g>
<g >
<title>bprm_execve (76,573 samples, 0.01%)</title><rect x="38.3" y="421" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="41.33" y="431.5" ></text>
</g>
<g >
<title>folio_add_new_anon_rmap (1,321,842 samples, 0.25%)</title><rect x="53.6" y="341" width="2.9" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="56.56" y="351.5" ></text>
</g>
<g >
<title>alloc_anon_folio (1,137,127 samples, 0.21%)</title><rect x="45.8" y="341" width="2.5" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="48.83" y="351.5" ></text>
</g>
<g >
<title>_IO_file_close_it@@GLIBC_2.2.5 (2,164,603 samples, 0.41%)</title><rect x="95.7" y="405" width="4.8" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="98.69" y="415.5" ></text>
</g>
<g >
<title>init_file (17,327,647 samples, 3.24%)</title><rect x="294.7" y="229" width="38.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="297.66" y="239.5" >ini..</text>
</g>
<g >
<title>syscall_exit_to_user_mode (6,554,229 samples, 1.23%)</title><rect x="847.9" y="325" width="14.5" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="850.93" y="335.5" ></text>
</g>
<g >
<title>__alloc_pages (1,137,127 samples, 0.21%)</title><rect x="45.8" y="293" width="2.5" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="48.83" y="303.5" ></text>
</g>
<g >
<title>__fsnotify_parent (8,573,361 samples, 1.60%)</title><rect x="399.4" y="197" width="18.9" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="402.41" y="207.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::open (246,014,365 samples, 46.04%)</title><rect x="242.1" y="453" width="543.3" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="245.08" y="463.5" >std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::open</text>
</g>
<g >
<title>do_dentry_open (84,245,364 samples, 15.77%)</title><rect x="390.2" y="213" width="186.0" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="393.17" y="223.5" >do_dentry_open</text>
</g>
<g >
<title>aa_dfa_match (8,088,679 samples, 1.51%)</title><rect x="502.0" y="117" width="17.9" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="505.00" y="127.5" ></text>
</g>
<g >
<title>vfs_open (4,348,329 samples, 0.81%)</title><rect x="677.9" y="245" width="9.6" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="680.85" y="255.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (2,104,090 samples, 0.39%)</title><rect x="1146.7" y="293" width="4.7" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1149.74" y="303.5" ></text>
</g>
<g >
<title>all (534,305,094 samples, 100%)</title><rect x="10.0" y="549" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (2,151,923 samples, 0.40%)</title><rect x="275.6" y="261" width="4.7" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="278.59" y="271.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (23,397,889 samples, 4.38%)</title><rect x="581.0" y="245" width="51.7" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="584.01" y="255.5" >link_..</text>
</g>
<g >
<title>do_user_addr_fault (6,784,644 samples, 1.27%)</title><rect x="44.4" y="421" width="15.0" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="47.43" y="431.5" ></text>
</g>
<g >
<title>dget_parent (4,368,459 samples, 0.82%)</title><rect x="431.0" y="165" width="9.6" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="434.00" y="175.5" ></text>
</g>
<g >
<title>vma_alloc_folio (1,137,127 samples, 0.21%)</title><rect x="45.8" y="325" width="2.5" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="48.83" y="335.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (2,164,321 samples, 0.41%)</title><rect x="375.8" y="181" width="4.8" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="378.78" y="191.5" ></text>
</g>
<g >
<title>__rcu_read_lock (4,337,204 samples, 0.81%)</title><rect x="918.5" y="245" width="9.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="921.52" y="255.5" ></text>
</g>
<g >
<title>_dl_map_object (1,429,696 samples, 0.27%)</title><rect x="38.5" y="405" width="3.2" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="41.50" y="415.5" ></text>
</g>
<g >
<title>fopen@@GLIBC_2.2.5 (241,760,506 samples, 45.25%)</title><rect x="246.9" y="421" width="533.9" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="249.86" y="431.5" >fopen@@GLIBC_2.2.5</text>
</g>
<g >
<title>__fput_sync (40,861,120 samples, 7.65%)</title><rect x="133.0" y="325" width="90.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="135.99" y="335.5" >__fput_sync</text>
</g>
<g >
<title>asm_exc_page_fault (6,784,644 samples, 1.27%)</title><rect x="44.4" y="453" width="15.0" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="47.43" y="463.5" ></text>
</g>
<g >
<title>srso_alias_untrain_ret (2,151,390 samples, 0.40%)</title><rect x="749.1" y="357" width="4.7" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="752.08" y="367.5" ></text>
</g>
<g >
<title>d_namespace_path.constprop.0 (16,800,736 samples, 3.14%)</title><rect x="539.1" y="117" width="37.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="542.12" y="127.5" >d_n..</text>
</g>
<g >
<title>prepend_path (16,800,736 samples, 3.14%)</title><rect x="539.1" y="85" width="37.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="542.12" y="95.5" >pre..</text>
</g>
<g >
<title>x64_sys_call (214,398,651 samples, 40.13%)</title><rect x="275.6" y="325" width="473.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="278.59" y="335.5" >x64_sys_call</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (76,573 samples, 0.01%)</title><rect x="38.3" y="501" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="41.33" y="511.5" ></text>
</g>
<g >
<title>tlb_batch_pages_flush (1,459,100 samples, 0.27%)</title><rect x="59.4" y="309" width="3.2" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="62.42" y="319.5" ></text>
</g>
<g >
<title>copy_from_kernel_nofault (10,297,792 samples, 1.93%)</title><rect x="553.5" y="37" width="22.7" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="556.48" y="47.5" >c..</text>
</g>
<g >
<title>fsnotify (4,343,812 samples, 0.81%)</title><rect x="1105.3" y="229" width="9.6" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1108.33" y="239.5" ></text>
</g>
<g >
<title>__rcu_read_lock (4,290,973 samples, 0.80%)</title><rect x="176.1" y="293" width="9.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="179.12" y="303.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (6,523,734 samples, 1.22%)</title><rect x="1156.1" y="357" width="14.4" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1159.14" y="367.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (2,178,091 samples, 0.41%)</title><rect x="81.8" y="437" width="4.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="84.82" y="447.5" ></text>
</g>
<g >
<title>prepend (14,627,657 samples, 2.74%)</title><rect x="543.9" y="69" width="32.3" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="546.92" y="79.5" >pr..</text>
</g>
<g >
<title>fd_install (2,149,259 samples, 0.40%)</title><rect x="687.5" y="277" width="4.7" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="690.46" y="287.5" ></text>
</g>
<g >
<title>vfs_open (84,245,364 samples, 15.77%)</title><rect x="390.2" y="229" width="186.0" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="393.17" y="239.5" >vfs_open</text>
</g>
<g >
<title>do_syscall_64 (49,266,814 samples, 9.22%)</title><rect x="119.2" y="373" width="108.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="122.25" y="383.5" >do_syscall_64</text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (6,784,644 samples, 1.27%)</title><rect x="44.4" y="469" width="15.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="47.43" y="479.5" ></text>
</g>
<g >
<title>_dl_map_object_from_fd (1,363,087 samples, 0.26%)</title><rect x="38.7" y="389" width="3.0" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="41.65" y="399.5" ></text>
</g>
<g >
<title>dput (2,151,956 samples, 0.40%)</title><rect x="440.6" y="165" width="4.8" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="443.65" y="175.5" ></text>
</g>
<g >
<title>load_elf_binary (76,573 samples, 0.01%)</title><rect x="38.3" y="357" width="0.2" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="41.33" y="367.5" ></text>
</g>
<g >
<title>dput (2,182,566 samples, 0.41%)</title><rect x="653.9" y="229" width="4.8" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="656.85" y="239.5" ></text>
</g>
<g >
<title>__legitimize_path (6,459,425 samples, 1.21%)</title><rect x="352.1" y="197" width="14.3" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="355.09" y="207.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,459,100 samples, 0.27%)</title><rect x="59.4" y="453" width="3.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="62.42" y="463.5" ></text>
</g>
<g >
<title>__close_nocancel (2,072,652 samples, 0.39%)</title><rect x="776.2" y="405" width="4.6" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="779.20" y="415.5" ></text>
</g>
<g >
<title>complete_walk (8,640,430 samples, 1.62%)</title><rect x="347.3" y="229" width="19.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="350.27" y="239.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (1,459,100 samples, 0.27%)</title><rect x="59.4" y="405" width="3.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="62.42" y="415.5" ></text>
</g>
<g >
<title>__x64_sys_execve (76,573 samples, 0.01%)</title><rect x="38.3" y="453" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="41.33" y="463.5" ></text>
</g>
<g >
<title>step_into (2,188,412 samples, 0.41%)</title><rect x="627.8" y="197" width="4.9" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="630.85" y="207.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1,363,087 samples, 0.26%)</title><rect x="38.7" y="373" width="3.0" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="41.65" y="383.5" ></text>
</g>
<g >
<title>__rcu_read_lock (2,149,451 samples, 0.40%)</title><rect x="673.1" y="197" width="4.8" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="676.11" y="207.5" ></text>
</g>
<g >
<title>filemap_get_pages (8,689,969 samples, 1.63%)</title><rect x="988.2" y="213" width="19.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="991.16" y="223.5" ></text>
</g>
<g >
<title>__fsnotify_parent (28,103,375 samples, 5.26%)</title><rect x="1057.7" y="245" width="62.1" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="1060.69" y="255.5" >__fsno..</text>
</g>
<g >
<title>security_inode_permission (2,177,536 samples, 0.41%)</title><rect x="604.7" y="229" width="4.8" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="607.72" y="239.5" ></text>
</g>
<g >
<title>openaux (1,429,696 samples, 0.27%)</title><rect x="38.5" y="421" width="3.2" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="41.50" y="431.5" ></text>
</g>
<g >
<title>__check_object_size (4,354,244 samples, 0.81%)</title><rect x="739.4" y="229" width="9.7" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="742.45" y="239.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1,359,492 samples, 0.25%)</title><rect x="38.7" y="325" width="3.0" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="41.65" y="335.5" ></text>
</g>
<g >
<title>hook_file_open (1,509,055 samples, 0.28%)</title><rect x="447.7" y="197" width="3.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="450.71" y="207.5" ></text>
</g>
<g >
<title>ktime_get_coarse_real_ts64 (2,179,038 samples, 0.41%)</title><rect x="1043.6" y="181" width="4.8" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1046.58" y="191.5" ></text>
</g>
<g >
<title>tick_sched_handle (2,164,321 samples, 0.41%)</title><rect x="375.8" y="101" width="4.8" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="378.78" y="111.5" ></text>
</g>
<g >
<title>[unknown] (12,906,349 samples, 2.42%)</title><rect x="10.0" y="517" width="28.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="527.5" >[u..</text>
</g>
<g >
<title>do_mmap (82,386 samples, 0.02%)</title><rect x="1175.3" y="261" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1178.31" y="271.5" ></text>
</g>
<g >
<title>walk_component (10,483,792 samples, 1.96%)</title><rect x="609.5" y="229" width="23.2" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="612.53" y="239.5" >w..</text>
</g>
<g >
<title>exec_binprm (76,573 samples, 0.01%)</title><rect x="38.3" y="389" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="41.33" y="399.5" ></text>
</g>
<g >
<title>fsnotify (909,764 samples, 0.17%)</title><rect x="930.8" y="245" width="2.0" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="933.80" y="255.5" ></text>
</g>
<g >
<title>std::locale::~locale (2,182,422 samples, 0.41%)</title><rect x="790.8" y="437" width="4.8" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="793.82" y="447.5" ></text>
</g>
<g >
<title>do_vmi_align_munmap (1,459,100 samples, 0.27%)</title><rect x="59.4" y="357" width="3.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="62.42" y="367.5" ></text>
</g>
<g >
<title>free_swap_cache (1,459,100 samples, 0.27%)</title><rect x="59.4" y="293" width="3.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="62.42" y="303.5" ></text>
</g>
<g >
<title>ksys_read (126,566,251 samples, 23.69%)</title><rect x="867.2" y="293" width="279.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="870.22" y="303.5" >ksys_read</text>
</g>
<g >
<title>malloc (82,386 samples, 0.02%)</title><rect x="1175.3" y="437" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1178.31" y="447.5" ></text>
</g>
</g>
</svg>
