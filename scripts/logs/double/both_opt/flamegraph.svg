<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="598" onload="init(evt)" viewBox="0 0 1200 598" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="598.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="581" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="581" > </text>
<g id="frames">
<g >
<title>do_syscall_64 (499,582,294 samples, 47.23%)</title><rect x="220.4" y="341" width="557.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="223.41" y="351.5" >do_syscall_64</text>
</g>
<g >
<title>prepend (21,330,681 samples, 2.02%)</title><rect x="557.8" y="69" width="23.8" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="560.78" y="79.5" >p..</text>
</g>
<g >
<title>d_absolute_path (60,765,590 samples, 5.74%)</title><rect x="516.2" y="101" width="67.8" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="519.22" y="111.5" >d_absol..</text>
</g>
<g >
<title>do_syscall_64 (1,435,172 samples, 0.14%)</title><rect x="33.7" y="437" width="1.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="36.71" y="447.5" ></text>
</g>
<g >
<title>mod_objcg_state (1,887,484 samples, 0.18%)</title><rect x="143.9" y="261" width="2.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="146.94" y="271.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (2,189,327 samples, 0.21%)</title><rect x="10.0" y="453" width="2.4" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>security_current_getlsmblob_subj (2,193,974 samples, 0.21%)</title><rect x="346.5" y="213" width="2.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="349.49" y="223.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (2,201,534 samples, 0.21%)</title><rect x="1106.9" y="229" width="2.4" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1109.88" y="239.5" ></text>
</g>
<g >
<title>copy_page_to_iter (6,510,542 samples, 0.62%)</title><rect x="1045.1" y="213" width="7.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1048.05" y="223.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (2,195,140 samples, 0.21%)</title><rect x="706.3" y="261" width="2.4" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="709.29" y="271.5" ></text>
</g>
<g >
<title>fsnotify (2,191,888 samples, 0.21%)</title><rect x="1121.6" y="229" width="2.5" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1124.62" y="239.5" ></text>
</g>
<g >
<title>__update_blocked_fair (5,179,672 samples, 0.49%)</title><rect x="1143.6" y="85" width="5.8" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1146.64" y="95.5" ></text>
</g>
<g >
<title>exc_page_fault (4,863,826 samples, 0.46%)</title><rect x="28.3" y="437" width="5.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="31.27" y="447.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (1,150,422 samples, 0.11%)</title><rect x="811.9" y="389" width="1.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="814.87" y="399.5" ></text>
</g>
<g >
<title>_dl_call_fini (4,175,237 samples, 0.39%)</title><rect x="22.8" y="421" width="4.7" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="25.80" y="431.5" ></text>
</g>
<g >
<title>_IO_file_open (531,318,488 samples, 50.23%)</title><rect x="204.5" y="389" width="592.7" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="207.47" y="399.5" >_IO_file_open</text>
</g>
<g >
<title>free_unref_page_commit (1,435,172 samples, 0.14%)</title><rect x="33.7" y="245" width="1.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="36.71" y="255.5" ></text>
</g>
<g >
<title>aa_path_name (69,555,500 samples, 6.58%)</title><rect x="511.3" y="133" width="77.6" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="514.31" y="143.5" >aa_path_..</text>
</g>
<g >
<title>locks_remove_posix (4,388,824 samples, 0.41%)</title><rect x="176.8" y="325" width="4.9" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="179.77" y="335.5" ></text>
</g>
<g >
<title>alloc_anon_folio (1,181,699 samples, 0.11%)</title><rect x="29.7" y="341" width="1.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="32.75" y="351.5" ></text>
</g>
<g >
<title>aa_path_perm (103,179,211 samples, 9.75%)</title><rect x="473.8" y="165" width="115.1" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="476.80" y="175.5" >aa_path_perm</text>
</g>
<g >
<title>handle_dots (2,192,978 samples, 0.21%)</title><rect x="651.3" y="213" width="2.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="654.28" y="223.5" ></text>
</g>
<g >
<title>handle_amd (779,789 samples, 0.07%)</title><rect x="21.9" y="453" width="0.9" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="24.93" y="463.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (4,374,587 samples, 0.41%)</title><rect x="1159.1" y="357" width="4.9" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1162.10" y="367.5" ></text>
</g>
<g >
<title>ext4_file_open (26,006,618 samples, 2.46%)</title><rect x="394.7" y="197" width="29.0" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="397.66" y="207.5" >ex..</text>
</g>
<g >
<title>strncpy_from_user (26,879,059 samples, 2.54%)</title><rect x="733.4" y="245" width="30.0" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="736.38" y="255.5" >st..</text>
</g>
<g >
<title>run_binary_search (1,295,776 samples, 0.12%)</title><rect x="1178.8" y="469" width="1.4" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="1181.77" y="479.5" ></text>
</g>
<g >
<title>_IO_no_init (2,178,999 samples, 0.21%)</title><rect x="804.5" y="405" width="2.5" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="807.53" y="415.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_allocate_internal_buffer (9,890,810 samples, 0.94%)</title><rect x="813.4" y="437" width="11.0" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="816.35" y="447.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (513,803,279 samples, 48.58%)</title><rect x="211.8" y="357" width="573.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="214.80" y="367.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>init_file (2,184,862 samples, 0.21%)</title><rect x="601.2" y="245" width="2.4" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="604.16" y="255.5" ></text>
</g>
<g >
<title>std::locale::~locale (2,189,737 samples, 0.21%)</title><rect x="835.8" y="437" width="2.5" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="838.84" y="447.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (2,185,864 samples, 0.21%)</title><rect x="222.9" y="325" width="2.4" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="225.86" y="335.5" ></text>
</g>
<g >
<title>__d_lookup_rcu (6,583,974 samples, 0.62%)</title><rect x="662.3" y="213" width="7.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="665.34" y="223.5" ></text>
</g>
<g >
<title>arena_get2.part.0 (177,739 samples, 0.02%)</title><rect x="813.2" y="373" width="0.2" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="816.15" y="383.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (779,789 samples, 0.07%)</title><rect x="21.9" y="485" width="0.9" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="24.93" y="495.5" ></text>
</g>
<g >
<title>lockref_put_return (2,191,128 samples, 0.21%)</title><rect x="1124.1" y="229" width="2.4" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="1127.07" y="239.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (2,190,261 samples, 0.21%)</title><rect x="644.2" y="213" width="2.4" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="647.18" y="223.5" ></text>
</g>
<g >
<title>aa_dfa_match (15,187,185 samples, 1.44%)</title><rect x="488.3" y="117" width="17.0" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="491.31" y="127.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2,186,767 samples, 0.21%)</title><rect x="846.9" y="421" width="2.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="849.91" y="431.5" ></text>
</g>
<g >
<title>locks_remove_posix (1,694,311 samples, 0.16%)</title><rect x="174.9" y="309" width="1.9" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="177.88" y="319.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (2,033,181 samples, 0.19%)</title><rect x="181.7" y="389" width="2.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="184.67" y="399.5" ></text>
</g>
<g >
<title>std::istream::sentry::sentry (2,190,595 samples, 0.21%)</title><rect x="1168.8" y="437" width="2.5" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1171.84" y="447.5" ></text>
</g>
<g >
<title>down_read_trylock (149,512 samples, 0.01%)</title><rect x="29.6" y="405" width="0.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="32.58" y="415.5" ></text>
</g>
<g >
<title>security_file_permission (2,157,996 samples, 0.20%)</title><rect x="1154.3" y="261" width="2.4" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="1157.30" y="271.5" ></text>
</g>
<g >
<title>folio_batch_move_lru (2,179,898 samples, 0.21%)</title><rect x="31.1" y="309" width="2.4" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="34.07" y="319.5" ></text>
</g>
<g >
<title>acct_account_cputime (2,191,804 samples, 0.21%)</title><rect x="799.6" y="229" width="2.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="802.64" y="239.5" ></text>
</g>
<g >
<title>__GI___pthread_enable_asynccancel (2,185,055 samples, 0.21%)</title><rect x="794.8" y="373" width="2.4" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="797.76" y="383.5" ></text>
</g>
<g >
<title>filemap_read (46,935,230 samples, 4.44%)</title><rect x="1030.4" y="229" width="52.3" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="1033.36" y="239.5" >filem..</text>
</g>
<g >
<title>step_into (2,192,978 samples, 0.21%)</title><rect x="651.3" y="197" width="2.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="654.28" y="207.5" ></text>
</g>
<g >
<title>make_vfsuid (2,177,789 samples, 0.21%)</title><rect x="1080.3" y="181" width="2.4" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="1083.29" y="191.5" ></text>
</g>
<g >
<title>ext4_file_open (2,201,652 samples, 0.21%)</title><rect x="596.3" y="213" width="2.4" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="599.26" y="223.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (2,183,487 samples, 0.21%)</title><rect x="581.6" y="69" width="2.4" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="584.57" y="79.5" ></text>
</g>
<g >
<title>check_heap_object (8,781,685 samples, 0.83%)</title><rect x="748.7" y="197" width="9.8" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="751.68" y="207.5" ></text>
</g>
<g >
<title>tick_sched_handle (2,191,804 samples, 0.21%)</title><rect x="799.6" y="293" width="2.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="802.64" y="303.5" ></text>
</g>
<g >
<title>do_vmi_munmap (177,739 samples, 0.02%)</title><rect x="813.2" y="261" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="816.15" y="271.5" ></text>
</g>
<g >
<title>kmem_cache_free (15,121,192 samples, 1.43%)</title><rect x="134.1" y="293" width="16.8" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="137.06" y="303.5" ></text>
</g>
<g >
<title>dput (4,394,934 samples, 0.42%)</title><rect x="385.9" y="181" width="4.9" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="388.87" y="191.5" ></text>
</g>
<g >
<title>__fsnotify_parent (34,884,185 samples, 3.30%)</title><rect x="1087.6" y="245" width="38.9" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="1090.60" y="255.5" >__f..</text>
</g>
<g >
<title>aa_str_perms (17,386,345 samples, 1.64%)</title><rect x="485.9" y="133" width="19.4" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="488.85" y="143.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (2,201,632 samples, 0.21%)</title><rect x="505.3" y="133" width="2.4" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="508.25" y="143.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1,198,305 samples, 0.11%)</title><rect x="32.2" y="261" width="1.3" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="35.16" y="271.5" ></text>
</g>
<g >
<title>__check_heap_object (2,190,262 samples, 0.21%)</title><rect x="756.0" y="181" width="2.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="759.03" y="191.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (177,739 samples, 0.02%)</title><rect x="813.2" y="341" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="816.15" y="351.5" ></text>
</g>
<g >
<title>folio_add_lru (2,179,898 samples, 0.21%)</title><rect x="31.1" y="325" width="2.4" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="34.07" y="335.5" ></text>
</g>
<g >
<title>do_syscall_64 (104,707,860 samples, 9.90%)</title><rect x="64.9" y="373" width="116.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="67.86" y="383.5" >do_syscall_64</text>
</g>
<g >
<title>__handle_mm_fault (3,361,597 samples, 0.32%)</title><rect x="29.7" y="389" width="3.8" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="32.75" y="399.5" ></text>
</g>
<g >
<title>security_file_alloc (6,580,571 samples, 0.62%)</title><rect x="275.4" y="213" width="7.3" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="278.38" y="223.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (2,194,966 samples, 0.21%)</title><rect x="591.4" y="181" width="2.4" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="594.35" y="191.5" ></text>
</g>
<g >
<title>mntput (4,375,826 samples, 0.41%)</title><rect x="690.1" y="229" width="4.9" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="693.09" y="239.5" ></text>
</g>
<g >
<title>dget_parent (2,133,515 samples, 0.20%)</title><rect x="392.3" y="197" width="2.4" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="395.28" y="207.5" ></text>
</g>
<g >
<title>fsnotify (6,566,182 samples, 0.62%)</title><rect x="994.3" y="245" width="7.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="997.32" y="255.5" ></text>
</g>
<g >
<title>update_blocked_averages (5,179,672 samples, 0.49%)</title><rect x="1143.6" y="101" width="5.8" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="1146.64" y="111.5" ></text>
</g>
<g >
<title>tlb_batch_pages_flush (1,435,172 samples, 0.14%)</title><rect x="33.7" y="309" width="1.6" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="36.71" y="319.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (2,192,111 samples, 0.21%)</title><rect x="146.0" y="261" width="2.5" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="149.05" y="271.5" ></text>
</g>
<g >
<title>handle_softirqs (5,179,672 samples, 0.49%)</title><rect x="1143.6" y="133" width="5.8" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1146.64" y="143.5" ></text>
</g>
<g >
<title>generic_permission (8,736,636 samples, 0.83%)</title><rect x="634.4" y="213" width="9.8" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="637.43" y="223.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (2,190,366 samples, 0.21%)</title><rect x="777.7" y="341" width="2.5" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="780.73" y="351.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (5,179,672 samples, 0.49%)</title><rect x="1143.6" y="149" width="5.8" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1146.64" y="159.5" ></text>
</g>
<g >
<title>x64_sys_call (4,307,013 samples, 0.41%)</title><rect x="780.2" y="341" width="4.8" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="783.18" y="351.5" ></text>
</g>
<g >
<title>fopen@@GLIBC_2.2.5 (552,387,048 samples, 52.22%)</title><rect x="197.1" y="421" width="616.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="200.12" y="431.5" >fopen@@GLIBC_2.2.5</text>
</g>
<g >
<title>obj_cgroup_charge (2,200,324 samples, 0.21%)</title><rect x="310.2" y="229" width="2.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="313.21" y="239.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (177,739 samples, 0.02%)</title><rect x="813.2" y="293" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="816.15" y="303.5" ></text>
</g>
<g >
<title>_IO_link_in (2,194,932 samples, 0.21%)</title><rect x="802.1" y="389" width="2.4" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="805.08" y="399.5" ></text>
</g>
<g >
<title>__memcg_slab_free_hook (10,743,617 samples, 1.02%)</title><rect x="136.5" y="277" width="12.0" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="139.51" y="287.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (2,109,628 samples, 0.20%)</title><rect x="409.4" y="165" width="2.3" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="412.39" y="175.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (4,175,237 samples, 0.39%)</title><rect x="22.8" y="389" width="4.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="25.80" y="399.5" ></text>
</g>
<g >
<title>std::locale::locale (6,593,233 samples, 0.62%)</title><rect x="1171.3" y="453" width="7.3" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1174.28" y="463.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::underflow (282,020,288 samples, 26.66%)</title><rect x="854.2" y="405" width="314.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="857.22" y="415.5" >std::basic_filebuf&lt;char, std::char_traits&lt;..</text>
</g>
<g >
<title>mntput_no_expire (4,375,826 samples, 0.41%)</title><rect x="690.1" y="213" width="4.9" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="693.09" y="223.5" ></text>
</g>
<g >
<title>prepend (2,176,656 samples, 0.21%)</title><rect x="525.9" y="85" width="2.4" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="528.91" y="95.5" ></text>
</g>
<g >
<title>do_sys_openat2 (479,878,685 samples, 45.37%)</title><rect x="232.6" y="293" width="535.4" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="235.63" y="303.5" >do_sys_openat2</text>
</g>
<g >
<title>__check_object_size (17,534,552 samples, 1.66%)</title><rect x="741.4" y="229" width="19.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="744.35" y="239.5" ></text>
</g>
<g >
<title>clone3 (1,042,100,573 samples, 98.52%)</title><rect x="27.5" y="517" width="1162.5" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="30.46" y="527.5" >clone3</text>
</g>
<g >
<title>syscall_exit_to_user_mode (2,180,167 samples, 0.21%)</title><rect x="64.9" y="357" width="2.4" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="67.86" y="367.5" ></text>
</g>
<g >
<title>__x64_sys_read (209,449,511 samples, 19.80%)</title><rect x="923.1" y="309" width="233.6" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="926.05" y="319.5" >__x64_sys_read</text>
</g>
<g >
<title>prepend_path (49,901,897 samples, 4.72%)</title><rect x="528.3" y="85" width="55.7" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="531.34" y="95.5" >prepe..</text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (2,193,269 samples, 0.21%)</title><rect x="189.8" y="437" width="2.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="192.79" y="447.5" ></text>
</g>
<g >
<title>file_close_fd (2,176,130 samples, 0.21%)</title><rect x="172.5" y="325" width="2.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="175.46" y="335.5" ></text>
</g>
<g >
<title>lockref_get_not_zero (2,168,403 samples, 0.21%)</title><rect x="1115.3" y="213" width="2.4" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="1118.28" y="223.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::clear (2,201,382 samples, 0.21%)</title><rect x="1180.2" y="469" width="2.5" height="15.0" fill="rgb(220,71,16)" rx="2" ry="2" />
<text  x="1183.22" y="479.5" ></text>
</g>
<g >
<title>getname (48,964,697 samples, 4.63%)</title><rect x="708.7" y="277" width="54.7" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="711.74" y="287.5" >getname</text>
</g>
<g >
<title>__rcu_read_unlock (2,197,799 samples, 0.21%)</title><rect x="112.0" y="277" width="2.5" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="115.04" y="287.5" ></text>
</g>
<g >
<title>do_open (252,769,588 samples, 23.90%)</title><rect x="319.2" y="245" width="282.0" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="322.18" y="255.5" >do_open</text>
</g>
<g >
<title>free_unref_page_list (1,435,172 samples, 0.14%)</title><rect x="33.7" y="261" width="1.6" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="36.71" y="271.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (4,175,237 samples, 0.39%)</title><rect x="22.8" y="405" width="4.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="25.80" y="415.5" ></text>
</g>
<g >
<title>current_obj_cgroup (4,390,714 samples, 0.42%)</title><rect x="258.2" y="229" width="4.9" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="261.23" y="239.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::close (2,409,733 samples, 0.23%)</title><rect x="45.1" y="437" width="2.7" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="48.10" y="447.5" ></text>
</g>
<g >
<title>std::locale::~locale (122,141 samples, 0.01%)</title><rect x="1178.6" y="453" width="0.2" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1181.64" y="463.5" ></text>
</g>
<g >
<title>_IO_file_fopen@@GLIBC_2.2.5 (537,905,190 samples, 50.85%)</title><rect x="202.0" y="405" width="600.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="205.01" y="415.5" >_IO_file_fopen@@GLIBC_2.2.5</text>
</g>
<g >
<title>update_process_times (2,191,804 samples, 0.21%)</title><rect x="799.6" y="277" width="2.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="802.64" y="287.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::~__basic_file (2,409,733 samples, 0.23%)</title><rect x="45.1" y="453" width="2.7" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="48.10" y="463.5" ></text>
</g>
<g >
<title>lockref_put_return (2,191,402 samples, 0.21%)</title><rect x="687.6" y="229" width="2.5" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="690.64" y="239.5" ></text>
</g>
<g >
<title>complete_walk (6,160,209 samples, 0.58%)</title><rect x="326.4" y="229" width="6.9" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="329.38" y="239.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1,506,851 samples, 0.14%)</title><rect x="170.8" y="325" width="1.7" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="173.77" y="335.5" ></text>
</g>
<g >
<title>ksys_read (207,253,458 samples, 19.59%)</title><rect x="925.5" y="293" width="231.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="928.50" y="303.5" >ksys_read</text>
</g>
<g >
<title>__strchr_avx2 (2,191,098 samples, 0.21%)</title><rect x="797.2" y="389" width="2.4" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="800.20" y="399.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::xsgetn (2,189,327 samples, 0.21%)</title><rect x="10.0" y="485" width="2.4" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>apparmor_file_permission (18,333,457 samples, 1.73%)</title><rect x="1133.9" y="229" width="20.4" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1136.85" y="239.5" ></text>
</g>
<g >
<title>irqentry_exit (177,433 samples, 0.02%)</title><rect x="33.5" y="421" width="0.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="36.50" y="431.5" ></text>
</g>
<g >
<title>security_file_permission (22,712,064 samples, 2.15%)</title><rect x="1129.0" y="245" width="25.3" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="1131.97" y="255.5" >s..</text>
</g>
<g >
<title>security_inode_permission (4,172,323 samples, 0.39%)</title><rect x="646.6" y="229" width="4.7" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="649.62" y="239.5" ></text>
</g>
<g >
<title>_int_malloc (5,496,647 samples, 0.52%)</title><rect x="818.3" y="389" width="6.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="821.25" y="399.5" ></text>
</g>
<g >
<title>_dl_start (779,789 samples, 0.07%)</title><rect x="21.9" y="501" width="0.9" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="24.93" y="511.5" ></text>
</g>
<g >
<title>tcache_init.part.0 (177,739 samples, 0.02%)</title><rect x="813.2" y="389" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="816.15" y="399.5" ></text>
</g>
<g >
<title>__legitimize_path (1,779,745 samples, 0.17%)</title><rect x="331.3" y="197" width="2.0" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="334.27" y="207.5" ></text>
</g>
<g >
<title>aa_audit_file (2,172,830 samples, 0.21%)</title><rect x="483.4" y="133" width="2.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="486.43" y="143.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (177,433 samples, 0.02%)</title><rect x="33.5" y="405" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="36.50" y="415.5" ></text>
</g>
<g >
<title>aa_get_buffer (3,232,752 samples, 0.31%)</title><rect x="507.7" y="149" width="3.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="510.71" y="159.5" ></text>
</g>
<g >
<title>consume_obj_stock (6,577,250 samples, 0.62%)</title><rect x="302.9" y="197" width="7.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="305.87" y="207.5" ></text>
</g>
<g >
<title>init_file (17,567,260 samples, 1.66%)</title><rect x="263.1" y="229" width="19.6" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="266.13" y="239.5" ></text>
</g>
<g >
<title>touch_atime (8,727,229 samples, 0.83%)</title><rect x="1073.0" y="213" width="9.7" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1075.98" y="223.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2,191,804 samples, 0.21%)</title><rect x="799.6" y="389" width="2.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="802.64" y="399.5" ></text>
</g>
<g >
<title>fclose@@GLIBC_2.2.5 (120,723,359 samples, 11.41%)</title><rect x="52.7" y="421" width="134.6" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="55.66" y="431.5" >fclose@@GLIBC_2.2.5</text>
</g>
<g >
<title>do_vmi_munmap (1,435,172 samples, 0.14%)</title><rect x="33.7" y="373" width="1.6" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="36.71" y="383.5" ></text>
</g>
<g >
<title>inode_permission (10,953,577 samples, 1.04%)</title><rect x="351.4" y="213" width="12.2" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="354.38" y="223.5" ></text>
</g>
<g >
<title>refill_obj_stock (2,192,111 samples, 0.21%)</title><rect x="146.0" y="245" width="2.5" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="149.05" y="255.5" ></text>
</g>
<g >
<title>[libc.so.6] (4,175,237 samples, 0.39%)</title><rect x="22.8" y="469" width="4.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="25.80" y="479.5" ></text>
</g>
<g >
<title>terminate_walk (13,902,949 samples, 1.31%)</title><rect x="679.5" y="245" width="15.5" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="682.46" y="255.5" ></text>
</g>
<g >
<title>_IO_new_file_init_internal (2,194,932 samples, 0.21%)</title><rect x="802.1" y="405" width="2.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="805.08" y="415.5" ></text>
</g>
<g >
<title>may_open (13,146,814 samples, 1.24%)</title><rect x="348.9" y="229" width="14.7" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="351.94" y="239.5" ></text>
</g>
<g >
<title>_dl_start_user (779,789 samples, 0.07%)</title><rect x="21.9" y="517" width="0.9" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="24.93" y="527.5" ></text>
</g>
<g >
<title>__run_exit_handlers (4,175,237 samples, 0.39%)</title><rect x="22.8" y="453" width="4.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="25.80" y="463.5" ></text>
</g>
<g >
<title>apparmor_file_open (115,504,181 samples, 10.92%)</title><rect x="460.1" y="181" width="128.8" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="463.05" y="191.5" >apparmor_file_open</text>
</g>
<g >
<title>__fsnotify_parent (38,013,451 samples, 3.59%)</title><rect x="89.2" y="293" width="42.4" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="92.20" y="303.5" >__f..</text>
</g>
<g >
<title>__alloc_pages (1,181,699 samples, 0.11%)</title><rect x="29.7" y="293" width="1.4" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="32.75" y="303.5" ></text>
</g>
<g >
<title>do_vmi_align_munmap (177,739 samples, 0.02%)</title><rect x="813.2" y="245" width="0.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="816.15" y="255.5" ></text>
</g>
<g >
<title>lockref_get_not_zero (2,194,640 samples, 0.21%)</title><rect x="450.3" y="149" width="2.5" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="453.32" y="159.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (15,541,513 samples, 1.47%)</title><rect x="900.8" y="325" width="17.4" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="903.83" y="335.5" ></text>
</g>
<g >
<title>__GI__IO_un_link.part.0 (2,189,628 samples, 0.21%)</title><rect x="50.2" y="421" width="2.5" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="53.22" y="431.5" ></text>
</g>
<g >
<title>current_time (2,196,583 samples, 0.21%)</title><rect x="1077.8" y="181" width="2.5" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1080.84" y="191.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsgetn (290,761,801 samples, 27.49%)</title><rect x="844.5" y="437" width="324.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="847.47" y="447.5" >std::basic_filebuf&lt;char, std::char_traits&lt;c..</text>
</g>
<g >
<title>__GI__IO_un_link.part.0 (2,198,802 samples, 0.21%)</title><rect x="57.5" y="405" width="2.5" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="60.53" y="415.5" ></text>
</g>
<g >
<title>std::istream::read (4,382,434 samples, 0.41%)</title><rect x="1185.1" y="469" width="4.9" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1188.11" y="479.5" ></text>
</g>
<g >
<title>__memset (6,731,638 samples, 0.64%)</title><rect x="718.5" y="245" width="7.6" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="721.54" y="255.5" ></text>
</g>
<g >
<title>bothOptimized (1,057,748,520 samples, 100.00%)</title><rect x="10.0" y="533" width="1180.0" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="13.00" y="543.5" >bothOptimized</text>
</g>
<g >
<title>tlb_finish_mmu (1,435,172 samples, 0.14%)</title><rect x="33.7" y="325" width="1.6" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="36.71" y="335.5" ></text>
</g>
<g >
<title>malloc (177,739 samples, 0.02%)</title><rect x="813.2" y="405" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="816.15" y="415.5" ></text>
</g>
<g >
<title>__memset (2,531,791 samples, 0.24%)</title><rect x="253.2" y="229" width="2.8" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="256.17" y="239.5" ></text>
</g>
<g >
<title>dput (2,192,597 samples, 0.21%)</title><rect x="452.8" y="165" width="2.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="455.77" y="175.5" ></text>
</g>
<g >
<title>should_failslab.constprop.0 (4,398,895 samples, 0.42%)</title><rect x="314.3" y="229" width="4.9" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="317.27" y="239.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_terminate_output (2,193,595 samples, 0.21%)</title><rect x="187.3" y="437" width="2.5" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="190.34" y="447.5" ></text>
</g>
<g >
<title>build_open_flags (2,197,245 samples, 0.21%)</title><rect x="230.2" y="293" width="2.4" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="233.18" y="303.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (2,136,877 samples, 0.20%)</title><rect x="945.0" y="277" width="2.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="948.04" y="287.5" ></text>
</g>
<g >
<title>unmap_region (1,435,172 samples, 0.14%)</title><rect x="33.7" y="341" width="1.6" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="36.71" y="351.5" ></text>
</g>
<g >
<title>mntput (7,718,848 samples, 0.73%)</title><rect x="653.7" y="245" width="8.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="656.73" y="255.5" ></text>
</g>
<g >
<title>apparmor_current_getlsmblob_subj (2,193,974 samples, 0.21%)</title><rect x="346.5" y="197" width="2.4" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="349.49" y="207.5" ></text>
</g>
<g >
<title>aa_label_next_confined (2,190,444 samples, 0.21%)</title><rect x="471.4" y="165" width="2.4" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="474.36" y="175.5" ></text>
</g>
<g >
<title>dput (2,980,414 samples, 0.28%)</title><rect x="684.3" y="229" width="3.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="687.32" y="239.5" ></text>
</g>
<g >
<title>read (266,456,767 samples, 25.19%)</title><rect x="871.6" y="373" width="297.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="874.58" y="383.5" >read</text>
</g>
<g >
<title>dput (6,568,868 samples, 0.62%)</title><rect x="116.9" y="277" width="7.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="119.93" y="287.5" ></text>
</g>
<g >
<title>aa_file_perm (11,760,904 samples, 1.11%)</title><rect x="1136.3" y="213" width="13.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1139.30" y="223.5" ></text>
</g>
<g >
<title>apparmor_file_open (1,353,579 samples, 0.13%)</title><rect x="390.8" y="197" width="1.5" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="393.77" y="207.5" ></text>
</g>
<g >
<title>path_openat (407,677,373 samples, 38.54%)</title><rect x="242.4" y="261" width="454.8" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="245.38" y="271.5" >path_openat</text>
</g>
<g >
<title>copy_page_to_iter (4,369,241 samples, 0.41%)</title><rect x="1020.6" y="229" width="4.9" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1023.59" y="239.5" ></text>
</g>
<g >
<title>_IO_un_link (2,179,862 samples, 0.21%)</title><rect x="55.1" y="405" width="2.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="58.10" y="415.5" ></text>
</g>
<g >
<title>mas_spanning_rebalance.isra.0 (177,739 samples, 0.02%)</title><rect x="813.2" y="181" width="0.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="816.15" y="191.5" ></text>
</g>
<g >
<title>expand_files (2,201,992 samples, 0.21%)</title><rect x="703.8" y="261" width="2.5" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="706.84" y="271.5" ></text>
</g>
<g >
<title>malloc (7,694,773 samples, 0.73%)</title><rect x="815.8" y="405" width="8.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="818.80" y="415.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1,198,305 samples, 0.11%)</title><rect x="32.2" y="245" width="1.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="35.16" y="255.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::open (568,854,221 samples, 53.78%)</title><rect x="189.8" y="453" width="634.6" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="192.79" y="463.5" >std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::open</text>
</g>
<g >
<title>x64_sys_call (177,739 samples, 0.02%)</title><rect x="813.2" y="309" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="816.15" y="319.5" ></text>
</g>
<g >
<title>__rcu_read_lock (2,186,232 samples, 0.21%)</title><rect x="148.5" y="277" width="2.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="151.49" y="287.5" ></text>
</g>
<g >
<title>srso_alias_untrain_ret (2,197,427 samples, 0.21%)</title><rect x="184.9" y="389" width="2.4" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="187.87" y="399.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (8,744,862 samples, 0.83%)</title><rect x="300.5" y="213" width="9.7" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="303.45" y="223.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (2,193,341 samples, 0.21%)</title><rect x="984.5" y="245" width="2.5" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="987.54" y="255.5" ></text>
</g>
<g >
<title>do_vmi_align_munmap (1,435,172 samples, 0.14%)</title><rect x="33.7" y="357" width="1.6" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="36.71" y="367.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (2,191,804 samples, 0.21%)</title><rect x="799.6" y="309" width="2.5" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="802.64" y="319.5" ></text>
</g>
<g >
<title>__libc_start_call_main (4,175,237 samples, 0.39%)</title><rect x="22.8" y="485" width="4.7" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="25.80" y="495.5" ></text>
</g>
<g >
<title>dget_parent (7,243,214 samples, 0.68%)</title><rect x="377.8" y="181" width="8.1" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="380.79" y="191.5" ></text>
</g>
<g >
<title>apparmor_current_getlsmblob_subj (561,532 samples, 0.05%)</title><rect x="343.5" y="213" width="0.6" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="346.49" y="223.5" ></text>
</g>
<g >
<title>run_rebalance_domains (5,179,672 samples, 0.49%)</title><rect x="1143.6" y="117" width="5.8" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1146.64" y="127.5" ></text>
</g>
<g >
<title>[unknown] (10,692,921 samples, 1.01%)</title><rect x="10.0" y="517" width="11.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>operator new[] (2,194,462 samples, 0.21%)</title><rect x="192.2" y="437" width="2.5" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="195.23" y="447.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsgetn (2,194,001 samples, 0.21%)</title><rect x="824.4" y="453" width="2.4" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="827.38" y="463.5" ></text>
</g>
<g >
<title>open_last_lookups (8,777,260 samples, 0.83%)</title><rect x="662.3" y="245" width="9.8" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="665.34" y="255.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (5,586,998 samples, 0.53%)</title><rect x="27.5" y="453" width="6.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="30.46" y="463.5" ></text>
</g>
<g >
<title>lockref_put_return (6,588,254 samples, 0.62%)</title><rect x="124.3" y="277" width="7.3" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="127.26" y="287.5" ></text>
</g>
<g >
<title>path_init (6,570,216 samples, 0.62%)</title><rect x="672.1" y="245" width="7.4" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="675.13" y="255.5" ></text>
</g>
<g >
<title>__rcu_read_lock (2,174,793 samples, 0.21%)</title><rect x="681.9" y="229" width="2.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="684.89" y="239.5" ></text>
</g>
<g >
<title>getname_flags.part.0 (48,964,697 samples, 4.63%)</title><rect x="708.7" y="261" width="54.7" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="711.74" y="271.5" >getna..</text>
</g>
<g >
<title>__memcg_slab_post_alloc_hook (8,380,156 samples, 0.79%)</title><rect x="291.1" y="213" width="9.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="294.10" y="223.5" ></text>
</g>
<g >
<title>__libc_start_main@@GLIBC_2.34 (4,175,237 samples, 0.39%)</title><rect x="22.8" y="501" width="4.7" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="25.80" y="511.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (1,984,874 samples, 0.19%)</title><rect x="1070.8" y="197" width="2.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1073.77" y="207.5" ></text>
</g>
<g >
<title>_copy_to_iter (6,510,542 samples, 0.62%)</title><rect x="1045.1" y="197" width="7.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1048.05" y="207.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::open (554,575,680 samples, 52.43%)</title><rect x="194.7" y="437" width="618.7" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="197.68" y="447.5" >std::__basic_file&lt;char&gt;::open</text>
</g>
<g >
<title>generic_permission (6,581,283 samples, 0.62%)</title><rect x="353.8" y="197" width="7.4" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="356.81" y="207.5" ></text>
</g>
<g >
<title>ext4_release_file (2,193,993 samples, 0.21%)</title><rect x="165.5" y="309" width="2.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="168.55" y="319.5" ></text>
</g>
<g >
<title>__virt_addr_valid (2,199,600 samples, 0.21%)</title><rect x="746.2" y="197" width="2.5" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="749.23" y="207.5" ></text>
</g>
<g >
<title>[unknown] (2,189,327 samples, 0.21%)</title><rect x="10.0" y="501" width="2.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (1,435,172 samples, 0.14%)</title><rect x="33.7" y="405" width="1.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="36.71" y="415.5" ></text>
</g>
<g >
<title>__close_nocancel (114,151,466 samples, 10.79%)</title><rect x="60.0" y="405" width="127.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="62.98" y="415.5" >__close_nocancel</text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (44,935,102 samples, 4.25%)</title><rect x="603.6" y="245" width="50.1" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="606.60" y="255.5" >link_..</text>
</g>
<g >
<title>lru_add_fn (2,179,898 samples, 0.21%)</title><rect x="31.1" y="293" width="2.4" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="34.07" y="303.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1,181,699 samples, 0.11%)</title><rect x="29.7" y="277" width="1.4" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="32.75" y="287.5" ></text>
</g>
<g >
<title>locks_remove_file (2,199,523 samples, 0.21%)</title><rect x="168.0" y="309" width="2.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="170.99" y="319.5" ></text>
</g>
<g >
<title>xas_load (2,201,008 samples, 0.21%)</title><rect x="1068.3" y="181" width="2.5" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1071.31" y="191.5" ></text>
</g>
<g >
<title>_IO_file_close_it@@GLIBC_2.2.5 (2,181,360 samples, 0.21%)</title><rect x="52.7" y="405" width="2.4" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="55.66" y="415.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (2,196,347 samples, 0.21%)</title><rect x="358.7" y="181" width="2.5" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="361.71" y="191.5" ></text>
</g>
<g >
<title>x64_sys_call (211,640,971 samples, 20.01%)</title><rect x="920.6" y="325" width="236.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="923.61" y="335.5" >x64_sys_call</text>
</g>
<g >
<title>__vm_munmap (1,435,172 samples, 0.14%)</title><rect x="33.7" y="389" width="1.6" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="36.71" y="399.5" ></text>
</g>
<g >
<title>kmem_cache_free (2,197,723 samples, 0.21%)</title><rect x="765.5" y="261" width="2.5" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="768.52" y="271.5" ></text>
</g>
<g >
<title>account_process_tick (2,191,804 samples, 0.21%)</title><rect x="799.6" y="261" width="2.5" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="802.64" y="271.5" ></text>
</g>
<g >
<title>aa_label_is_subset (4,374,927 samples, 0.41%)</title><rect x="1149.4" y="213" width="4.9" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1152.42" y="223.5" ></text>
</g>
<g >
<title>copy_from_kernel_nofault (8,202,169 samples, 0.78%)</title><rect x="572.4" y="37" width="9.2" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="575.42" y="47.5" ></text>
</g>
<g >
<title>dput (2,190,703 samples, 0.21%)</title><rect x="991.9" y="245" width="2.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="994.87" y="255.5" ></text>
</g>
<g >
<title>path_name (69,555,500 samples, 6.58%)</title><rect x="511.3" y="149" width="77.6" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="514.31" y="159.5" >path_name</text>
</g>
<g >
<title>entry_SYSCALL_64 (4,396,852 samples, 0.42%)</title><rect x="807.0" y="389" width="4.9" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="809.96" y="399.5" ></text>
</g>
<g >
<title>__rcu_read_lock (2,187,943 samples, 0.21%)</title><rect x="356.3" y="165" width="2.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="359.26" y="175.5" ></text>
</g>
<g >
<title>srso_alias_untrain_ret (4,384,745 samples, 0.41%)</title><rect x="787.4" y="357" width="4.9" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="790.42" y="367.5" ></text>
</g>
<g >
<title>all (1,057,750,979 samples, 100%)</title><rect x="10.0" y="549" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>hook_file_alloc_security (4,395,733 samples, 0.42%)</title><rect x="270.5" y="213" width="4.9" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="273.48" y="223.5" ></text>
</g>
<g >
<title>read (2,189,327 samples, 0.21%)</title><rect x="10.0" y="469" width="2.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>filemap_get_read_batch (6,582,199 samples, 0.62%)</title><rect x="1063.4" y="197" width="7.4" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1066.43" y="207.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::close (127,285,286 samples, 12.03%)</title><rect x="47.8" y="453" width="142.0" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="50.79" y="463.5" >std::basic_filebuf..</text>
</g>
<g >
<title>vfs_read (185,403,994 samples, 17.53%)</title><rect x="949.9" y="277" width="206.8" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="952.88" y="287.5" >vfs_read</text>
</g>
<g >
<title>lookup_fast (6,583,974 samples, 0.62%)</title><rect x="662.3" y="229" width="7.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="665.34" y="239.5" ></text>
</g>
<g >
<title>std::locale::~locale (2,178,466 samples, 0.21%)</title><rect x="833.4" y="421" width="2.4" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="836.41" y="431.5" ></text>
</g>
<g >
<title>file_ra_state_init (2,195,166 samples, 0.21%)</title><rect x="423.7" y="197" width="2.4" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="426.67" y="207.5" ></text>
</g>
<g >
<title>dput (3,518,699 samples, 0.33%)</title><rect x="1117.7" y="229" width="3.9" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1120.70" y="239.5" ></text>
</g>
<g >
<title>rw_verify_area (64,167,699 samples, 6.07%)</title><rect x="1082.7" y="261" width="71.6" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="1085.72" y="271.5" >rw_verif..</text>
</g>
<g >
<title>__x64_sys_read (4,371,886 samples, 0.41%)</title><rect x="896.0" y="325" width="4.8" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="898.96" y="335.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (2,186,140 samples, 0.21%)</title><rect x="785.0" y="357" width="2.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="787.98" y="367.5" ></text>
</g>
<g >
<title>apparmor_file_alloc_security (2,193,150 samples, 0.21%)</title><rect x="277.8" y="197" width="2.5" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="280.82" y="207.5" ></text>
</g>
<g >
<title>do_user_addr_fault (3,511,109 samples, 0.33%)</title><rect x="29.6" y="421" width="3.9" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="32.58" y="431.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (2,189,737 samples, 0.21%)</title><rect x="835.8" y="389" width="2.5" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="838.84" y="399.5" ></text>
</g>
<g >
<title>__check_object_size.part.0 (15,352,902 samples, 1.45%)</title><rect x="741.4" y="213" width="17.1" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="744.35" y="223.5" ></text>
</g>
<g >
<title>srso_alias_untrain_ret (4,351,942 samples, 0.41%)</title><rect x="1164.0" y="357" width="4.8" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1166.98" y="367.5" ></text>
</g>
<g >
<title>__mutex_init (2,000,553 samples, 0.19%)</title><rect x="256.0" y="229" width="2.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="259.00" y="239.5" ></text>
</g>
<g >
<title>mas_wr_spanning_store.isra.0 (177,739 samples, 0.02%)</title><rect x="813.2" y="197" width="0.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="816.15" y="207.5" ></text>
</g>
<g >
<title>dget_parent (2,188,444 samples, 0.21%)</title><rect x="114.5" y="277" width="2.4" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="117.49" y="287.5" ></text>
</g>
<g >
<title>handle_pte_fault (3,361,597 samples, 0.32%)</title><rect x="29.7" y="373" width="3.8" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="32.75" y="383.5" ></text>
</g>
<g >
<title>_dl_fini (4,175,237 samples, 0.39%)</title><rect x="22.8" y="437" width="4.7" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="25.80" y="447.5" ></text>
</g>
<g >
<title>alloc_pages_mpol (1,181,699 samples, 0.11%)</title><rect x="29.7" y="309" width="1.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="32.75" y="319.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (72,677,797 samples, 6.87%)</title><rect x="1001.6" y="261" width="81.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1004.64" y="271.5" >ext4_file..</text>
</g>
<g >
<title>irq_exit_rcu (5,179,672 samples, 0.49%)</title><rect x="1143.6" y="165" width="5.8" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1146.64" y="175.5" ></text>
</g>
<g >
<title>fsnotify (4,334,005 samples, 0.41%)</title><rect x="455.2" y="165" width="4.9" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="458.22" y="175.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (2,191,804 samples, 0.21%)</title><rect x="799.6" y="373" width="2.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="802.64" y="383.5" ></text>
</g>
<g >
<title>our_mnt (4,391,783 samples, 0.42%)</title><rect x="584.0" y="117" width="4.9" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="587.01" y="127.5" ></text>
</g>
<g >
<title>try_to_unlazy (6,160,209 samples, 0.58%)</title><rect x="326.4" y="213" width="6.9" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="329.38" y="223.5" ></text>
</g>
<g >
<title>__GI___libc_open (8,439,449 samples, 0.80%)</title><rect x="12.4" y="501" width="9.5" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="15.44" y="511.5" ></text>
</g>
<g >
<title>prepend_copy (10,381,760 samples, 0.98%)</title><rect x="570.0" y="53" width="11.6" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="572.99" y="63.5" ></text>
</g>
<g >
<title>_raw_spin_unlock (1,594,315 samples, 0.15%)</title><rect x="697.2" y="261" width="1.8" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="700.17" y="271.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (1,042,093,724 samples, 98.52%)</title><rect x="27.5" y="485" width="1162.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="30.46" y="495.5" >[libstdc++.so.6.0.33]</text>
</g>
<g >
<title>__fput (88,074,460 samples, 8.33%)</title><rect x="67.3" y="309" width="98.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="70.29" y="319.5" >__fput</text>
</g>
<g >
<title>do_syscall_64 (177,739 samples, 0.02%)</title><rect x="813.2" y="325" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="816.15" y="335.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (8,439,449 samples, 0.80%)</title><rect x="12.4" y="485" width="9.5" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="15.44" y="495.5" ></text>
</g>
<g >
<title>x64_sys_call (1,435,172 samples, 0.14%)</title><rect x="33.7" y="421" width="1.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="36.71" y="431.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (2,201,851 samples, 0.21%)</title><rect x="158.2" y="293" width="2.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="161.23" y="303.5" ></text>
</g>
<g >
<title>get_current_fs_domain (2,190,912 samples, 0.21%)</title><rect x="588.9" y="181" width="2.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="591.91" y="191.5" ></text>
</g>
<g >
<title>check_heap_object (2,181,650 samples, 0.21%)</title><rect x="758.5" y="213" width="2.4" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="761.48" y="223.5" ></text>
</g>
<g >
<title>__free_one_page (1,435,172 samples, 0.14%)</title><rect x="33.7" y="213" width="1.6" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="36.71" y="223.5" ></text>
</g>
<g >
<title>walk_component (2,192,978 samples, 0.21%)</title><rect x="651.3" y="229" width="2.4" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="654.28" y="239.5" ></text>
</g>
<g >
<title>handle_mm_fault (3,361,597 samples, 0.32%)</title><rect x="29.7" y="405" width="3.8" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="32.75" y="415.5" ></text>
</g>
<g >
<title>std::ios_base::~ios_base (2,198,296 samples, 0.21%)</title><rect x="840.7" y="453" width="2.5" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="843.74" y="463.5" ></text>
</g>
<g >
<title>mab_mas_cp (177,739 samples, 0.02%)</title><rect x="813.2" y="165" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="816.15" y="175.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (2,192,767 samples, 0.21%)</title><rect x="792.3" y="357" width="2.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="795.31" y="367.5" ></text>
</g>
<g >
<title>lockref_get_not_zero (2,181,685 samples, 0.21%)</title><rect x="383.4" y="165" width="2.5" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="386.44" y="175.5" ></text>
</g>
<g >
<title>alloc_empty_file (63,537,247 samples, 6.01%)</title><rect x="248.3" y="245" width="70.9" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="251.30" y="255.5" >alloc_em..</text>
</g>
<g >
<title>__xas_next (2,177,392 samples, 0.21%)</title><rect x="1061.0" y="197" width="2.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1064.00" y="207.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (2,204,468 samples, 0.21%)</title><rect x="593.8" y="197" width="2.5" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="596.80" y="207.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (2,143,866 samples, 0.20%)</title><rect x="1156.7" y="341" width="2.4" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1159.71" y="351.5" ></text>
</g>
<g >
<title>apparmor_file_permission (2,198,999 samples, 0.21%)</title><rect x="1126.5" y="245" width="2.5" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1129.51" y="255.5" ></text>
</g>
<g >
<title>std::ios_base::_M_call_callbacks (2,199,323 samples, 0.21%)</title><rect x="838.3" y="453" width="2.4" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="841.28" y="463.5" ></text>
</g>
<g >
<title>security_file_free (4,351,784 samples, 0.41%)</title><rect x="160.7" y="293" width="4.8" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="163.69" y="303.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (24,635,982 samples, 2.33%)</title><rect x="282.7" y="229" width="27.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="285.72" y="239.5" >k..</text>
</g>
<g >
<title>hook_file_open (2,187,460 samples, 0.21%)</title><rect x="426.1" y="197" width="2.5" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="429.12" y="207.5" ></text>
</g>
<g >
<title>__munmap (177,739 samples, 0.02%)</title><rect x="813.2" y="357" width="0.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="816.15" y="367.5" ></text>
</g>
<g >
<title>__x64_sys_openat (495,200,789 samples, 46.82%)</title><rect x="225.3" y="309" width="552.4" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="228.30" y="319.5" >__x64_sys_openat</text>
</g>
<g >
<title>do_filp_open (409,861,508 samples, 38.75%)</title><rect x="239.9" y="277" width="457.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="242.94" y="287.5" >do_filp_open</text>
</g>
<g >
<title>percpu_counter_add_batch (1,439,427 samples, 0.14%)</title><rect x="312.7" y="229" width="1.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="315.66" y="239.5" ></text>
</g>
<g >
<title>__GI___pthread_disable_asynccancel (2,182,817 samples, 0.21%)</title><rect x="869.1" y="373" width="2.5" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="872.15" y="383.5" ></text>
</g>
<g >
<title>mntput (293,601 samples, 0.03%)</title><rect x="170.4" y="309" width="0.4" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="173.45" y="319.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (2,189,737 samples, 0.21%)</title><rect x="835.8" y="357" width="2.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="838.84" y="367.5" ></text>
</g>
<g >
<title>start_thread (1,042,093,724 samples, 98.52%)</title><rect x="27.5" y="501" width="1162.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="30.46" y="511.5" >start_thread</text>
</g>
<g >
<title>__fsnotify_parent (26,025,676 samples, 2.46%)</title><rect x="431.0" y="181" width="29.1" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="434.02" y="191.5" >__..</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (5,179,672 samples, 0.49%)</title><rect x="1143.6" y="181" width="5.8" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1146.64" y="191.5" ></text>
</g>
<g >
<title>__close_nocancel (5,547,274 samples, 0.52%)</title><rect x="807.0" y="405" width="6.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="809.96" y="415.5" ></text>
</g>
<g >
<title>__vm_munmap (177,739 samples, 0.02%)</title><rect x="813.2" y="277" width="0.2" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="816.15" y="287.5" ></text>
</g>
<g >
<title>__legitimize_mnt (1,779,745 samples, 0.17%)</title><rect x="331.3" y="181" width="2.0" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="334.27" y="191.5" ></text>
</g>
<g >
<title>__rcu_read_lock (9,456,730 samples, 0.89%)</title><rect x="101.5" y="277" width="10.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="104.49" y="287.5" ></text>
</g>
<g >
<title>account_user_time (2,191,804 samples, 0.21%)</title><rect x="799.6" y="245" width="2.5" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="802.64" y="255.5" ></text>
</g>
<g >
<title>std::ios_base::ios_base (2,182,290 samples, 0.21%)</title><rect x="1182.7" y="469" width="2.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1185.67" y="479.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (2,201,129 samples, 0.21%)</title><rect x="280.3" y="197" width="2.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="283.27" y="207.5" ></text>
</g>
<g >
<title>get_inode_acl (2,187,943 samples, 0.21%)</title><rect x="356.3" y="181" width="2.4" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="359.26" y="191.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (2,199,884 samples, 0.21%)</title><rect x="947.4" y="277" width="2.5" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="950.42" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,435,172 samples, 0.14%)</title><rect x="33.7" y="453" width="1.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="36.71" y="463.5" ></text>
</g>
<g >
<title>dget_parent (6,390,414 samples, 0.60%)</title><rect x="445.6" y="165" width="7.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="448.64" y="175.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsgetn (286,390,516 samples, 27.08%)</title><rect x="849.3" y="421" width="319.5" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="852.35" y="431.5" >std::basic_streambuf&lt;char, std::char_traits..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (253,405,532 samples, 23.96%)</title><rect x="876.4" y="357" width="282.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="879.41" y="367.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>init_cpu_features.constprop.0 (779,789 samples, 0.07%)</title><rect x="21.9" y="469" width="0.9" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="24.93" y="479.5" ></text>
</g>
<g >
<title>__x64_sys_close (102,527,693 samples, 9.69%)</title><rect x="67.3" y="341" width="114.4" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="70.29" y="351.5" >__x64_sys_close</text>
</g>
<g >
<title>process_measurement (2,124,453 samples, 0.20%)</title><rect x="344.1" y="213" width="2.4" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="347.12" y="223.5" ></text>
</g>
<g >
<title>_start (4,175,237 samples, 0.39%)</title><rect x="22.8" y="517" width="4.7" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="25.80" y="527.5" ></text>
</g>
<g >
<title>do_anonymous_page (3,361,597 samples, 0.32%)</title><rect x="29.7" y="357" width="3.8" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="32.75" y="367.5" ></text>
</g>
<g >
<title>io_latency_read (1,024,995,452 samples, 96.90%)</title><rect x="35.3" y="469" width="1143.5" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="38.31" y="479.5" >io_latency_read</text>
</g>
<g >
<title>__munmap (1,435,172 samples, 0.14%)</title><rect x="33.7" y="469" width="1.6" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="36.71" y="479.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode_prepare (2,185,872 samples, 0.21%)</title><rect x="918.2" y="325" width="2.4" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="921.17" y="335.5" ></text>
</g>
<g >
<title>fput (2,196,053 samples, 0.21%)</title><rect x="923.1" y="293" width="2.4" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="926.05" y="303.5" ></text>
</g>
<g >
<title>update_load_avg (5,179,672 samples, 0.49%)</title><rect x="1143.6" y="69" width="5.8" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1146.64" y="79.5" ></text>
</g>
<g >
<title>vma_alloc_folio (1,181,699 samples, 0.11%)</title><rect x="29.7" y="325" width="1.4" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="32.75" y="335.5" ></text>
</g>
<g >
<title>dget_parent (7,498,311 samples, 0.71%)</title><rect x="1109.3" y="229" width="8.4" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1112.33" y="239.5" ></text>
</g>
<g >
<title>d_namespace_path.constprop.0 (65,163,717 samples, 6.16%)</title><rect x="511.3" y="117" width="72.7" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="514.31" y="127.5" >d_namesp..</text>
</g>
<g >
<title>get_unused_fd_flags (10,368,507 samples, 0.98%)</title><rect x="697.2" y="277" width="11.5" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="700.17" y="287.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (1,435,172 samples, 0.14%)</title><rect x="33.7" y="293" width="1.6" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="36.71" y="303.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (6,568,678 samples, 0.62%)</title><rect x="726.1" y="245" width="7.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="729.05" y="255.5" ></text>
</g>
<g >
<title>access_error (1,175,284 samples, 0.11%)</title><rect x="28.3" y="421" width="1.3" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="31.27" y="431.5" ></text>
</g>
<g >
<title>security_file_open (2,190,462 samples, 0.21%)</title><rect x="598.7" y="213" width="2.5" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="601.72" y="223.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (1,435,172 samples, 0.14%)</title><rect x="33.7" y="229" width="1.6" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="36.71" y="239.5" ></text>
</g>
<g >
<title>do_syscall_64 (235,935,594 samples, 22.31%)</title><rect x="893.5" y="341" width="263.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="896.51" y="351.5" >do_syscall_64</text>
</g>
<g >
<title>x64_sys_call (102,527,693 samples, 9.69%)</title><rect x="67.3" y="357" width="114.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="70.29" y="367.5" >x64_sys_call</text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (2,191,804 samples, 0.21%)</title><rect x="799.6" y="357" width="2.5" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="802.64" y="367.5" ></text>
</g>
<g >
<title>lru_gen_add_folio (1,198,305 samples, 0.11%)</title><rect x="32.2" y="277" width="1.3" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="35.16" y="287.5" ></text>
</g>
<g >
<title>ima_file_check (14,057,353 samples, 1.33%)</title><rect x="333.3" y="229" width="15.6" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="336.25" y="239.5" ></text>
</g>
<g >
<title>filemap_get_pages (18,528,532 samples, 1.75%)</title><rect x="1052.3" y="213" width="20.7" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1055.31" y="223.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (5,179,672 samples, 0.49%)</title><rect x="1143.6" y="197" width="5.8" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1146.64" y="207.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::is_open (2,192,433 samples, 0.21%)</title><rect x="42.7" y="453" width="2.4" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="45.66" y="463.5" ></text>
</g>
<g >
<title>dget_parent (4,382,408 samples, 0.41%)</title><rect x="987.0" y="245" width="4.9" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="989.98" y="255.5" ></text>
</g>
<g >
<title>fscrypt_file_open (17,196,905 samples, 1.63%)</title><rect x="404.5" y="181" width="19.2" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="407.49" y="191.5" ></text>
</g>
<g >
<title>filemap_get_pages (4,391,276 samples, 0.42%)</title><rect x="1025.5" y="229" width="4.9" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1028.46" y="239.5" ></text>
</g>
<g >
<title>__fsnotify_parent (17,415,805 samples, 1.65%)</title><rect x="982.2" y="261" width="19.4" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="985.21" y="271.5" ></text>
</g>
<g >
<title>generic_file_read_iter (66,092,227 samples, 6.25%)</title><rect x="1009.0" y="245" width="73.7" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1011.99" y="255.5" >generic_..</text>
</g>
<g >
<title>__fdget_pos (8,749,960 samples, 0.83%)</title><rect x="935.3" y="277" width="9.7" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="938.28" y="287.5" ></text>
</g>
<g >
<title>clear_page_erms (1,181,699 samples, 0.11%)</title><rect x="29.7" y="261" width="1.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="32.75" y="271.5" ></text>
</g>
<g >
<title>folio_add_lru_vma (2,179,898 samples, 0.21%)</title><rect x="31.1" y="341" width="2.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="34.07" y="351.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::close (122,912,987 samples, 11.62%)</title><rect x="50.2" y="437" width="137.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="53.22" y="447.5" >std::__basic_file..</text>
</g>
<g >
<title>__hrtimer_run_queues (2,191,804 samples, 0.21%)</title><rect x="799.6" y="325" width="2.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="802.64" y="335.5" ></text>
</g>
<g >
<title>dput (6,307,834 samples, 0.60%)</title><rect x="416.6" y="165" width="7.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="419.64" y="175.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2,189,737 samples, 0.21%)</title><rect x="835.8" y="373" width="2.5" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="838.84" y="383.5" ></text>
</g>
<g >
<title>std::istream::read (294,100,526 samples, 27.80%)</title><rect x="843.2" y="453" width="328.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="846.19" y="463.5" >std::istream::read</text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::xsgetn (271,557,205 samples, 25.67%)</title><rect x="865.9" y="389" width="302.9" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="868.89" y="399.5" >std::__basic_file&lt;char&gt;::xsgetn</text>
</g>
<g >
<title>__rcu_read_lock (2,189,580 samples, 0.21%)</title><rect x="1104.4" y="229" width="2.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1107.43" y="239.5" ></text>
</g>
<g >
<title>step_into (2,193,286 samples, 0.21%)</title><rect x="669.7" y="229" width="2.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="672.68" y="239.5" ></text>
</g>
<g >
<title>srso_alias_return_thunk (2,198,779 samples, 0.21%)</title><rect x="760.9" y="229" width="2.5" height="15.0" fill="rgb(241,167,39)" rx="2" ry="2" />
<text  x="763.91" y="239.5" ></text>
</g>
<g >
<title>__fput_sync (92,761,577 samples, 8.77%)</title><rect x="67.3" y="325" width="103.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="70.29" y="335.5" >__fput_sync</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (109,081,863 samples, 10.31%)</title><rect x="60.0" y="389" width="121.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="62.98" y="399.5" >entry_SYSCALL_6..</text>
</g>
<g >
<title>__GI___libc_open (526,934,676 samples, 49.82%)</title><rect x="206.9" y="373" width="587.9" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="209.92" y="383.5" >__GI___libc_open</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2,189,737 samples, 0.21%)</title><rect x="835.8" y="421" width="2.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="838.84" y="431.5" ></text>
</g>
<g >
<title>dput (2,198,897 samples, 0.21%)</title><rect x="131.6" y="293" width="2.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="134.61" y="303.5" ></text>
</g>
<g >
<title>mas_wr_store_entry.isra.0 (177,739 samples, 0.02%)</title><rect x="813.2" y="213" width="0.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="816.15" y="223.5" ></text>
</g>
<g >
<title>putname (4,126,487 samples, 0.39%)</title><rect x="763.4" y="277" width="4.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="766.36" y="287.5" ></text>
</g>
<g >
<title>__fsnotify_parent (17,877,056 samples, 1.69%)</title><rect x="370.8" y="197" width="20.0" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="373.83" y="207.5" ></text>
</g>
<g >
<title>do_dentry_open (208,553,096 samples, 19.72%)</title><rect x="363.6" y="213" width="232.7" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="366.60" y="223.5" >do_dentry_open</text>
</g>
<g >
<title>__rcu_read_unlock (4,307,288 samples, 0.41%)</title><rect x="521.1" y="85" width="4.8" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="524.11" y="95.5" ></text>
</g>
<g >
<title>dget_parent (4,390,265 samples, 0.42%)</title><rect x="411.7" y="165" width="4.9" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="414.74" y="175.5" ></text>
</g>
<g >
<title>__aa_path_perm (23,956,286 samples, 2.26%)</title><rect x="481.0" y="149" width="26.7" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="483.98" y="159.5" >_..</text>
</g>
<g >
<title>inode_permission (25,653,551 samples, 2.43%)</title><rect x="618.0" y="229" width="28.6" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="621.01" y="239.5" >in..</text>
</g>
<g >
<title>mas_store_gfp (177,739 samples, 0.02%)</title><rect x="813.2" y="229" width="0.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="816.15" y="239.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2,191,804 samples, 0.21%)</title><rect x="799.6" y="341" width="2.5" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="802.64" y="351.5" ></text>
</g>
<g >
<title>vfs_open (212,945,210 samples, 20.13%)</title><rect x="363.6" y="229" width="237.6" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="366.60" y="239.5" >vfs_open</text>
</g>
<g >
<title>get_unused_fd_flags (4,382,949 samples, 0.41%)</title><rect x="768.0" y="293" width="4.9" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="770.97" y="303.5" ></text>
</g>
<g >
<title>make_vfsuid (2,193,670 samples, 0.21%)</title><rect x="361.2" y="197" width="2.4" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="364.16" y="207.5" ></text>
</g>
<g >
<title>vfs_open (1,978,333 samples, 0.19%)</title><rect x="695.0" y="245" width="2.2" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="697.97" y="255.5" ></text>
</g>
<g >
<title>release_pages (1,435,172 samples, 0.14%)</title><rect x="33.7" y="277" width="1.6" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="36.71" y="287.5" ></text>
</g>
<g >
<title>operator new (7,694,773 samples, 0.73%)</title><rect x="815.8" y="421" width="8.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="818.80" y="431.5" ></text>
</g>
<g >
<title>putname (4,370,065 samples, 0.41%)</title><rect x="772.9" y="293" width="4.8" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="775.86" y="303.5" ></text>
</g>
<g >
<title>security_file_open (148,117,550 samples, 14.00%)</title><rect x="428.6" y="197" width="165.2" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="431.56" y="207.5" >security_file_open</text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (10,265,518 samples, 0.97%)</title><rect x="826.8" y="453" width="11.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="829.83" y="463.5" ></text>
</g>
<g >
<title>x64_sys_call (495,200,789 samples, 46.82%)</title><rect x="225.3" y="325" width="552.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="228.30" y="335.5" >x64_sys_call</text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (5,601,218 samples, 0.53%)</title><rect x="27.5" y="469" width="6.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="30.46" y="479.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (2,189,737 samples, 0.21%)</title><rect x="835.8" y="405" width="2.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="838.84" y="415.5" ></text>
</g>
<g >
<title>atime_needs_update (6,529,034 samples, 0.62%)</title><rect x="1075.4" y="197" width="7.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1078.44" y="207.5" ></text>
</g>
<g >
<title>lockref_put_return (6,548,233 samples, 0.62%)</title><rect x="150.9" y="293" width="7.3" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="153.93" y="303.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (4,368,560 samples, 0.41%)</title><rect x="831.0" y="437" width="4.8" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="833.97" y="447.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (838,995 samples, 0.08%)</title><rect x="183.9" y="389" width="1.0" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="186.94" y="399.5" ></text>
</g>
<g >
<title>filp_flush (1,694,311 samples, 0.16%)</title><rect x="174.9" y="325" width="1.9" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="177.88" y="335.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (3,707,221 samples, 0.35%)</title><rect x="826.8" y="437" width="4.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="829.83" y="447.5" ></text>
</g>
<g >
<title>alloc_fd (4,377,060 samples, 0.41%)</title><rect x="699.0" y="261" width="4.8" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="701.95" y="271.5" ></text>
</g>
</g>
</svg>
