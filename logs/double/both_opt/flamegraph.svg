<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="598" onload="init(evt)" viewBox="0 0 1200 598" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="598.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="581" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="581" > </text>
<g id="frames">
<g >
<title>in_group_p (1,188,212 samples, 0.20%)</title><rect x="734.0" y="181" width="2.4" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="736.99" y="191.5" ></text>
</g>
<g >
<title>std::thread::_M_start_thread (811,345 samples, 0.14%)</title><rect x="1188.4" y="501" width="1.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1191.37" y="511.5" ></text>
</g>
<g >
<title>p4d_offset (642,694 samples, 0.11%)</title><rect x="25.8" y="389" width="1.3" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="28.77" y="399.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (314,193,562 samples, 53.27%)</title><rect x="226.2" y="357" width="628.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="229.20" y="367.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>__GI___libc_open (1,143,616 samples, 0.19%)</title><rect x="14.6" y="501" width="2.3" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="17.57" y="511.5" ></text>
</g>
<g >
<title>put_pid (1,150,145 samples, 0.20%)</title><rect x="194.8" y="309" width="2.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="197.84" y="319.5" ></text>
</g>
<g >
<title>capable_wrt_inode_uidgid (17,885,751 samples, 3.03%)</title><rect x="692.8" y="197" width="35.8" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="695.82" y="207.5" >cap..</text>
</g>
<g >
<title>fopen@@GLIBC_2.2.5 (329,250,469 samples, 55.82%)</title><rect x="217.0" y="421" width="658.8" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="220.03" y="431.5" >fopen@@GLIBC_2.2.5</text>
</g>
<g >
<title>mutex_lock (3,278,934 samples, 0.56%)</title><rect x="988.1" y="261" width="6.5" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="991.06" y="271.5" ></text>
</g>
<g >
<title>std::istream::read (141,719,064 samples, 24.03%)</title><rect x="898.0" y="453" width="283.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="901.01" y="463.5" >std::istream::read</text>
</g>
<g >
<title>search_binary_handler (105,027 samples, 0.02%)</title><rect x="16.9" y="373" width="0.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="19.88" y="383.5" ></text>
</g>
<g >
<title>__rcu_read_lock (1,147,424 samples, 0.19%)</title><rect x="433.4" y="149" width="2.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="436.44" y="159.5" ></text>
</g>
<g >
<title>aa_dfa_match (11,853,207 samples, 2.01%)</title><rect x="493.5" y="117" width="23.7" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="496.51" y="127.5" >a..</text>
</g>
<g >
<title>__fsnotify_parent (12,462,212 samples, 2.11%)</title><rect x="109.6" y="293" width="24.9" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="112.57" y="303.5" >_..</text>
</g>
<g >
<title>__rcu_read_unlock (1,148,088 samples, 0.19%)</title><rect x="366.1" y="165" width="2.3" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="369.15" y="175.5" ></text>
</g>
<g >
<title>apparmor_capable (2,272,070 samples, 0.39%)</title><rect x="719.5" y="165" width="4.5" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="722.46" y="175.5" ></text>
</g>
<g >
<title>may_open (19,467,304 samples, 3.30%)</title><rect x="339.6" y="229" width="38.9" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="342.56" y="239.5" >may..</text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::open (331,567,753 samples, 56.22%)</title><rect x="217.0" y="453" width="663.4" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="220.03" y="463.5" >std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::open</text>
</g>
<g >
<title>touch_atime (7,134,445 samples, 1.21%)</title><rect x="1084.5" y="213" width="14.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1087.46" y="223.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (4,078,653 samples, 0.69%)</title><rect x="19.8" y="453" width="8.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="22.80" y="463.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (2,293,676 samples, 0.39%)</title><rect x="857.1" y="357" width="4.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="860.11" y="367.5" ></text>
</g>
<g >
<title>dput (1,136,152 samples, 0.19%)</title><rect x="127.2" y="277" width="2.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="130.24" y="287.5" ></text>
</g>
<g >
<title>filp_flush (1,158,444 samples, 0.20%)</title><rect x="212.4" y="325" width="2.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="215.42" y="335.5" ></text>
</g>
<g >
<title>strcmp (481,992 samples, 0.08%)</title><rect x="17.1" y="389" width="1.0" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="20.09" y="399.5" ></text>
</g>
<g >
<title>__x64_sys_read (97,595,488 samples, 16.55%)</title><rect x="969.2" y="309" width="195.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="972.23" y="319.5" >__x64_sys_read</text>
</g>
<g >
<title>is_vmalloc_addr (1,407,066 samples, 0.24%)</title><rect x="828.7" y="197" width="2.8" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="831.67" y="207.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (33,441,128 samples, 5.67%)</title><rect x="1034.6" y="261" width="66.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1037.58" y="271.5" >ext4_fi..</text>
</g>
<g >
<title>do_vmi_align_munmap (1,241,588 samples, 0.21%)</title><rect x="28.3" y="357" width="2.5" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="31.32" y="367.5" ></text>
</g>
<g >
<title>std::locale::locale (1,157,836 samples, 0.20%)</title><rect x="888.7" y="421" width="2.3" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="891.66" y="431.5" ></text>
</g>
<g >
<title>cap_capable (2,293,577 samples, 0.39%)</title><rect x="700.3" y="181" width="4.5" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="703.25" y="191.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (79,496,737 samples, 13.48%)</title><rect x="606.1" y="245" width="159.1" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="609.15" y="255.5" >link_path_walk.part...</text>
</g>
<g >
<title>srso_alias_safe_ret (1,150,062 samples, 0.19%)</title><rect x="1164.5" y="341" width="2.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1167.49" y="351.5" ></text>
</g>
<g >
<title>__munmap (1,241,588 samples, 0.21%)</title><rect x="28.3" y="469" width="2.5" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="31.32" y="479.5" ></text>
</g>
<g >
<title>x64_sys_call (1,241,588 samples, 0.21%)</title><rect x="28.3" y="421" width="2.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="31.32" y="431.5" ></text>
</g>
<g >
<title>current_time (2,298,461 samples, 0.39%)</title><rect x="1094.1" y="181" width="4.6" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1097.13" y="191.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1,141,619 samples, 0.19%)</title><rect x="910.1" y="421" width="2.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="913.06" y="431.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (4,569,512 samples, 0.77%)</title><rect x="287.2" y="197" width="9.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="290.15" y="207.5" ></text>
</g>
<g >
<title>unmap_vmas (770,836 samples, 0.13%)</title><rect x="1186.8" y="357" width="1.6" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1189.83" y="367.5" ></text>
</g>
<g >
<title>vm_mmap (95,486 samples, 0.02%)</title><rect x="16.9" y="325" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="19.88" y="335.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (1,147,078 samples, 0.19%)</title><rect x="192.5" y="309" width="2.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="195.54" y="319.5" ></text>
</g>
<g >
<title>atime_needs_update (7,134,445 samples, 1.21%)</title><rect x="1084.5" y="197" width="14.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1087.46" y="207.5" ></text>
</g>
<g >
<title>dput (2,296,722 samples, 0.39%)</title><rect x="464.2" y="165" width="4.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="467.21" y="175.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1,044,585 samples, 0.18%)</title><rect x="22.0" y="277" width="2.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="25.00" y="287.5" ></text>
</g>
<g >
<title>__rcu_read_lock (1,440,530 samples, 0.24%)</title><rect x="459.0" y="165" width="2.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="462.03" y="175.5" ></text>
</g>
<g >
<title>inode_permission (47,984,203 samples, 8.14%)</title><rect x="647.9" y="229" width="96.0" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="650.89" y="239.5" >inode_permi..</text>
</g>
<g >
<title>srso_alias_safe_ret (811,345 samples, 0.14%)</title><rect x="1188.4" y="437" width="1.6" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1191.37" y="447.5" ></text>
</g>
<g >
<title>fclose@@GLIBC_2.2.5 (77,518,074 samples, 13.14%)</title><rect x="61.9" y="421" width="155.1" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="64.94" y="431.5" >fclose@@GLIBC_2.2.5</text>
</g>
<g >
<title>__rcu_read_lock (3,450,711 samples, 0.59%)</title><rect x="1116.7" y="229" width="6.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1119.73" y="239.5" ></text>
</g>
<g >
<title>path_init (2,515,563 samples, 0.43%)</title><rect x="774.3" y="245" width="5.1" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="777.32" y="255.5" ></text>
</g>
<g >
<title>__memcg_slab_post_alloc_hook (3,542,125 samples, 0.60%)</title><rect x="308.4" y="213" width="7.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="311.40" y="223.5" ></text>
</g>
<g >
<title>locks_remove_posix (1,158,444 samples, 0.20%)</title><rect x="212.4" y="309" width="2.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="215.42" y="319.5" ></text>
</g>
<g >
<title>exit_mmap (770,836 samples, 0.13%)</title><rect x="1186.8" y="373" width="1.6" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1189.83" y="383.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (95,486 samples, 0.02%)</title><rect x="16.9" y="309" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="19.88" y="319.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (3,607,434 samples, 0.61%)</title><rect x="957.0" y="325" width="7.2" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="959.98" y="335.5" ></text>
</g>
<g >
<title>do_filp_open (274,479,213 samples, 46.54%)</title><rect x="240.0" y="277" width="549.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="243.01" y="287.5" >do_filp_open</text>
</g>
<g >
<title>inode_permission (18,322,558 samples, 3.11%)</title><rect x="341.9" y="213" width="36.6" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="344.85" y="223.5" >ino..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (770,836 samples, 0.13%)</title><rect x="1186.8" y="517" width="1.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1189.83" y="527.5" ></text>
</g>
<g >
<title>__lookup_mnt (1,137,137 samples, 0.19%)</title><rect x="762.9" y="197" width="2.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="765.92" y="207.5" ></text>
</g>
<g >
<title>__fsnotify_parent (9,784,482 samples, 1.66%)</title><rect x="1015.0" y="261" width="19.6" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="1018.01" y="271.5" ></text>
</g>
<g >
<title>lockref_get_not_zero (1,148,404 samples, 0.19%)</title><rect x="1027.3" y="229" width="2.3" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="1030.29" y="239.5" ></text>
</g>
<g >
<title>_raw_spin_trylock (564,639 samples, 0.10%)</title><rect x="22.0" y="261" width="1.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="25.00" y="271.5" ></text>
</g>
<g >
<title>file_close_fd (1,757,853 samples, 0.30%)</title><rect x="208.9" y="325" width="3.5" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="211.90" y="335.5" ></text>
</g>
<g >
<title>profile_capable (487,352 samples, 0.08%)</title><rect x="723.0" y="133" width="1.0" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="726.03" y="143.5" ></text>
</g>
<g >
<title>our_mnt (1,156,484 samples, 0.20%)</title><rect x="587.7" y="117" width="2.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="590.73" y="127.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (809,598 samples, 0.14%)</title><rect x="586.1" y="69" width="1.6" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="589.11" y="79.5" ></text>
</g>
<g >
<title>_dl_start_user (1,356,817 samples, 0.23%)</title><rect x="17.1" y="517" width="2.7" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="20.09" y="527.5" ></text>
</g>
<g >
<title>__x64_sys_rt_sigprocmask (1,151,777 samples, 0.20%)</title><rect x="1184.5" y="437" width="2.3" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="1187.53" y="447.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (1,151,707 samples, 0.20%)</title><rect x="779.4" y="245" width="2.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="782.35" y="255.5" ></text>
</g>
<g >
<title>__GI___libc_open (318,778,158 samples, 54.05%)</title><rect x="223.9" y="373" width="637.8" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="226.92" y="383.5" >__GI___libc_open</text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::xsgetn (1,200,884 samples, 0.20%)</title><rect x="917.5" y="405" width="2.4" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="920.47" y="415.5" ></text>
</g>
<g >
<title>__vm_munmap (1,241,588 samples, 0.21%)</title><rect x="28.3" y="389" width="2.5" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="31.32" y="399.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (840,966 samples, 0.14%)</title><rect x="24.1" y="245" width="1.7" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="27.09" y="255.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (1,150,150 samples, 0.20%)</title><rect x="726.3" y="181" width="2.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="729.31" y="191.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1,143,616 samples, 0.19%)</title><rect x="14.6" y="485" width="2.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="17.57" y="495.5" ></text>
</g>
<g >
<title>security_file_open (76,844,541 samples, 13.03%)</title><rect x="438.0" y="197" width="153.8" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="441.03" y="207.5" >security_file_open</text>
</g>
<g >
<title>__GI___pthread_disable_asynccancel (1,144,994 samples, 0.19%)</title><rect x="931.3" y="373" width="2.3" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="934.35" y="383.5" ></text>
</g>
<g >
<title>getname_flags.part.0 (17,736,968 samples, 3.01%)</title><rect x="796.0" y="261" width="35.5" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="799.00" y="271.5" >get..</text>
</g>
<g >
<title>lockref_put_return (2,290,377 samples, 0.39%)</title><rect x="169.6" y="293" width="4.6" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="172.65" y="303.5" ></text>
</g>
<g >
<title>security_inode_permission (2,295,781 samples, 0.39%)</title><rect x="739.3" y="213" width="4.6" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="742.29" y="223.5" ></text>
</g>
<g >
<title>copy_from_kernel_nofault_allowed (1,148,795 samples, 0.19%)</title><rect x="583.8" y="37" width="2.3" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="586.82" y="47.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (840,966 samples, 0.14%)</title><rect x="24.1" y="261" width="1.7" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="27.09" y="271.5" ></text>
</g>
<g >
<title>_IO_link_in (1,131,425 samples, 0.19%)</title><rect x="864.1" y="389" width="2.3" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="867.11" y="399.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::xsgetn (122,877,893 samples, 20.83%)</title><rect x="926.8" y="389" width="245.8" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="929.78" y="399.5" >std::__basic_file&lt;char&gt;::xsgetn</text>
</g>
<g >
<title>syscall_exit_to_user_mode (2,300,398 samples, 0.39%)</title><rect x="228.5" y="325" width="4.6" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="231.54" y="335.5" ></text>
</g>
<g >
<title>std::codecvt&lt;char, char, __mbstate_t&gt;::do_always_noconv (3,316,974 samples, 0.56%)</title><rect x="1172.6" y="405" width="6.7" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1175.61" y="415.5" ></text>
</g>
<g >
<title>open_last_lookups (2,259,101 samples, 0.38%)</title><rect x="769.8" y="245" width="4.5" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="772.80" y="255.5" ></text>
</g>
<g >
<title>security_file_alloc (8,227,981 samples, 1.40%)</title><rect x="279.8" y="213" width="16.5" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="282.84" y="223.5" ></text>
</g>
<g >
<title>__rcu_read_lock (1,150,860 samples, 0.20%)</title><rect x="1019.6" y="245" width="2.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1022.62" y="255.5" ></text>
</g>
<g >
<title>fsnotify (3,171,576 samples, 0.54%)</title><rect x="408.0" y="181" width="6.4" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="411.01" y="191.5" ></text>
</g>
<g >
<title>aa_file_perm (3,237,772 samples, 0.55%)</title><rect x="1158.0" y="213" width="6.5" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1161.01" y="223.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,151,777 samples, 0.20%)</title><rect x="1184.5" y="469" width="2.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1187.53" y="479.5" ></text>
</g>
<g >
<title>__x64_sys_close (63,926,258 samples, 10.84%)</title><rect x="89.1" y="341" width="127.9" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="92.13" y="351.5" >__x64_sys_close</text>
</g>
<g >
<title>x64_sys_call (1,147,198 samples, 0.19%)</title><rect x="852.5" y="341" width="2.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="855.51" y="351.5" ></text>
</g>
<g >
<title>dput (4,570,706 samples, 0.77%)</title><rect x="1132.8" y="229" width="9.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1135.80" y="239.5" ></text>
</g>
<g >
<title>alloc_empty_file (36,482,294 samples, 6.19%)</title><rect x="253.8" y="245" width="73.0" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="256.82" y="255.5" >alloc_em..</text>
</g>
<g >
<title>syscall_exit_to_user_mode_prepare (217,472 samples, 0.04%)</title><rect x="964.2" y="325" width="0.4" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="967.20" y="335.5" ></text>
</g>
<g >
<title>_compound_head (1,241,588 samples, 0.21%)</title><rect x="28.3" y="261" width="2.5" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="31.32" y="271.5" ></text>
</g>
<g >
<title>_IO_default_finish (1,143,109 samples, 0.19%)</title><rect x="64.6" y="405" width="2.3" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="67.61" y="415.5" ></text>
</g>
<g >
<title>handle_pte_fault (2,034,215 samples, 0.34%)</title><rect x="21.7" y="373" width="4.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="24.70" y="383.5" ></text>
</g>
<g >
<title>x64_sys_call (1,768,135 samples, 0.30%)</title><rect x="1166.8" y="341" width="3.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1169.79" y="351.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (3,088,753 samples, 0.52%)</title><rect x="73.8" y="357" width="6.2" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="76.78" y="367.5" ></text>
</g>
<g >
<title>mntput (2,302,566 samples, 0.39%)</title><rect x="765.2" y="245" width="4.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="768.20" y="255.5" ></text>
</g>
<g >
<title>_IO_file_open (321,074,186 samples, 54.44%)</title><rect x="219.3" y="389" width="642.4" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="222.33" y="399.5" >_IO_file_open</text>
</g>
<g >
<title>_find_next_zero_bit (1,195,554 samples, 0.20%)</title><rect x="789.2" y="261" width="2.4" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="792.16" y="271.5" ></text>
</g>
<g >
<title>__x64_sys_openat (308,430,667 samples, 52.29%)</title><rect x="233.1" y="309" width="617.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="236.14" y="319.5" >__x64_sys_openat</text>
</g>
<g >
<title>__GI__IO_un_link.part.0 (1,153,750 samples, 0.20%)</title><rect x="66.9" y="405" width="2.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="69.90" y="415.5" ></text>
</g>
<g >
<title>lookup_fast (3,222,735 samples, 0.55%)</title><rect x="753.5" y="213" width="6.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="756.52" y="223.5" ></text>
</g>
<g >
<title>locks_remove_file (1,147,383 samples, 0.19%)</title><rect x="174.2" y="293" width="2.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="177.23" y="303.5" ></text>
</g>
<g >
<title>apparmor_file_permission (5,823,962 samples, 0.99%)</title><rect x="1152.8" y="229" width="11.7" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1155.83" y="239.5" ></text>
</g>
<g >
<title>ksys_read (97,595,488 samples, 16.55%)</title><rect x="969.2" y="293" width="195.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="972.23" y="303.5" >ksys_read</text>
</g>
<g >
<title>create_thread (811,345 samples, 0.14%)</title><rect x="1188.4" y="469" width="1.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1191.37" y="479.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (1,066,023 samples, 0.18%)</title><rect x="315.5" y="213" width="2.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="318.49" y="223.5" ></text>
</g>
<g >
<title>clone3 (811,345 samples, 0.14%)</title><rect x="1188.4" y="453" width="1.6" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="1191.37" y="463.5" ></text>
</g>
<g >
<title>generic_permission (34,110,222 samples, 5.78%)</title><rect x="668.1" y="213" width="68.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="671.13" y="223.5" >generic..</text>
</g>
<g >
<title>hook_file_open (1,147,268 samples, 0.19%)</title><rect x="435.7" y="197" width="2.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="438.73" y="207.5" ></text>
</g>
<g >
<title>do_group_exit (770,836 samples, 0.13%)</title><rect x="1186.8" y="453" width="1.6" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1189.83" y="463.5" ></text>
</g>
<g >
<title>apparmor_file_open (1,311,788 samples, 0.22%)</title><rect x="416.6" y="197" width="2.7" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="419.64" y="207.5" ></text>
</g>
<g >
<title>x64_sys_call (67,366,549 samples, 11.42%)</title><rect x="82.3" y="357" width="134.7" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="85.25" y="367.5" >x64_sys_call</text>
</g>
<g >
<title>nd_jump_root (2,515,563 samples, 0.43%)</title><rect x="774.3" y="229" width="5.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="777.32" y="239.5" ></text>
</g>
<g >
<title>get_unused_fd_flags (3,418,174 samples, 0.58%)</title><rect x="789.2" y="277" width="6.8" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="792.16" y="287.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::close (80,956,892 samples, 13.73%)</title><rect x="55.1" y="453" width="161.9" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="58.06" y="463.5" >std::basic_filebuf&lt;c..</text>
</g>
<g >
<title>locks_remove_file (1,149,066 samples, 0.19%)</title><rect x="190.2" y="309" width="2.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="193.24" y="319.5" ></text>
</g>
<g >
<title>[unknown] (2,284,981 samples, 0.39%)</title><rect x="10.0" y="501" width="4.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>operator new (2,292,695 samples, 0.39%)</title><rect x="875.8" y="421" width="4.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="878.80" y="431.5" ></text>
</g>
<g >
<title>__fsnotify_parent (22,638,218 samples, 3.84%)</title><rect x="1107.5" y="245" width="45.3" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="1110.54" y="255.5" >__fs..</text>
</g>
<g >
<title>do_dentry_open (106,593,352 samples, 18.07%)</title><rect x="378.5" y="213" width="213.3" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="381.51" y="223.5" >do_dentry_open</text>
</g>
<g >
<title>filemap_get_read_batch (5,866,257 samples, 0.99%)</title><rect x="1070.4" y="197" width="11.8" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1073.43" y="207.5" ></text>
</g>
<g >
<title>ext4_release_file (2,298,101 samples, 0.39%)</title><rect x="139.1" y="293" width="4.6" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="142.14" y="303.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (4,647,667 samples, 0.79%)</title><rect x="197.1" y="309" width="9.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="200.14" y="319.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (1,356,817 samples, 0.23%)</title><rect x="17.1" y="485" width="2.7" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="20.09" y="495.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (2,300,374 samples, 0.39%)</title><rect x="322.2" y="229" width="4.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="325.21" y="239.5" ></text>
</g>
<g >
<title>getname (1,447,866 samples, 0.25%)</title><rect x="847.3" y="293" width="2.9" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="850.31" y="303.5" ></text>
</g>
<g >
<title>aa_audit_file (1,145,889 samples, 0.19%)</title><rect x="491.2" y="133" width="2.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="494.22" y="143.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (582,136,059 samples, 98.70%)</title><rect x="19.8" y="485" width="1164.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="22.80" y="495.5" >[libstdc++.so.6.0.33]</text>
</g>
<g >
<title>do_syscall_64 (1,140,764 samples, 0.19%)</title><rect x="943.2" y="357" width="2.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="946.16" y="367.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_allocate_internal_buffer (2,292,695 samples, 0.39%)</title><rect x="875.8" y="437" width="4.6" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="878.80" y="447.5" ></text>
</g>
<g >
<title>set_root (2,515,563 samples, 0.43%)</title><rect x="774.3" y="213" width="5.1" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="777.32" y="223.5" ></text>
</g>
<g >
<title>get_unused_fd_flags (3,328,331 samples, 0.56%)</title><rect x="840.7" y="293" width="6.6" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="843.65" y="303.5" ></text>
</g>
<g >
<title>do_open (137,325,954 samples, 23.28%)</title><rect x="326.8" y="245" width="274.8" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="329.81" y="255.5" >do_open</text>
</g>
<g >
<title>dget_parent (3,834,883 samples, 0.65%)</title><rect x="1021.9" y="245" width="7.7" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1024.92" y="255.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2,034,215 samples, 0.34%)</title><rect x="21.7" y="389" width="4.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="24.70" y="399.5" ></text>
</g>
<g >
<title>version_check_doit (481,992 samples, 0.08%)</title><rect x="17.1" y="437" width="1.0" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="20.09" y="447.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1,332,129 samples, 0.23%)</title><rect x="187.6" y="277" width="2.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="190.58" y="287.5" ></text>
</g>
<g >
<title>perf_iterate_ctx (95,486 samples, 0.02%)</title><rect x="16.9" y="213" width="0.2" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="19.88" y="223.5" ></text>
</g>
<g >
<title>init_file (12,891,299 samples, 2.19%)</title><rect x="270.5" y="229" width="25.8" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="273.51" y="239.5" >i..</text>
</g>
<g >
<title>do_exit (770,836 samples, 0.13%)</title><rect x="1186.8" y="437" width="1.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1189.83" y="447.5" ></text>
</g>
<g >
<title>path_get (1,135,729 samples, 0.19%)</title><rect x="597.0" y="213" width="2.3" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="599.99" y="223.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (1,141,040 samples, 0.19%)</title><rect x="882.7" y="453" width="2.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="885.69" y="463.5" ></text>
</g>
<g >
<title>perf_event_mmap (95,486 samples, 0.02%)</title><rect x="16.9" y="261" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="19.88" y="271.5" ></text>
</g>
<g >
<title>alloc_fd (2,222,620 samples, 0.38%)</title><rect x="791.6" y="261" width="4.4" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="794.55" y="271.5" ></text>
</g>
<g >
<title>read (2,284,965 samples, 0.39%)</title><rect x="10.0" y="469" width="4.6" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>perf_event_mmap_event (95,486 samples, 0.02%)</title><rect x="16.9" y="245" width="0.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="19.88" y="255.5" ></text>
</g>
<g >
<title>__alloc_pages (1,044,585 samples, 0.18%)</title><rect x="22.0" y="293" width="2.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="25.00" y="303.5" ></text>
</g>
<g >
<title>make_vfsuid (1,461,178 samples, 0.25%)</title><rect x="736.4" y="213" width="2.9" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="739.37" y="223.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (1,151,885 samples, 0.20%)</title><rect x="854.8" y="357" width="2.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="857.80" y="367.5" ></text>
</g>
<g >
<title>aa_get_buffer (1,308,051 samples, 0.22%)</title><rect x="517.2" y="149" width="2.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="520.23" y="159.5" ></text>
</g>
<g >
<title>hook_file_open (860,568 samples, 0.15%)</title><rect x="590.0" y="181" width="1.8" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="593.05" y="191.5" ></text>
</g>
<g >
<title>filemap_get_pages (8,158,678 samples, 1.38%)</title><rect x="1065.8" y="213" width="16.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1068.84" y="223.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::fd (1,152,150 samples, 0.20%)</title><rect x="924.5" y="389" width="2.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="927.47" y="399.5" ></text>
</g>
<g >
<title>__perf_event__output_id_sample (95,486 samples, 0.02%)</title><rect x="16.9" y="197" width="0.2" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="19.88" y="207.5" ></text>
</g>
<g >
<title>_IO_link_in (1,150,102 samples, 0.19%)</title><rect x="221.6" y="373" width="2.3" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="224.62" y="383.5" ></text>
</g>
<g >
<title>zap_pte_range (770,836 samples, 0.13%)</title><rect x="1186.8" y="293" width="1.6" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1189.83" y="303.5" ></text>
</g>
<g >
<title>get_cached_acl (3,662,780 samples, 0.62%)</title><rect x="368.4" y="165" width="7.4" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="371.45" y="175.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::underflow (126,328,926 samples, 21.42%)</title><rect x="919.9" y="405" width="252.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="922.87" y="415.5" >std::basic_filebuf&lt;char, std::cha..</text>
</g>
<g >
<title>__xas_next (1,318,099 samples, 0.22%)</title><rect x="1076.5" y="181" width="2.7" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1079.53" y="191.5" ></text>
</g>
<g >
<title>ima_file_check (1,148,681 samples, 0.19%)</title><rect x="601.6" y="245" width="2.3" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="604.55" y="255.5" ></text>
</g>
<g >
<title>folio_add_lru_vma (840,966 samples, 0.14%)</title><rect x="24.1" y="341" width="1.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="27.09" y="351.5" ></text>
</g>
<g >
<title>get_cached_acl_rcu (1,152,375 samples, 0.20%)</title><rect x="728.6" y="197" width="2.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="731.61" y="207.5" ></text>
</g>
<g >
<title>vma_alloc_folio (1,044,585 samples, 0.18%)</title><rect x="22.0" y="325" width="2.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="25.00" y="335.5" ></text>
</g>
<g >
<title>__aa_path_perm (14,974,292 samples, 2.54%)</title><rect x="487.3" y="149" width="29.9" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="490.27" y="159.5" >__..</text>
</g>
<g >
<title>x64_sys_call (770,836 samples, 0.13%)</title><rect x="1186.8" y="485" width="1.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1189.83" y="495.5" ></text>
</g>
<g >
<title>privileged_wrt_inode_uidgid (5,008,038 samples, 0.85%)</title><rect x="704.8" y="181" width="10.1" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="707.84" y="191.5" ></text>
</g>
<g >
<title>fscrypt_file_open (5,934,922 samples, 1.01%)</title><rect x="423.9" y="181" width="11.8" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="426.86" y="191.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode_prepare (1,143,528 samples, 0.19%)</title><rect x="80.0" y="357" width="2.3" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="82.96" y="367.5" ></text>
</g>
<g >
<title>folio_mark_accessed (1,147,636 samples, 0.19%)</title><rect x="1082.2" y="213" width="2.3" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1085.16" y="223.5" ></text>
</g>
<g >
<title>__mutex_init (1,153,382 samples, 0.20%)</title><rect x="268.2" y="229" width="2.3" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="271.20" y="239.5" ></text>
</g>
<g >
<title>do_syscall_64 (106,049,356 samples, 17.98%)</title><rect x="952.3" y="341" width="212.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="955.32" y="351.5" >do_syscall_64</text>
</g>
<g >
<title>io_latency_read (576,638,161 samples, 97.77%)</title><rect x="30.8" y="469" width="1153.7" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="33.80" y="479.5" >io_latency_read</text>
</g>
<g >
<title>folio_mark_accessed (1,376,966 samples, 0.23%)</title><rect x="1098.7" y="229" width="2.8" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1101.73" y="239.5" ></text>
</g>
<g >
<title>do_syscall_64 (770,836 samples, 0.13%)</title><rect x="1186.8" y="501" width="1.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1189.83" y="511.5" ></text>
</g>
<g >
<title>std::locale::operator= (2,298,970 samples, 0.39%)</title><rect x="891.0" y="421" width="4.6" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="893.98" y="431.5" ></text>
</g>
<g >
<title>__rcu_read_lock (1,158,185 samples, 0.20%)</title><rect x="167.3" y="277" width="2.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="170.33" y="287.5" ></text>
</g>
<g >
<title>security_capable (5,720,989 samples, 0.97%)</title><rect x="714.9" y="181" width="11.4" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="717.86" y="191.5" ></text>
</g>
<g >
<title>lockref_put_return (1,403,439 samples, 0.24%)</title><rect x="786.4" y="229" width="2.8" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="789.35" y="239.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,241,588 samples, 0.21%)</title><rect x="28.3" y="453" width="2.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="31.32" y="463.5" ></text>
</g>
<g >
<title>__x64_sys_execve (105,027 samples, 0.02%)</title><rect x="16.9" y="453" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="19.88" y="463.5" ></text>
</g>
<g >
<title>read (118,300,925 samples, 20.06%)</title><rect x="935.9" y="373" width="236.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="938.93" y="383.5" >read</text>
</g>
<g >
<title>fsnotify (1,347,285 samples, 0.23%)</title><rect x="129.5" y="277" width="2.7" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="132.51" y="287.5" ></text>
</g>
<g >
<title>d_absolute_path (27,832,415 samples, 4.72%)</title><rect x="532.1" y="101" width="55.6" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="535.05" y="111.5" >d_abs..</text>
</g>
<g >
<title>__strchr_avx2 (1,204,412 samples, 0.20%)</title><rect x="861.7" y="389" width="2.4" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="864.70" y="399.5" ></text>
</g>
<g >
<title>__memset (1,150,757 samples, 0.20%)</title><rect x="808.0" y="245" width="2.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="811.00" y="255.5" ></text>
</g>
<g >
<title>pthread_create@GLIBC_2.2.5 (811,345 samples, 0.14%)</title><rect x="1188.4" y="485" width="1.6" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="1191.37" y="495.5" ></text>
</g>
<g >
<title>__d_lookup_rcu (1,133,486 samples, 0.19%)</title><rect x="757.7" y="197" width="2.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="760.70" y="207.5" ></text>
</g>
<g >
<title>dput (2,493,912 samples, 0.42%)</title><rect x="1029.6" y="245" width="5.0" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1032.59" y="255.5" ></text>
</g>
<g >
<title>ext4_file_open (8,232,276 samples, 1.40%)</title><rect x="419.3" y="197" width="16.4" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="422.26" y="207.5" ></text>
</g>
<g >
<title>walk_component (6,981,825 samples, 1.18%)</title><rect x="751.2" y="229" width="14.0" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="754.23" y="239.5" ></text>
</g>
<g >
<title>dput (2,319,277 samples, 0.39%)</title><rect x="134.5" y="293" width="4.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="137.50" y="303.5" ></text>
</g>
<g >
<title>folio_add_lru (840,966 samples, 0.14%)</title><rect x="24.1" y="325" width="1.7" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="27.09" y="335.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (105,027 samples, 0.02%)</title><rect x="16.9" y="501" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="19.88" y="511.5" ></text>
</g>
<g >
<title>bprm_execve (105,027 samples, 0.02%)</title><rect x="16.9" y="421" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="19.88" y="431.5" ></text>
</g>
<g >
<title>__fsnotify_parent (13,149,804 samples, 2.23%)</title><rect x="390.3" y="197" width="26.3" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="393.33" y="207.5" >_..</text>
</g>
<g >
<title>fsnotify (1,145,538 samples, 0.19%)</title><rect x="468.8" y="165" width="2.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="471.81" y="175.5" ></text>
</g>
<g >
<title>path_name (34,183,974 samples, 5.80%)</title><rect x="521.7" y="149" width="68.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="524.66" y="159.5" >path_name</text>
</g>
<g >
<title>get_inode_acl (7,702,774 samples, 1.31%)</title><rect x="360.4" y="181" width="15.4" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="363.36" y="191.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::open (329,275,058 samples, 55.83%)</title><rect x="217.0" y="437" width="658.8" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="220.03" y="447.5" >std::__basic_file&lt;char&gt;::open</text>
</g>
<g >
<title>apparmor_file_alloc_security (1,139,832 samples, 0.19%)</title><rect x="275.1" y="213" width="2.3" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="278.11" y="223.5" ></text>
</g>
<g >
<title>exit_mm (770,836 samples, 0.13%)</title><rect x="1186.8" y="421" width="1.6" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1189.83" y="431.5" ></text>
</g>
<g >
<title>ext4_file_open (2,611,411 samples, 0.44%)</title><rect x="591.8" y="213" width="5.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="594.77" y="223.5" ></text>
</g>
<g >
<title>apparmor_current_getlsmblob_subj (529,310 samples, 0.09%)</title><rect x="338.5" y="213" width="1.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="341.50" y="223.5" ></text>
</g>
<g >
<title>check_heap_object (3,445,411 samples, 0.58%)</title><rect x="821.8" y="197" width="6.9" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="824.78" y="207.5" ></text>
</g>
<g >
<title>error_entry (177,657 samples, 0.03%)</title><rect x="28.0" y="453" width="0.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="30.96" y="463.5" ></text>
</g>
<g >
<title>__check_object_size (7,150,122 samples, 1.21%)</title><rect x="817.2" y="229" width="14.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="820.18" y="239.5" ></text>
</g>
<g >
<title>aa_path_name (34,183,974 samples, 5.80%)</title><rect x="521.7" y="133" width="68.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="524.66" y="143.5" >aa_path..</text>
</g>
<g >
<title>unmap_single_vma (1,241,588 samples, 0.21%)</title><rect x="28.3" y="309" width="2.5" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="31.32" y="319.5" ></text>
</g>
<g >
<title>vfsgid_in_group_p (1,188,212 samples, 0.20%)</title><rect x="734.0" y="197" width="2.4" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="736.99" y="207.5" ></text>
</g>
<g >
<title>do_syscall_64 (105,027 samples, 0.02%)</title><rect x="16.9" y="485" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="19.88" y="495.5" ></text>
</g>
<g >
<title>do_open (2,263,684 samples, 0.38%)</title><rect x="247.0" y="261" width="4.5" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="250.00" y="271.5" ></text>
</g>
<g >
<title>__mmput (770,836 samples, 0.13%)</title><rect x="1186.8" y="389" width="1.6" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1189.83" y="399.5" ></text>
</g>
<g >
<title>aa_path_perm (53,609,699 samples, 9.09%)</title><rect x="482.8" y="165" width="107.2" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="485.79" y="175.5" >aa_path_perm</text>
</g>
<g >
<title>clone3 (583,316,876 samples, 98.90%)</title><rect x="19.8" y="517" width="1167.0" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="22.80" y="527.5" >clone3</text>
</g>
<g >
<title>dget_parent (1,150,869 samples, 0.20%)</title><rect x="461.9" y="165" width="2.3" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="464.91" y="175.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,139,035 samples, 0.19%)</title><rect x="223.9" y="357" width="2.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="226.92" y="367.5" ></text>
</g>
<g >
<title>_dl_lookup_symbol_x (874,825 samples, 0.15%)</title><rect x="18.1" y="437" width="1.7" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="21.05" y="447.5" ></text>
</g>
<g >
<title>lru_add_fn (840,966 samples, 0.14%)</title><rect x="24.1" y="293" width="1.7" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="27.09" y="303.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::basic_filebuf (2,327,223 samples, 0.39%)</title><rect x="50.4" y="453" width="4.7" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="53.40" y="463.5" ></text>
</g>
<g >
<title>try_to_unlazy (3,547,989 samples, 0.60%)</title><rect x="331.4" y="213" width="7.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="334.41" y="223.5" ></text>
</g>
<g >
<title>_dl_start (1,356,817 samples, 0.23%)</title><rect x="17.1" y="501" width="2.7" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="20.09" y="511.5" ></text>
</g>
<g >
<title>filemap_read (28,635,881 samples, 4.86%)</title><rect x="1041.4" y="229" width="57.3" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="1044.44" y="239.5" >filema..</text>
</g>
<g >
<title>unmap_page_range (1,241,588 samples, 0.21%)</title><rect x="28.3" y="293" width="2.5" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="31.32" y="303.5" ></text>
</g>
<g >
<title>load_elf_binary (105,027 samples, 0.02%)</title><rect x="16.9" y="357" width="0.2" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="19.88" y="367.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1,232,479 samples, 0.21%)</title><rect x="206.4" y="325" width="2.5" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="209.43" y="335.5" ></text>
</g>
<g >
<title>copy_page_to_iter (3,780,206 samples, 0.64%)</title><rect x="1058.3" y="213" width="7.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1061.28" y="223.5" ></text>
</g>
<g >
<title>_raw_spin_unlock (148,664 samples, 0.03%)</title><rect x="21.7" y="357" width="0.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="24.70" y="367.5" ></text>
</g>
<g >
<title>__rcu_read_lock (1,412,559 samples, 0.24%)</title><rect x="534.3" y="85" width="2.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="537.34" y="95.5" ></text>
</g>
<g >
<title>generic_file_read_iter (31,150,111 samples, 5.28%)</title><rect x="1039.2" y="245" width="62.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1042.17" y="255.5" >generi..</text>
</g>
<g >
<title>prepend (16,367,275 samples, 2.78%)</title><rect x="553.4" y="69" width="32.7" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="556.37" y="79.5" >pr..</text>
</g>
<g >
<title>do_vmi_munmap (1,241,588 samples, 0.21%)</title><rect x="28.3" y="373" width="2.5" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="31.32" y="383.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (105,027 samples, 0.02%)</title><rect x="16.9" y="437" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="19.88" y="447.5" ></text>
</g>
<g >
<title>security_file_free (3,258,693 samples, 0.55%)</title><rect x="181.1" y="293" width="6.5" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="184.06" y="303.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,151,777 samples, 0.20%)</title><rect x="1184.5" y="485" width="2.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1187.53" y="495.5" ></text>
</g>
<g >
<title>terminate_walk (3,748,875 samples, 0.64%)</title><rect x="781.7" y="245" width="7.5" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="784.66" y="255.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (2,292,421 samples, 0.39%)</title><rect x="1065.8" y="197" width="4.6" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1068.84" y="207.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (466,281 samples, 0.08%)</title><rect x="23.2" y="261" width="0.9" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="26.16" y="271.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (4,602,414 samples, 0.78%)</title><rect x="886.4" y="437" width="9.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="889.37" y="447.5" ></text>
</g>
<g >
<title>aa_capable (2,272,070 samples, 0.39%)</title><rect x="719.5" y="149" width="4.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="722.46" y="159.5" ></text>
</g>
<g >
<title>dget_parent (1,147,424 samples, 0.19%)</title><rect x="433.4" y="165" width="2.3" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="436.44" y="175.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (770,836 samples, 0.13%)</title><rect x="1186.8" y="309" width="1.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1189.83" y="319.5" ></text>
</g>
<g >
<title>alloc_pages_mpol (1,044,585 samples, 0.18%)</title><rect x="22.0" y="309" width="2.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="25.00" y="319.5" ></text>
</g>
<g >
<title>dget_parent (664,249 samples, 0.11%)</title><rect x="406.7" y="181" width="1.3" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="409.68" y="191.5" ></text>
</g>
<g >
<title>__check_object_size.part.0 (7,150,122 samples, 1.21%)</title><rect x="817.2" y="213" width="14.3" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="820.18" y="223.5" ></text>
</g>
<g >
<title>count_memcg_events.constprop.0 (483,386 samples, 0.08%)</title><rect x="20.7" y="405" width="1.0" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="23.74" y="415.5" ></text>
</g>
<g >
<title>__fput_sync (58,630,711 samples, 9.94%)</title><rect x="89.1" y="325" width="117.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="92.13" y="335.5" >__fput_sync</text>
</g>
<g >
<title>strncpy_from_user (9,440,176 samples, 1.60%)</title><rect x="812.6" y="245" width="18.9" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="815.60" y="255.5" ></text>
</g>
<g >
<title>malloc (2,292,695 samples, 0.39%)</title><rect x="875.8" y="405" width="4.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="878.80" y="415.5" ></text>
</g>
<g >
<title>path_openat (268,725,585 samples, 45.56%)</title><rect x="251.5" y="261" width="537.7" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="254.53" y="271.5" >path_openat</text>
</g>
<g >
<title>mmput (770,836 samples, 0.13%)</title><rect x="1186.8" y="405" width="1.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1189.83" y="415.5" ></text>
</g>
<g >
<title>unmap_single_vma (770,836 samples, 0.13%)</title><rect x="1186.8" y="341" width="1.6" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1189.83" y="351.5" ></text>
</g>
<g >
<title>mod_objcg_state (2,285,378 samples, 0.39%)</title><rect x="310.9" y="197" width="4.6" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="313.92" y="207.5" ></text>
</g>
<g >
<title>__close_nocancel (4,690,389 samples, 0.80%)</title><rect x="866.4" y="405" width="9.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="869.37" y="415.5" ></text>
</g>
<g >
<title>folio_batch_move_lru (840,966 samples, 0.14%)</title><rect x="24.1" y="309" width="1.7" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="27.09" y="319.5" ></text>
</g>
<g >
<title>getname (17,736,968 samples, 3.01%)</title><rect x="796.0" y="277" width="35.5" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="799.00" y="287.5" >get..</text>
</g>
<g >
<title>alloc_anon_folio (1,044,585 samples, 0.18%)</title><rect x="22.0" y="341" width="2.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="25.00" y="351.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsgetn (1,148,539 samples, 0.19%)</title><rect x="880.4" y="453" width="2.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="883.39" y="463.5" ></text>
</g>
<g >
<title>[unknown] (3,543,689 samples, 0.60%)</title><rect x="10.0" y="517" width="7.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::xsgetn (2,284,965 samples, 0.39%)</title><rect x="10.0" y="485" width="4.6" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (1,216,412 samples, 0.21%)</title><rect x="895.6" y="437" width="2.4" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="898.58" y="447.5" ></text>
</g>
<g >
<title>locks_remove_posix (1,146,771 samples, 0.19%)</title><rect x="214.7" y="325" width="2.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="217.74" y="335.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (72,745,107 samples, 12.33%)</title><rect x="71.5" y="389" width="145.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="74.49" y="399.5" >entry_SYSCALL_64_a..</text>
</g>
<g >
<title>srso_alias_safe_ret (2,514,929 samples, 0.43%)</title><rect x="743.9" y="229" width="5.0" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="746.89" y="239.5" ></text>
</g>
<g >
<title>__check_object_size (2,561,979 samples, 0.43%)</title><rect x="802.9" y="245" width="5.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="805.87" y="255.5" ></text>
</g>
<g >
<title>srso_alias_return_thunk (1,152,598 samples, 0.20%)</title><rect x="724.0" y="165" width="2.3" height="15.0" fill="rgb(241,167,39)" rx="2" ry="2" />
<text  x="727.00" y="175.5" ></text>
</g>
<g >
<title>do_user_addr_fault (3,611,554 samples, 0.61%)</title><rect x="20.7" y="421" width="7.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="23.74" y="431.5" ></text>
</g>
<g >
<title>kmem_cache_free (1,150,818 samples, 0.20%)</title><rect x="833.8" y="261" width="2.3" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="836.76" y="271.5" ></text>
</g>
<g >
<title>ext4_release_file (1,332,129 samples, 0.23%)</title><rect x="187.6" y="309" width="2.6" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="190.58" y="319.5" ></text>
</g>
<g >
<title>main (811,345 samples, 0.14%)</title><rect x="1188.4" y="517" width="1.6" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="1191.37" y="527.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (1,241,588 samples, 0.21%)</title><rect x="28.3" y="277" width="2.5" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="31.32" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (4,690,389 samples, 0.80%)</title><rect x="866.4" y="389" width="9.4" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="869.37" y="399.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (6,517,584 samples, 1.11%)</title><rect x="885.0" y="453" width="13.0" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="887.97" y="463.5" ></text>
</g>
<g >
<title>_IO_new_file_init_internal (1,131,425 samples, 0.19%)</title><rect x="864.1" y="405" width="2.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="867.11" y="415.5" ></text>
</g>
<g >
<title>fd_install (2,292,620 samples, 0.39%)</title><rect x="836.1" y="293" width="4.6" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="839.07" y="303.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (698,758 samples, 0.12%)</title><rect x="885.0" y="437" width="1.4" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="887.97" y="447.5" ></text>
</g>
<g >
<title>dquot_file_open (1,149,560 samples, 0.19%)</title><rect x="421.6" y="181" width="2.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="424.56" y="191.5" ></text>
</g>
<g >
<title>do_syscall_64 (72,745,107 samples, 12.33%)</title><rect x="71.5" y="373" width="145.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="74.49" y="383.5" >do_syscall_64</text>
</g>
<g >
<title>mutex_unlock (1,145,288 samples, 0.19%)</title><rect x="996.9" y="277" width="2.3" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="999.92" y="287.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::is_open (3,498,998 samples, 0.59%)</title><rect x="43.4" y="453" width="7.0" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="46.40" y="463.5" ></text>
</g>
<g >
<title>lru_gen_add_folio (840,966 samples, 0.14%)</title><rect x="24.1" y="277" width="1.7" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="27.09" y="287.5" ></text>
</g>
<g >
<title>__fput (49,204,626 samples, 8.34%)</title><rect x="89.1" y="309" width="98.5" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="92.13" y="319.5" >__fput</text>
</g>
<g >
<title>_raw_spin_lock_irq (1,151,777 samples, 0.20%)</title><rect x="1184.5" y="405" width="2.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1187.53" y="415.5" ></text>
</g>
<g >
<title>perf_iterate_sb.constprop.0 (95,486 samples, 0.02%)</title><rect x="16.9" y="229" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="19.88" y="239.5" ></text>
</g>
<g >
<title>bothOptimized (589,799,563 samples, 100.00%)</title><rect x="10.0" y="533" width="1180.0" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="13.00" y="543.5" >bothOptimized</text>
</g>
<g >
<title>__rcu_read_lock (3,372,138 samples, 0.57%)</title><rect x="397.3" y="181" width="6.8" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="400.34" y="191.5" ></text>
</g>
<g >
<title>rw_verify_area (31,488,875 samples, 5.34%)</title><rect x="1101.5" y="261" width="63.0" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="1104.49" y="271.5" >rw_ver..</text>
</g>
<g >
<title>exec_binprm (105,027 samples, 0.02%)</title><rect x="16.9" y="389" width="0.2" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="19.88" y="399.5" ></text>
</g>
<g >
<title>init_file (1,148,109 samples, 0.19%)</title><rect x="603.9" y="245" width="2.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="606.85" y="255.5" ></text>
</g>
<g >
<title>file_close_fd_locked (626,990 samples, 0.11%)</title><rect x="211.2" y="309" width="1.2" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="214.16" y="319.5" ></text>
</g>
<g >
<title>vfs_read (81,464,493 samples, 13.81%)</title><rect x="1001.5" y="277" width="163.0" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1004.50" y="287.5" >vfs_read</text>
</g>
<g >
<title>sigprocmask (1,151,777 samples, 0.20%)</title><rect x="1184.5" y="421" width="2.3" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1187.53" y="431.5" ></text>
</g>
<g >
<title>std::locale::~locale (1,462,802 samples, 0.25%)</title><rect x="1181.5" y="453" width="3.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1184.54" y="463.5" ></text>
</g>
<g >
<title>generic_permission (14,659,435 samples, 2.49%)</title><rect x="346.4" y="197" width="29.4" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="349.45" y="207.5" >ge..</text>
</g>
<g >
<title>step_into (574,276 samples, 0.10%)</title><rect x="773.2" y="229" width="1.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="776.17" y="239.5" ></text>
</g>
<g >
<title>ima_file_check (529,310 samples, 0.09%)</title><rect x="338.5" y="229" width="1.1" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="341.50" y="239.5" ></text>
</g>
<g >
<title>__close_nocancel (73,885,337 samples, 12.53%)</title><rect x="69.2" y="405" width="147.8" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="72.21" y="415.5" >__close_nocancel</text>
</g>
<g >
<title>do_syscall_64 (1,241,588 samples, 0.21%)</title><rect x="28.3" y="437" width="2.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="31.32" y="447.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1,142,482 samples, 0.19%)</title><rect x="945.4" y="357" width="2.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="948.44" y="367.5" ></text>
</g>
<g >
<title>apparmor_file_open (58,301,076 samples, 9.88%)</title><rect x="473.4" y="181" width="116.6" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="476.41" y="191.5" >apparmor_file_..</text>
</g>
<g >
<title>__memcg_slab_free_hook (9,494,990 samples, 1.61%)</title><rect x="148.3" y="277" width="19.0" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="151.33" y="287.5" ></text>
</g>
<g >
<title>prepend_copy (12,927,152 samples, 2.19%)</title><rect x="560.3" y="53" width="25.8" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="563.25" y="63.5" >p..</text>
</g>
<g >
<title>security_file_permission (5,823,962 samples, 0.99%)</title><rect x="1152.8" y="245" width="11.7" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="1155.83" y="255.5" ></text>
</g>
<g >
<title>start_thread (583,316,876 samples, 98.90%)</title><rect x="19.8" y="501" width="1167.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="22.80" y="511.5" >start_thread</text>
</g>
<g >
<title>x64_sys_call (99,891,071 samples, 16.94%)</title><rect x="964.6" y="325" width="199.9" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="967.64" y="335.5" >x64_sys_call</text>
</g>
<g >
<title>_dl_check_all_versions (481,992 samples, 0.08%)</title><rect x="17.1" y="421" width="1.0" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="20.09" y="431.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1,332,129 samples, 0.23%)</title><rect x="187.6" y="293" width="2.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="190.58" y="303.5" ></text>
</g>
<g >
<title>aa_str_perms (11,853,207 samples, 2.01%)</title><rect x="493.5" y="133" width="23.7" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="496.51" y="143.5" >a..</text>
</g>
<g >
<title>all (589,800,694 samples, 100%)</title><rect x="10.0" y="549" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>x64_sys_call (105,027 samples, 0.02%)</title><rect x="16.9" y="469" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="19.88" y="479.5" ></text>
</g>
<g >
<title>do_sys_openat2 (1,148,408 samples, 0.19%)</title><rect x="850.2" y="309" width="2.3" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="853.21" y="319.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (770,836 samples, 0.13%)</title><rect x="1186.8" y="469" width="1.6" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1189.83" y="479.5" ></text>
</g>
<g >
<title>generic_file_open (1,149,560 samples, 0.19%)</title><rect x="421.6" y="165" width="2.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="424.56" y="175.5" ></text>
</g>
<g >
<title>lockref_put_return (1,153,218 samples, 0.20%)</title><rect x="471.1" y="165" width="2.3" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="474.10" y="175.5" ></text>
</g>
<g >
<title>mntput (2,265,612 samples, 0.38%)</title><rect x="176.5" y="293" width="4.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="179.52" y="303.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (4,256,310 samples, 0.72%)</title><rect x="19.8" y="469" width="8.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="22.80" y="479.5" ></text>
</g>
<g >
<title>unmap_vmas (1,241,588 samples, 0.21%)</title><rect x="28.3" y="325" width="2.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="31.32" y="335.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (2,284,965 samples, 0.39%)</title><rect x="10.0" y="453" width="4.6" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1,332,129 samples, 0.23%)</title><rect x="187.6" y="261" width="2.6" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="190.58" y="271.5" ></text>
</g>
<g >
<title>privileged_wrt_inode_uidgid (1,540,020 samples, 0.26%)</title><rect x="730.9" y="197" width="3.1" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="733.91" y="207.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (1,241,588 samples, 0.21%)</title><rect x="28.3" y="405" width="2.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="31.32" y="415.5" ></text>
</g>
<g >
<title>lockref_get_not_zero (664,249 samples, 0.11%)</title><rect x="406.7" y="165" width="1.3" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="409.68" y="175.5" ></text>
</g>
<g >
<title>_dl_receive_error (481,992 samples, 0.08%)</title><rect x="17.1" y="453" width="1.0" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="20.09" y="463.5" ></text>
</g>
<g >
<title>prepend_path (25,273,402 samples, 4.29%)</title><rect x="537.2" y="85" width="50.5" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="540.17" y="95.5" >prepe..</text>
</g>
<g >
<title>__memset (1,151,078 samples, 0.20%)</title><rect x="265.9" y="229" width="2.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="268.89" y="239.5" ></text>
</g>
<g >
<title>std::istream::sentry::sentry (1,146,227 samples, 0.19%)</title><rect x="1179.3" y="437" width="2.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1182.25" y="447.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode_prepare (787,148 samples, 0.13%)</title><rect x="78.4" y="341" width="1.6" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="81.39" y="351.5" ></text>
</g>
<g >
<title>aa_label_next_confined (905,922 samples, 0.15%)</title><rect x="519.8" y="149" width="1.9" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="522.84" y="159.5" ></text>
</g>
<g >
<title>_dl_relocate_object (874,825 samples, 0.15%)</title><rect x="18.1" y="453" width="1.7" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="21.05" y="463.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsgetn (137,115,196 samples, 23.25%)</title><rect x="904.9" y="437" width="274.4" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="907.93" y="447.5" >std::basic_filebuf&lt;char, std::char_t..</text>
</g>
<g >
<title>do_sys_openat2 (299,075,446 samples, 50.71%)</title><rect x="237.7" y="293" width="598.4" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="240.71" y="303.5" >do_sys_openat2</text>
</g>
<g >
<title>__fput_sync (3,440,291 samples, 0.58%)</title><rect x="82.3" y="341" width="6.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="85.25" y="351.5" ></text>
</g>
<g >
<title>lookup_fast (1,684,825 samples, 0.29%)</title><rect x="769.8" y="229" width="3.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="772.80" y="239.5" ></text>
</g>
<g >
<title>__d_lookup_rcu (1,684,825 samples, 0.29%)</title><rect x="769.8" y="213" width="3.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="772.80" y="223.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (1,144,514 samples, 0.19%)</title><rect x="1170.3" y="357" width="2.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1173.32" y="367.5" ></text>
</g>
<g >
<title>_dl_check_map_versions (481,992 samples, 0.08%)</title><rect x="17.1" y="405" width="1.0" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="20.09" y="415.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (2,347,523 samples, 0.40%)</title><rect x="114.2" y="277" width="4.7" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="117.17" y="287.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (1,295,905 samples, 0.22%)</title><rect x="404.1" y="181" width="2.6" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="407.08" y="191.5" ></text>
</g>
<g >
<title>copy_from_kernel_nofault (9,475,923 samples, 1.61%)</title><rect x="564.9" y="37" width="18.9" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="567.86" y="47.5" ></text>
</g>
<g >
<title>do_anonymous_page (1,885,551 samples, 0.32%)</title><rect x="22.0" y="357" width="3.8" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="25.00" y="367.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (111,259,366 samples, 18.86%)</title><rect x="947.7" y="357" width="222.6" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="950.73" y="367.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>xas_load (1,497,005 samples, 0.25%)</title><rect x="1079.2" y="181" width="3.0" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1082.17" y="191.5" ></text>
</g>
<g >
<title>do_mmap (95,486 samples, 0.02%)</title><rect x="16.9" y="293" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="19.88" y="303.5" ></text>
</g>
<g >
<title>__fsnotify_parent (11,772,046 samples, 2.00%)</title><rect x="449.9" y="181" width="23.5" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="452.85" y="191.5" >_..</text>
</g>
<g >
<title>step_into (2,613,953 samples, 0.44%)</title><rect x="760.0" y="213" width="5.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="762.97" y="223.5" ></text>
</g>
<g >
<title>security_file_open (1,142,942 samples, 0.19%)</title><rect x="599.3" y="213" width="2.3" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="602.27" y="223.5" ></text>
</g>
<g >
<title>unmap_region (1,241,588 samples, 0.21%)</title><rect x="28.3" y="341" width="2.5" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="31.32" y="351.5" ></text>
</g>
<g >
<title>dget_parent (4,583,053 samples, 0.78%)</title><rect x="1123.6" y="229" width="9.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1126.63" y="239.5" ></text>
</g>
<g >
<title>__memset (1,141,143 samples, 0.19%)</title><rect x="284.9" y="197" width="2.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="287.87" y="207.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (1,143,484 samples, 0.19%)</title><rect x="999.2" y="277" width="2.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1002.21" y="287.5" ></text>
</g>
<g >
<title>lockref_put_return (1,143,531 samples, 0.19%)</title><rect x="414.4" y="181" width="2.2" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="417.35" y="191.5" ></text>
</g>
<g >
<title>do_syscall_64 (313,046,364 samples, 53.08%)</title><rect x="226.2" y="341" width="626.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="229.20" y="351.5" >do_syscall_64</text>
</g>
<g >
<title>fsnotify (2,290,440 samples, 0.39%)</title><rect x="1141.9" y="229" width="4.6" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1144.94" y="239.5" ></text>
</g>
<g >
<title>kmem_cache_free (1,933,170 samples, 0.33%)</title><rect x="183.7" y="277" width="3.9" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="186.71" y="287.5" ></text>
</g>
<g >
<title>__fdget_pos (5,579,311 samples, 0.95%)</title><rect x="983.5" y="277" width="11.1" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="986.46" y="287.5" ></text>
</g>
<g >
<title>x64_sys_call (1,151,777 samples, 0.20%)</title><rect x="1184.5" y="453" width="2.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1187.53" y="463.5" ></text>
</g>
<g >
<title>lockref_put_return (1,145,422 samples, 0.19%)</title><rect x="132.2" y="277" width="2.3" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="135.21" y="287.5" ></text>
</g>
<g >
<title>putname (2,291,116 samples, 0.39%)</title><rect x="831.5" y="277" width="4.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="834.48" y="287.5" ></text>
</g>
<g >
<title>step_into (1,153,130 samples, 0.20%)</title><rect x="748.9" y="229" width="2.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="751.92" y="239.5" ></text>
</g>
<g >
<title>_IO_file_fopen@@GLIBC_2.2.5 (322,278,598 samples, 54.64%)</title><rect x="219.3" y="405" width="644.8" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="222.33" y="415.5" >_IO_file_fopen@@GLIBC_2.2.5</text>
</g>
<g >
<title>obj_cgroup_charge (2,290,758 samples, 0.39%)</title><rect x="317.6" y="229" width="4.6" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="320.62" y="239.5" ></text>
</g>
<g >
<title>elf_load (95,486 samples, 0.02%)</title><rect x="16.9" y="341" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="19.88" y="351.5" ></text>
</g>
<g >
<title>vfs_open (111,483,434 samples, 18.90%)</title><rect x="378.5" y="229" width="223.1" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="381.51" y="239.5" >vfs_open</text>
</g>
<g >
<title>exc_page_fault (3,612,971 samples, 0.61%)</title><rect x="20.7" y="437" width="7.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="23.74" y="447.5" ></text>
</g>
<g >
<title>complete_walk (4,695,777 samples, 0.80%)</title><rect x="329.1" y="229" width="9.4" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="332.11" y="239.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (1,148,728 samples, 0.19%)</title><rect x="810.3" y="245" width="2.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="813.30" y="255.5" ></text>
</g>
<g >
<title>d_namespace_path.constprop.0 (28,979,818 samples, 4.91%)</title><rect x="529.8" y="117" width="57.9" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="532.75" y="127.5" >d_name..</text>
</g>
<g >
<title>mmap_region (95,486 samples, 0.02%)</title><rect x="16.9" y="277" width="0.2" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="19.88" y="287.5" ></text>
</g>
<g >
<title>dput (1,151,713 samples, 0.20%)</title><rect x="784.0" y="229" width="2.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="787.05" y="239.5" ></text>
</g>
<g >
<title>mas_walk (451,259 samples, 0.08%)</title><rect x="27.1" y="405" width="0.9" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="30.06" y="415.5" ></text>
</g>
<g >
<title>security_inode_permission (1,367,697 samples, 0.23%)</title><rect x="375.8" y="197" width="2.7" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="378.77" y="207.5" ></text>
</g>
<g >
<title>handle_mm_fault (2,676,909 samples, 0.45%)</title><rect x="21.7" y="405" width="5.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="24.70" y="415.5" ></text>
</g>
<g >
<title>__virt_addr_valid (2,297,645 samples, 0.39%)</title><rect x="817.2" y="197" width="4.6" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="820.18" y="207.5" ></text>
</g>
<g >
<title>unmap_page_range (770,836 samples, 0.13%)</title><rect x="1186.8" y="325" width="1.6" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1189.83" y="335.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsgetn (133,410,230 samples, 22.62%)</title><rect x="912.3" y="421" width="267.0" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="915.34" y="431.5" >std::basic_streambuf&lt;char, std::cha..</text>
</g>
<g >
<title>ext4_file_read_iter (1,150,505 samples, 0.20%)</title><rect x="994.6" y="277" width="2.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="997.62" y="287.5" ></text>
</g>
<g >
<title>dl_main (1,356,817 samples, 0.23%)</title><rect x="17.1" y="469" width="2.7" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="20.09" y="479.5" ></text>
</g>
<g >
<title>lockref_put_return (3,152,568 samples, 0.53%)</title><rect x="1146.5" y="229" width="6.3" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="1149.53" y="239.5" ></text>
</g>
<g >
<title>x64_sys_call (309,579,075 samples, 52.49%)</title><rect x="233.1" y="325" width="619.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="236.14" y="335.5" >x64_sys_call</text>
</g>
<g >
<title>_copy_to_iter (3,780,206 samples, 0.64%)</title><rect x="1058.3" y="197" width="7.5" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1061.28" y="207.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (10,659,336 samples, 1.81%)</title><rect x="296.3" y="229" width="21.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="299.30" y="239.5" >k..</text>
</g>
<g >
<title>xas_start (1,497,005 samples, 0.25%)</title><rect x="1079.2" y="165" width="3.0" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1082.17" y="175.5" ></text>
</g>
<g >
<title>hook_file_alloc_security (1,224,265 samples, 0.21%)</title><rect x="277.4" y="213" width="2.4" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="280.39" y="223.5" ></text>
</g>
<g >
<title>kmem_cache_free (12,950,505 samples, 2.20%)</title><rect x="143.7" y="293" width="25.9" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="146.74" y="303.5" >k..</text>
</g>
<g >
<title>__GI___pthread_enable_asynccancel (1,147,612 samples, 0.19%)</title><rect x="933.6" y="373" width="2.3" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="936.64" y="383.5" ></text>
</g>
<g >
<title>bprm_execve.part.0 (105,027 samples, 0.02%)</title><rect x="16.9" y="405" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="19.88" y="415.5" ></text>
</g>
<g >
<title>mntput_no_expire (2,265,612 samples, 0.38%)</title><rect x="176.5" y="277" width="4.6" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="179.52" y="287.5" ></text>
</g>
<g >
<title>dget_parent (4,182,664 samples, 0.71%)</title><rect x="118.9" y="277" width="8.3" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="121.87" y="287.5" ></text>
</g>
<g >
<title>_int_malloc (1,146,343 samples, 0.19%)</title><rect x="878.1" y="389" width="2.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="881.10" y="399.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::close (78,660,935 samples, 13.34%)</title><rect x="59.7" y="437" width="157.3" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="62.65" y="447.5" >std::__basic_file&lt;ch..</text>
</g>
</g>
</svg>
