<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="694" onload="init(evt)" viewBox="0 0 1200 694" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="694.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="677" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="677" > </text>
<g id="frames">
<g >
<title>__GI___libc_open (543,229,221 samples, 52.82%)</title><rect x="64.1" y="437" width="623.3" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="67.12" y="447.5" >__GI___libc_open</text>
</g>
<g >
<title>security_file_open (136,435,092 samples, 13.27%)</title><rect x="338.1" y="261" width="156.5" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="341.09" y="271.5" >security_file_open</text>
</g>
<g >
<title>x64_sys_call (194,352,028 samples, 18.90%)</title><rect x="937.1" y="421" width="223.0" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="940.11" y="431.5" >x64_sys_call</text>
</g>
<g >
<title>aa_get_buffer (4,555,935 samples, 0.44%)</title><rect x="419.5" y="213" width="5.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="422.52" y="223.5" ></text>
</g>
<g >
<title>x64_sys_call (878,240 samples, 0.09%)</title><rect x="681.0" y="405" width="1.0" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="684.00" y="415.5" ></text>
</g>
<g >
<title>aa_str_perms (8,497,189 samples, 0.83%)</title><rect x="409.8" y="197" width="9.7" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="412.77" y="207.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (2,190,150 samples, 0.21%)</title><rect x="356.0" y="149" width="2.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="358.97" y="159.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (1,145,716 samples, 0.11%)</title><rect x="1106.0" y="325" width="1.4" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1109.04" y="335.5" ></text>
</g>
<g >
<title>lockref_put_return (2,188,501 samples, 0.21%)</title><rect x="1127.5" y="325" width="2.5" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="1130.53" y="335.5" ></text>
</g>
<g >
<title>call_init.part.0 (630,232 samples, 0.06%)</title><rect x="23.1" y="581" width="0.7" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="26.12" y="591.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (2,190,150 samples, 0.21%)</title><rect x="356.0" y="133" width="2.5" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="358.97" y="143.5" ></text>
</g>
<g >
<title>_IO_file_close_it@@GLIBC_2.2.5 (5,954,366 samples, 0.58%)</title><rect x="725.0" y="469" width="6.8" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="727.97" y="479.5" ></text>
</g>
<g >
<title>read (2,443,065 samples, 0.24%)</title><rect x="10.0" y="549" width="2.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsgetn (249,550,058 samples, 24.27%)</title><rect x="893.2" y="517" width="286.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="896.21" y="527.5" >std::basic_filebuf&lt;char, std::char_tra..</text>
</g>
<g >
<title>alloc_empty_file (58,696,148 samples, 5.71%)</title><rect x="120.0" y="309" width="67.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="123.00" y="319.5" >alloc_e..</text>
</g>
<g >
<title>open_last_lookups (6,004,531 samples, 0.58%)</title><rect x="572.6" y="309" width="6.9" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="575.57" y="319.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (2,555,504 samples, 0.25%)</title><rect x="586.4" y="309" width="2.9" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="589.38" y="319.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode_prepare (2,185,985 samples, 0.21%)</title><rect x="934.6" y="421" width="2.5" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="937.60" y="431.5" ></text>
</g>
<g >
<title>malloc (4,328,524 samples, 0.42%)</title><rect x="693.8" y="469" width="4.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="696.77" y="479.5" ></text>
</g>
<g >
<title>getname_flags.part.0 (39,345,638 samples, 3.83%)</title><rect x="623.2" y="325" width="45.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="626.20" y="335.5" >getn..</text>
</g>
<g >
<title>entry_SYSCALL_64 (2,297,805 samples, 0.22%)</title><rect x="911.4" y="453" width="2.6" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="914.39" y="463.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (56,338,818 samples, 5.48%)</title><rect x="504.0" y="309" width="64.7" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="507.02" y="319.5" >link_pa..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (107,556,011 samples, 10.46%)</title><rect x="740.6" y="453" width="123.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="743.60" y="463.5" >entry_SYSCALL_6..</text>
</g>
<g >
<title>get_cached_acl_rcu (2,190,471 samples, 0.21%)</title><rect x="549.8" y="277" width="2.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="552.78" y="287.5" ></text>
</g>
<g >
<title>vfs_read (178,753,787 samples, 17.38%)</title><rect x="955.0" y="373" width="205.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="958.00" y="383.5" >vfs_read</text>
</g>
<g >
<title>[unknown] (11,433,541 samples, 1.11%)</title><rect x="10.0" y="613" width="13.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="623.5" ></text>
</g>
<g >
<title>mntput_no_expire (3,613,997 samples, 0.35%)</title><rect x="818.4" y="341" width="4.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="821.40" y="351.5" ></text>
</g>
<g >
<title>_dl_map_object_from_fd (103,248 samples, 0.01%)</title><rect x="23.8" y="485" width="0.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="26.84" y="495.5" ></text>
</g>
<g >
<title>apparmor_file_free_security (1,144,976 samples, 0.11%)</title><rect x="792.2" y="357" width="1.3" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="795.17" y="367.5" ></text>
</g>
<g >
<title>_find_next_bit (2,190,150 samples, 0.21%)</title><rect x="356.0" y="37" width="2.5" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="358.97" y="47.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1,142,830 samples, 0.11%)</title><rect x="910.1" y="405" width="1.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="913.08" y="415.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (2,181,514 samples, 0.21%)</title><rect x="617.7" y="325" width="2.5" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="620.71" y="335.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (103,248 samples, 0.01%)</title><rect x="23.8" y="405" width="0.2" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="26.84" y="415.5" ></text>
</g>
<g >
<title>_dl_catch_exception (103,248 samples, 0.01%)</title><rect x="23.8" y="533" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="26.84" y="543.5" ></text>
</g>
<g >
<title>std::basic_ifstream&lt;char, std::char_traits&lt;char&gt; &gt;::basic_ifstream (583,747,568 samples, 56.76%)</title><rect x="35.9" y="533" width="669.7" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="38.86" y="543.5" >std::basic_ifstream&lt;char, std::char_traits&lt;char&gt; &gt;::basic_ifstream</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1,142,830 samples, 0.11%)</title><rect x="910.1" y="437" width="1.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="913.08" y="447.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (5,454,584 samples, 0.53%)</title><rect x="352.2" y="229" width="6.3" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="355.23" y="239.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2,156,368 samples, 0.21%)</title><rect x="793.5" y="357" width="2.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="796.48" y="367.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::xsgetn (6,678,014 samples, 0.65%)</title><rect x="1171.9" y="469" width="7.6" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1174.88" y="479.5" ></text>
</g>
<g >
<title>do_syscall_64 (208,162,315 samples, 20.24%)</title><rect x="921.3" y="437" width="238.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="924.26" y="447.5" >do_syscall_64</text>
</g>
<g >
<title>std::istream::read (259,368,537 samples, 25.22%)</title><rect x="885.7" y="533" width="297.6" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="888.66" y="543.5" >std::istream::read</text>
</g>
<g >
<title>fsnotify (4,368,124 samples, 0.42%)</title><rect x="291.4" y="245" width="5.0" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="294.37" y="255.5" ></text>
</g>
<g >
<title>__check_object_size.part.0 (11,032,772 samples, 1.07%)</title><rect x="655.7" y="277" width="12.6" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="658.69" y="287.5" ></text>
</g>
<g >
<title>xas_start (2,195,469 samples, 0.21%)</title><rect x="1036.0" y="277" width="2.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1039.01" y="287.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (3,727,571 samples, 0.36%)</title><rect x="742.4" y="421" width="4.3" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="745.42" y="431.5" ></text>
</g>
<g >
<title>strncpy_from_user (14,396,487 samples, 1.40%)</title><rect x="651.8" y="309" width="16.5" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="654.83" y="319.5" ></text>
</g>
<g >
<title>operator new (4,328,524 samples, 0.42%)</title><rect x="693.8" y="485" width="4.9" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="696.77" y="495.5" ></text>
</g>
<g >
<title>generic_permission (25,045,774 samples, 2.44%)</title><rect x="521.0" y="277" width="28.8" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="524.04" y="287.5" >ge..</text>
</g>
<g >
<title>x64_sys_call (100,185,901 samples, 9.74%)</title><rect x="746.7" y="421" width="114.9" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="749.70" y="431.5" >x64_sys_call</text>
</g>
<g >
<title>_dl_sysdep_start (1,979,483 samples, 0.19%)</title><rect x="23.8" y="581" width="2.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="26.84" y="591.5" ></text>
</g>
<g >
<title>update_wall_time (2,156,368 samples, 0.21%)</title><rect x="793.5" y="229" width="2.5" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="796.48" y="239.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::underflow (2,443,065 samples, 0.24%)</title><rect x="10.0" y="565" width="2.8" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="13.00" y="575.5" ></text>
</g>
<g >
<title>_start (1,014,375,410 samples, 98.63%)</title><rect x="26.1" y="613" width="1163.9" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="29.11" y="623.5" >_start</text>
</g>
<g >
<title>syscall_exit_to_user_mode (2,183,526 samples, 0.21%)</title><rect x="1160.1" y="437" width="2.5" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1163.10" y="447.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (2,188,345 samples, 0.21%)</title><rect x="677.3" y="357" width="2.5" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="680.29" y="367.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (1,142,830 samples, 0.11%)</title><rect x="910.1" y="373" width="1.3" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="913.08" y="383.5" ></text>
</g>
<g >
<title>_dl_start (1,979,483 samples, 0.19%)</title><rect x="23.8" y="597" width="2.3" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="26.84" y="607.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (10,002,711 samples, 0.97%)</title><rect x="923.1" y="421" width="11.5" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="926.12" y="431.5" ></text>
</g>
<g >
<title>apparmor_file_permission (4,288,406 samples, 0.42%)</title><rect x="1130.0" y="341" width="5.0" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1133.04" y="351.5" ></text>
</g>
<g >
<title>do_filp_open (447,532,578 samples, 43.52%)</title><rect x="95.3" y="341" width="513.5" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="98.32" y="351.5" >do_filp_open</text>
</g>
<g >
<title>atime_needs_update (18,582,369 samples, 1.81%)</title><rect x="1044.7" y="293" width="21.3" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1047.66" y="303.5" >a..</text>
</g>
<g >
<title>prepend_copy (19,533,732 samples, 1.90%)</title><rect x="464.5" y="117" width="22.4" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="467.50" y="127.5" >p..</text>
</g>
<g >
<title>srso_alias_safe_ret (981,671 samples, 0.10%)</title><rect x="552.8" y="293" width="1.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="555.79" y="303.5" ></text>
</g>
<g >
<title>init_file (28,770,195 samples, 2.80%)</title><rect x="129.0" y="293" width="33.0" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="132.02" y="303.5" >in..</text>
</g>
<g >
<title>mntput (3,609,222 samples, 0.35%)</title><rect x="601.8" y="293" width="4.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="604.82" y="303.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::clear (1,387,154 samples, 0.13%)</title><rect x="878.8" y="533" width="1.6" height="15.0" fill="rgb(220,71,16)" rx="2" ry="2" />
<text  x="881.77" y="543.5" ></text>
</g>
<g >
<title>__GI___libc_open (8,973,599 samples, 0.87%)</title><rect x="12.8" y="549" width="10.3" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="15.80" y="559.5" ></text>
</g>
<g >
<title>_int_free (1,958,870 samples, 0.19%)</title><rect x="870.8" y="453" width="2.3" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="873.82" y="463.5" ></text>
</g>
<g >
<title>do_sys_openat2 (507,070,980 samples, 49.31%)</title><rect x="92.8" y="357" width="581.8" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="95.81" y="367.5" >do_sys_openat2</text>
</g>
<g >
<title>do_syscall_64 (103,248 samples, 0.01%)</title><rect x="23.8" y="437" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="26.84" y="447.5" ></text>
</g>
<g >
<title>copy_from_kernel_nofault_allowed (3,333,475 samples, 0.32%)</title><rect x="483.1" y="85" width="3.8" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="486.09" y="95.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (4,391,895 samples, 0.43%)</title><rect x="1166.8" y="453" width="5.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1169.84" y="463.5" ></text>
</g>
<g >
<title>handle_dots (7,196,952 samples, 0.70%)</title><rect x="560.4" y="277" width="8.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="563.41" y="287.5" ></text>
</g>
<g >
<title>ktime_get_coarse_real_ts64 (1,148,717 samples, 0.11%)</title><rect x="1064.7" y="261" width="1.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1067.67" y="271.5" ></text>
</g>
<g >
<title>apparmor_file_free_security (2,174,019 samples, 0.21%)</title><rect x="827.6" y="341" width="2.5" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="830.58" y="351.5" ></text>
</g>
<g >
<title>ext4_release_file (1,510,281 samples, 0.15%)</title><rect x="806.0" y="357" width="1.7" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="809.00" y="367.5" ></text>
</g>
<g >
<title>__legitimize_path (7,739,735 samples, 0.75%)</title><rect x="204.6" y="261" width="8.9" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="207.59" y="271.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (2,191,009 samples, 0.21%)</title><rect x="813.6" y="341" width="2.5" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="816.62" y="351.5" ></text>
</g>
<g >
<title>__x64_sys_openat (517,421,099 samples, 50.31%)</title><rect x="86.1" y="373" width="593.7" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="89.12" y="383.5" >__x64_sys_openat</text>
</g>
<g >
<title>touch_atime (26,127,021 samples, 2.54%)</title><rect x="1038.5" y="309" width="30.0" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1041.52" y="319.5" >to..</text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::xsgetn (8,973,599 samples, 0.87%)</title><rect x="12.8" y="581" width="10.3" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="15.80" y="591.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2,190,150 samples, 0.21%)</title><rect x="356.0" y="213" width="2.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="358.97" y="223.5" ></text>
</g>
<g >
<title>__rcu_read_lock (1,536,289 samples, 0.15%)</title><rect x="985.2" y="325" width="1.7" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="988.18" y="335.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsgetn (2,140,341 samples, 0.21%)</title><rect x="33.4" y="533" width="2.5" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="36.40" y="543.5" ></text>
</g>
<g >
<title>mntput (3,613,997 samples, 0.35%)</title><rect x="818.4" y="357" width="4.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="821.40" y="367.5" ></text>
</g>
<g >
<title>fsnotify (2,201,319 samples, 0.21%)</title><rect x="1135.0" y="341" width="2.5" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1137.96" y="351.5" ></text>
</g>
<g >
<title>x64_sys_call (2,184,746 samples, 0.21%)</title><rect x="1162.6" y="437" width="2.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1165.61" y="447.5" ></text>
</g>
<g >
<title>dput (11,258,138 samples, 1.09%)</title><rect x="1112.4" y="325" width="12.9" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1115.36" y="335.5" ></text>
</g>
<g >
<title>__xas_next (1,119,122 samples, 0.11%)</title><rect x="1029.6" y="277" width="1.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="1032.56" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (2,185,753 samples, 0.21%)</title><rect x="53.0" y="469" width="2.5" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="55.96" y="479.5" ></text>
</g>
<g >
<title>__fsnotify_parent (38,986,258 samples, 3.79%)</title><rect x="1085.3" y="341" width="44.7" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="1088.31" y="351.5" >__fs..</text>
</g>
<g >
<title>path_init (6,025,441 samples, 0.59%)</title><rect x="579.5" y="309" width="6.9" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="582.46" y="319.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::open (571,945,782 samples, 55.61%)</title><rect x="42.5" y="517" width="656.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="45.49" y="527.5" >std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::open</text>
</g>
<g >
<title>entry_SYSCALL_64 (2,373,771 samples, 0.23%)</title><rect x="50.2" y="469" width="2.8" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="53.23" y="479.5" ></text>
</g>
<g >
<title>trigger_load_balance (2,190,150 samples, 0.21%)</title><rect x="356.0" y="69" width="2.5" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="358.97" y="79.5" ></text>
</g>
<g >
<title>fsnotify (1,571,129 samples, 0.15%)</title><rect x="369.3" y="229" width="1.8" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="372.34" y="239.5" ></text>
</g>
<g >
<title>_IO_new_file_init_internal (2,201,072 samples, 0.21%)</title><rect x="691.2" y="469" width="2.6" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="694.25" y="479.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::close (144,274,462 samples, 14.03%)</title><rect x="710.4" y="517" width="165.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="713.43" y="527.5" >std::basic_filebuf&lt;ch..</text>
</g>
<g >
<title>__rcu_read_lock (4,351,300 samples, 0.42%)</title><rect x="1101.0" y="325" width="5.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1104.05" y="335.5" ></text>
</g>
<g >
<title>apparmor_file_permission (16,647,138 samples, 1.62%)</title><rect x="1138.5" y="325" width="19.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1141.50" y="335.5" ></text>
</g>
<g >
<title>xas_start (3,329,401 samples, 0.32%)</title><rect x="1032.2" y="261" width="3.8" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1035.19" y="271.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (862,572 samples, 0.08%)</title><rect x="1165.1" y="453" width="1.0" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1168.12" y="463.5" ></text>
</g>
<g >
<title>kmem_cache_free (7,313,659 samples, 0.71%)</title><rect x="807.7" y="357" width="8.4" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="810.74" y="367.5" ></text>
</g>
<g >
<title>lockref_get_not_zero (5,805,675 samples, 0.56%)</title><rect x="362.7" y="213" width="6.6" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="365.67" y="223.5" ></text>
</g>
<g >
<title>main (1,014,375,410 samples, 98.63%)</title><rect x="26.1" y="565" width="1163.9" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="29.11" y="575.5" >main</text>
</g>
<g >
<title>__hrtimer_run_queues (2,156,368 samples, 0.21%)</title><rect x="793.5" y="293" width="2.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="796.48" y="303.5" ></text>
</g>
<g >
<title>x64_sys_call (517,421,099 samples, 50.31%)</title><rect x="86.1" y="389" width="593.7" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="89.12" y="399.5" >x64_sys_call</text>
</g>
<g >
<title>security_file_free (11,391,933 samples, 1.11%)</title><rect x="822.5" y="357" width="13.1" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="825.55" y="367.5" ></text>
</g>
<g >
<title>operator new[] (1,830,085 samples, 0.18%)</title><rect x="45.6" y="501" width="2.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="48.61" y="511.5" ></text>
</g>
<g >
<title>fscrypt_file_open (22,771,954 samples, 2.21%)</title><rect x="308.2" y="245" width="26.1" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="311.16" y="255.5" >f..</text>
</g>
<g >
<title>update_process_times (2,190,150 samples, 0.21%)</title><rect x="356.0" y="101" width="2.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="358.97" y="111.5" ></text>
</g>
<g >
<title>_dl_relocate_object (1,876,235 samples, 0.18%)</title><rect x="24.0" y="549" width="2.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="26.96" y="559.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1,566,299 samples, 0.15%)</title><rect x="558.6" y="261" width="1.8" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="561.61" y="271.5" ></text>
</g>
<g >
<title>__fsnotify_parent (23,573,072 samples, 2.29%)</title><rect x="346.5" y="245" width="27.0" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="349.48" y="255.5" >_..</text>
</g>
<g >
<title>_dl_lookup_symbol_x (630,232 samples, 0.06%)</title><rect x="23.1" y="501" width="0.7" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="26.12" y="511.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1,142,830 samples, 0.11%)</title><rect x="910.1" y="389" width="1.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="913.08" y="399.5" ></text>
</g>
<g >
<title>vfs_open (305,726 samples, 0.03%)</title><rect x="606.0" y="309" width="0.3" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="608.97" y="319.5" ></text>
</g>
<g >
<title>make_vfsgid (2,195,700 samples, 0.21%)</title><rect x="1066.0" y="293" width="2.5" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1068.98" y="303.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (2,523,679 samples, 0.25%)</title><rect x="873.1" y="485" width="2.9" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="876.07" y="495.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (3,863,835 samples, 0.38%)</title><rect x="698.7" y="501" width="4.5" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="701.74" y="511.5" ></text>
</g>
<g >
<title>__check_object_size (11,032,772 samples, 1.07%)</title><rect x="655.7" y="293" width="12.6" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="658.69" y="303.5" ></text>
</g>
<g >
<title>try_to_unlazy (15,735,906 samples, 1.53%)</title><rect x="198.3" y="277" width="18.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="201.30" y="287.5" ></text>
</g>
<g >
<title>open_last_lookups (3,010,036 samples, 0.29%)</title><rect x="111.0" y="325" width="3.5" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="114.05" y="335.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (7,163,124 samples, 0.70%)</title><rect x="12.8" y="533" width="8.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="15.80" y="543.5" ></text>
</g>
<g >
<title>__fput_sync (272,980 samples, 0.03%)</title><rect x="746.7" y="405" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="749.70" y="415.5" ></text>
</g>
<g >
<title>get_unused_fd_flags (803,505 samples, 0.08%)</title><rect x="674.6" y="357" width="0.9" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="677.61" y="367.5" ></text>
</g>
<g >
<title>walk_component (12,853,121 samples, 1.25%)</title><rect x="553.9" y="293" width="14.8" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="556.92" y="303.5" ></text>
</g>
<g >
<title>[unknown] (11,416,664 samples, 1.11%)</title><rect x="10.0" y="597" width="13.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="607.5" ></text>
</g>
<g >
<title>generic_file_read_iter (62,213,026 samples, 6.05%)</title><rect x="999.6" y="341" width="71.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1002.63" y="351.5" >generic_..</text>
</g>
<g >
<title>mmap_region (103,248 samples, 0.01%)</title><rect x="23.8" y="341" width="0.2" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="26.84" y="351.5" ></text>
</g>
<g >
<title>__rcu_read_lock (2,113,921 samples, 0.21%)</title><rect x="811.2" y="341" width="2.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="814.19" y="351.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (1,566,299 samples, 0.15%)</title><rect x="558.6" y="197" width="1.8" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="561.61" y="207.5" ></text>
</g>
<g >
<title>__d_lookup_rcu (2,182,857 samples, 0.21%)</title><rect x="577.0" y="277" width="2.5" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="579.96" y="287.5" ></text>
</g>
<g >
<title>mntput (1,225,675 samples, 0.12%)</title><rect x="571.2" y="309" width="1.4" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="574.17" y="319.5" ></text>
</g>
<g >
<title>__libc_start_main@@GLIBC_2.34 (1,014,375,410 samples, 98.63%)</title><rect x="26.1" y="597" width="1163.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="29.11" y="607.5" >__libc_start_main@@GLIBC_2.34</text>
</g>
<g >
<title>_int_malloc (8,973,599 samples, 0.87%)</title><rect x="12.8" y="565" width="10.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="15.80" y="575.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1,142,830 samples, 0.11%)</title><rect x="910.1" y="421" width="1.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="913.08" y="431.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (103,248 samples, 0.01%)</title><rect x="23.8" y="309" width="0.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="26.84" y="319.5" ></text>
</g>
<g >
<title>_dl_map_object (103,248 samples, 0.01%)</title><rect x="23.8" y="501" width="0.2" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="26.84" y="511.5" ></text>
</g>
<g >
<title>filemap_get_pages (2,175,677 samples, 0.21%)</title><rect x="999.6" y="325" width="2.5" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1002.63" y="335.5" ></text>
</g>
<g >
<title>obj_cgroup_charge (1,684,711 samples, 0.16%)</title><rect x="185.4" y="277" width="1.9" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="188.41" y="287.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (1,432,332 samples, 0.14%)</title><rect x="685.8" y="421" width="1.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="688.77" y="431.5" ></text>
</g>
<g >
<title>__libc_start_call_main (1,014,375,410 samples, 98.63%)</title><rect x="26.1" y="581" width="1163.9" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="29.11" y="591.5" >__libc_start_call_main</text>
</g>
<g >
<title>lockref_get_not_dead (2,509,855 samples, 0.24%)</title><rect x="213.5" y="261" width="2.9" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="216.47" y="271.5" ></text>
</g>
<g >
<title>mmap64 (103,248 samples, 0.01%)</title><rect x="23.8" y="469" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="26.84" y="479.5" ></text>
</g>
<g >
<title>ioLatRead (1,028,418,666 samples, 100.00%)</title><rect x="10.0" y="629" width="1180.0" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="13.00" y="639.5" >ioLatRead</text>
</g>
<g >
<title>std::basic_ifstream&lt;char, std::char_traits&lt;char&gt; &gt;::~basic_ifstream (2,446,292 samples, 0.24%)</title><rect x="876.0" y="533" width="2.8" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="878.97" y="543.5" ></text>
</g>
<g >
<title>terminate_walk (2,175,243 samples, 0.21%)</title><rect x="606.3" y="325" width="2.5" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="609.32" y="335.5" ></text>
</g>
<g >
<title>std::locale::locale (3,863,835 samples, 0.38%)</title><rect x="698.7" y="485" width="4.5" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="701.74" y="495.5" ></text>
</g>
<g >
<title>getname (41,954,708 samples, 4.08%)</title><rect x="620.2" y="341" width="48.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="623.21" y="351.5" >getn..</text>
</g>
<g >
<title>syscall_exit_to_user_mode (1,041,439 samples, 0.10%)</title><rect x="679.8" y="405" width="1.2" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="682.81" y="415.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (218,838,893 samples, 21.28%)</title><rect x="914.0" y="453" width="251.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="917.02" y="463.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>generic_permission (10,994,332 samples, 1.07%)</title><rect x="231.6" y="261" width="12.6" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="234.56" y="271.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (1,234,154 samples, 0.12%)</title><rect x="673.2" y="341" width="1.4" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="676.20" y="351.5" ></text>
</g>
<g >
<title>mod_objcg_state (1,861,024 samples, 0.18%)</title><rect x="809.1" y="325" width="2.1" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="812.05" y="335.5" ></text>
</g>
<g >
<title>std::basic_ifstream&lt;char, std::char_traits&lt;char&gt; &gt;::close (148,441,865 samples, 14.43%)</title><rect x="705.6" y="533" width="170.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="708.65" y="543.5" >std::basic_ifstream&lt;ch..</text>
</g>
<g >
<title>__GI__IO_un_link.part.0 (3,306,818 samples, 0.32%)</title><rect x="731.8" y="469" width="3.8" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="734.80" y="479.5" ></text>
</g>
<g >
<title>all (1,028,421,946 samples, 100%)</title><rect x="10.0" y="645" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="655.5" ></text>
</g>
<g >
<title>_IO_file_open (543,229,221 samples, 52.82%)</title><rect x="64.1" y="453" width="623.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="67.12" y="463.5" >_IO_file_open</text>
</g>
<g >
<title>srso_alias_safe_ret (2,182,457 samples, 0.21%)</title><rect x="1157.6" y="357" width="2.5" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1160.60" y="367.5" ></text>
</g>
<g >
<title>read (229,634,561 samples, 22.33%)</title><rect x="908.4" y="469" width="263.5" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="911.40" y="479.5" >read</text>
</g>
<g >
<title>srso_alias_safe_ret (1,063,899 samples, 0.10%)</title><rect x="498.9" y="277" width="1.2" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="501.92" y="287.5" ></text>
</g>
<g >
<title>putname (1,532,034 samples, 0.15%)</title><rect x="675.5" y="357" width="1.8" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="678.54" y="367.5" ></text>
</g>
<g >
<title>x64_sys_call (103,248 samples, 0.01%)</title><rect x="23.8" y="421" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="26.84" y="431.5" ></text>
</g>
<g >
<title>security_file_alloc (19,006,672 samples, 1.85%)</title><rect x="140.2" y="277" width="21.8" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="143.22" y="287.5" >s..</text>
</g>
<g >
<title>__close_nocancel (117,856,122 samples, 11.46%)</title><rect x="735.6" y="469" width="135.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="738.60" y="479.5" >__close_nocancel</text>
</g>
<g >
<title>syscall_exit_to_user_mode (4,275,019 samples, 0.42%)</title><rect x="81.2" y="389" width="4.9" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="84.22" y="399.5" ></text>
</g>
<g >
<title>__memcg_slab_free_hook (1,861,024 samples, 0.18%)</title><rect x="809.1" y="341" width="2.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="812.05" y="351.5" ></text>
</g>
<g >
<title>path_openat (428,637,347 samples, 41.68%)</title><rect x="114.5" y="325" width="491.8" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="117.50" y="335.5" >path_openat</text>
</g>
<g >
<title>prepend (23,896,620 samples, 2.32%)</title><rect x="459.5" y="133" width="27.4" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="462.49" y="143.5" >p..</text>
</g>
<g >
<title>[unknown] (2,443,065 samples, 0.24%)</title><rect x="10.0" y="581" width="2.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="591.5" ></text>
</g>
<g >
<title>prepend_path (41,543,262 samples, 4.04%)</title><rect x="443.1" y="149" width="47.7" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="446.12" y="159.5" >prep..</text>
</g>
<g >
<title>__fput (75,044,321 samples, 7.30%)</title><rect x="749.5" y="373" width="86.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="752.51" y="383.5" >__fput</text>
</g>
<g >
<title>d_absolute_path (45,023,504 samples, 4.38%)</title><rect x="441.5" y="165" width="51.6" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="444.47" y="175.5" >d_abs..</text>
</g>
<g >
<title>dget_parent (4,363,312 samples, 0.42%)</title><rect x="1107.4" y="325" width="5.0" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1110.36" y="335.5" ></text>
</g>
<g >
<title>aa_file_perm (7,760,864 samples, 0.75%)</title><rect x="1148.7" y="309" width="8.9" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1151.70" y="319.5" ></text>
</g>
<g >
<title>do_syscall_64 (528,775,141 samples, 51.42%)</title><rect x="73.1" y="405" width="606.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="76.09" y="415.5" >do_syscall_64</text>
</g>
<g >
<title>__rcu_read_lock (1,421,270 samples, 0.14%)</title><rect x="601.8" y="277" width="1.7" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="604.82" y="287.5" ></text>
</g>
<g >
<title>__fsnotify_parent (21,447,481 samples, 2.09%)</title><rect x="968.7" y="357" width="24.6" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="971.71" y="367.5" >_..</text>
</g>
<g >
<title>aa_label_is_subset (2,283,548 samples, 0.22%)</title><rect x="1155.0" y="293" width="2.6" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1157.98" y="303.5" ></text>
</g>
<g >
<title>dput (6,028,398 samples, 0.59%)</title><rect x="284.5" y="245" width="6.9" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="287.45" y="255.5" ></text>
</g>
<g >
<title>aa_dfa_match (8,497,189 samples, 0.83%)</title><rect x="409.8" y="181" width="9.7" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="412.77" y="191.5" ></text>
</g>
<g >
<title>__memset (4,373,207 samples, 0.43%)</title><rect x="633.4" y="309" width="5.0" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="636.41" y="319.5" ></text>
</g>
<g >
<title>lockref_get_not_dead (2,165,475 samples, 0.21%)</title><rect x="211.0" y="245" width="2.5" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="213.99" y="255.5" ></text>
</g>
<g >
<title>__cond_resched (2,184,084 samples, 0.21%)</title><rect x="153.2" y="261" width="2.5" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="156.19" y="271.5" ></text>
</g>
<g >
<title>_dl_init (630,232 samples, 0.06%)</title><rect x="23.1" y="597" width="0.7" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="26.12" y="607.5" ></text>
</g>
<g >
<title>__memcg_slab_post_alloc_hook (7,104,552 samples, 0.69%)</title><rect x="177.3" y="277" width="8.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="180.26" y="287.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (1,958,870 samples, 0.19%)</title><rect x="870.8" y="469" width="2.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="873.82" y="479.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64 (2,156,368 samples, 0.21%)</title><rect x="793.5" y="245" width="2.5" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="796.48" y="255.5" ></text>
</g>
<g >
<title>ima_file_check (1,287,201 samples, 0.13%)</title><rect x="216.4" y="293" width="1.4" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="219.35" y="303.5" ></text>
</g>
<g >
<title>filp_flush (8,743,292 samples, 0.85%)</title><rect x="851.6" y="389" width="10.0" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="854.62" y="399.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1,566,299 samples, 0.15%)</title><rect x="558.6" y="213" width="1.8" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="561.61" y="223.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1,566,299 samples, 0.15%)</title><rect x="558.6" y="245" width="1.8" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="561.61" y="255.5" ></text>
</g>
<g >
<title>std::locale::~locale (1,410,723 samples, 0.14%)</title><rect x="877.2" y="517" width="1.6" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="880.15" y="527.5" ></text>
</g>
<g >
<title>lookup_fast (3,810,051 samples, 0.37%)</title><rect x="575.1" y="293" width="4.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="578.09" y="303.5" ></text>
</g>
<g >
<title>security_file_permission (17,530,391 samples, 1.70%)</title><rect x="1137.5" y="341" width="20.1" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="1140.49" y="351.5" ></text>
</g>
<g >
<title>copy_page_to_iter (5,121,235 samples, 0.50%)</title><rect x="1016.6" y="309" width="5.8" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1019.56" y="319.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (2,190,150 samples, 0.21%)</title><rect x="356.0" y="197" width="2.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="358.97" y="207.5" ></text>
</g>
<g >
<title>fsnotify (3,316,857 samples, 0.32%)</title><rect x="788.4" y="341" width="3.8" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="791.37" y="351.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::operator bool (1,189,208 samples, 0.12%)</title><rect x="1183.3" y="549" width="1.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1186.26" y="559.5" ></text>
</g>
<g >
<title>aa_path_name (57,413,209 samples, 5.58%)</title><rect x="427.3" y="197" width="65.8" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="430.26" y="207.5" >aa_path..</text>
</g>
<g >
<title>dput (3,719,384 samples, 0.36%)</title><rect x="982.7" y="341" width="4.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="985.67" y="351.5" ></text>
</g>
<g >
<title>hook_file_open (1,310,790 samples, 0.13%)</title><rect x="493.1" y="245" width="1.5" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="496.13" y="255.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (2,148,737 samples, 0.21%)</title><rect x="595.5" y="293" width="2.5" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="598.50" y="303.5" ></text>
</g>
<g >
<title>_IO_link_in (2,201,072 samples, 0.21%)</title><rect x="691.2" y="453" width="2.6" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="694.25" y="463.5" ></text>
</g>
<g >
<title>dput (8,755,052 samples, 0.85%)</title><rect x="796.0" y="357" width="10.0" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="798.96" y="367.5" ></text>
</g>
<g >
<title>dput (4,387,264 samples, 0.43%)</title><rect x="783.3" y="341" width="5.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="786.33" y="351.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (2,156,368 samples, 0.21%)</title><rect x="793.5" y="277" width="2.5" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="796.48" y="287.5" ></text>
</g>
<g >
<title>atime_needs_update (1,417,315 samples, 0.14%)</title><rect x="1014.9" y="309" width="1.7" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1017.93" y="319.5" ></text>
</g>
<g >
<title>ksys_read (192,619,859 samples, 18.73%)</title><rect x="939.1" y="389" width="221.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="942.10" y="399.5" >ksys_read</text>
</g>
<g >
<title>__rcu_read_unlock (5,013,633 samples, 0.49%)</title><rect x="323.2" y="229" width="5.8" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="326.21" y="239.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_destroy_internal_buffer (2,523,679 samples, 0.25%)</title><rect x="873.1" y="501" width="2.9" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="876.07" y="511.5" ></text>
</g>
<g >
<title>ext4_release_file (2,117,599 samples, 0.21%)</title><rect x="835.6" y="373" width="2.4" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="838.62" y="383.5" ></text>
</g>
<g >
<title>__fsnotify_parent (23,304,329 samples, 2.27%)</title><rect x="765.4" y="357" width="26.8" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="768.43" y="367.5" >_..</text>
</g>
<g >
<title>std::istream::gcount (970,788 samples, 0.09%)</title><rect x="1188.9" y="549" width="1.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="1191.88" y="559.5" ></text>
</g>
<g >
<title>rw_verify_area (75,462,385 samples, 7.34%)</title><rect x="1071.0" y="357" width="86.6" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="1074.02" y="367.5" >rw_verify_..</text>
</g>
<g >
<title>scheduler_tick (1,566,299 samples, 0.15%)</title><rect x="558.6" y="149" width="1.8" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="561.61" y="159.5" ></text>
</g>
<g >
<title>__cond_resched (2,106,535 samples, 0.20%)</title><rect x="274.6" y="245" width="2.4" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="277.56" y="255.5" ></text>
</g>
<g >
<title>_int_malloc (2,130,919 samples, 0.21%)</title><rect x="696.3" y="453" width="2.4" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="699.29" y="463.5" ></text>
</g>
<g >
<title>_copy_to_iter (4,022,358 samples, 0.39%)</title><rect x="1017.8" y="293" width="4.6" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1020.82" y="303.5" ></text>
</g>
<g >
<title>dget_parent (2,190,722 samples, 0.21%)</title><rect x="281.9" y="245" width="2.6" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="284.94" y="255.5" ></text>
</g>
<g >
<title>dget_parent (9,449,779 samples, 0.92%)</title><rect x="358.5" y="229" width="10.8" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="361.49" y="239.5" ></text>
</g>
<g >
<title>__close_nocancel (4,559,524 samples, 0.44%)</title><rect x="50.2" y="485" width="5.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="53.23" y="495.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::open (2,183,290 samples, 0.21%)</title><rect x="30.9" y="533" width="2.5" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="33.90" y="543.5" ></text>
</g>
<g >
<title>std::locale::id::_M_id (2,156,080 samples, 0.21%)</title><rect x="703.2" y="517" width="2.4" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="706.17" y="527.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (2,172,325 samples, 0.21%)</title><rect x="244.2" y="277" width="2.5" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="247.17" y="287.5" ></text>
</g>
<g >
<title>__x64_sys_read (192,619,859 samples, 18.73%)</title><rect x="939.1" y="405" width="221.0" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="942.10" y="415.5" >__x64_sys_read</text>
</g>
<g >
<title>init_file (2,177,673 samples, 0.21%)</title><rect x="501.5" y="309" width="2.5" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="504.52" y="319.5" ></text>
</g>
<g >
<title>__aa_path_perm (11,289,850 samples, 1.10%)</title><rect x="406.6" y="213" width="12.9" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="409.57" y="223.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (2,156,368 samples, 0.21%)</title><rect x="793.5" y="325" width="2.5" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="796.48" y="335.5" ></text>
</g>
<g >
<title>_dl_map_object_deps (103,248 samples, 0.01%)</title><rect x="23.8" y="549" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="26.84" y="559.5" ></text>
</g>
<g >
<title>check_heap_object (4,335,930 samples, 0.42%)</title><rect x="663.4" y="261" width="4.9" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="666.37" y="271.5" ></text>
</g>
<g >
<title>vfs_open (222,122,255 samples, 21.60%)</title><rect x="246.7" y="293" width="254.8" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="249.66" y="303.5" >vfs_open</text>
</g>
<g >
<title>touch_atime (2,190,488 samples, 0.21%)</title><rect x="1068.5" y="325" width="2.5" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1071.50" y="335.5" ></text>
</g>
<g >
<title>apparmor_file_alloc_security (2,671,499 samples, 0.26%)</title><rect x="159.0" y="261" width="3.0" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="161.96" y="271.5" ></text>
</g>
<g >
<title>std::ios_base_library_init (630,232 samples, 0.06%)</title><rect x="23.1" y="549" width="0.7" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="26.12" y="559.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::underflow (239,665,028 samples, 23.30%)</title><rect x="904.6" y="485" width="274.9" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="907.55" y="495.5" >std::basic_filebuf&lt;char, std::char_t..</text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (2,190,150 samples, 0.21%)</title><rect x="356.0" y="181" width="2.5" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="358.97" y="191.5" ></text>
</g>
<g >
<title>consume_obj_stock (1,684,711 samples, 0.16%)</title><rect x="185.4" y="261" width="1.9" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="188.41" y="271.5" ></text>
</g>
<g >
<title>__rcu_read_lock (1,142,524 samples, 0.11%)</title><rect x="779.5" y="341" width="1.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="782.50" y="351.5" ></text>
</g>
<g >
<title>prepend_copy (2,171,219 samples, 0.21%)</title><rect x="486.9" y="133" width="2.5" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="489.91" y="143.5" ></text>
</g>
<g >
<title>apparmor_file_open (2,193,606 samples, 0.21%)</title><rect x="296.4" y="261" width="2.5" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="299.38" y="271.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2,156,368 samples, 0.21%)</title><rect x="793.5" y="309" width="2.5" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="796.48" y="319.5" ></text>
</g>
<g >
<title>path_get (3,311,156 samples, 0.32%)</title><rect x="334.3" y="261" width="3.8" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="337.29" y="271.5" ></text>
</g>
<g >
<title>x64_sys_call (2,059,570 samples, 0.20%)</title><rect x="861.6" y="437" width="2.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="864.65" y="447.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (67,719,337 samples, 6.58%)</title><rect x="993.3" y="357" width="77.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="996.32" y="367.5" >ext4_fil..</text>
</g>
<g >
<title>filemap_read (57,846,861 samples, 5.62%)</title><rect x="1002.1" y="325" width="66.4" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="1005.13" y="335.5" >filemap..</text>
</g>
<g >
<title>__memset (2,250,553 samples, 0.22%)</title><rect x="125.1" y="293" width="2.6" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="128.12" y="303.5" ></text>
</g>
<g >
<title>apparmor_file_alloc_security (5,146,519 samples, 0.50%)</title><rect x="134.3" y="277" width="5.9" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="137.32" y="287.5" ></text>
</g>
<g >
<title>file_close_fd_locked (3,682,767 samples, 0.36%)</title><rect x="847.4" y="389" width="4.2" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="850.39" y="399.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (1,810,475 samples, 0.18%)</title><rect x="21.0" y="533" width="2.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="24.02" y="543.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1,566,299 samples, 0.15%)</title><rect x="558.6" y="277" width="1.8" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="561.61" y="287.5" ></text>
</g>
<g >
<title>alloc_fd (5,586,774 samples, 0.54%)</title><rect x="611.3" y="325" width="6.4" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="614.30" y="335.5" ></text>
</g>
<g >
<title>lockref_put_return (3,365,397 samples, 0.33%)</title><rect x="598.0" y="293" width="3.8" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="600.96" y="303.5" ></text>
</g>
<g >
<title>fclose@@GLIBC_2.2.5 (135,216,430 samples, 13.15%)</title><rect x="717.9" y="485" width="155.2" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="720.93" y="495.5" >fclose@@GLIBC_2.2.5</text>
</g>
<g >
<title>do_open (1,675,963 samples, 0.16%)</title><rect x="109.1" y="325" width="1.9" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="112.13" y="335.5" ></text>
</g>
<g >
<title>timekeeping_advance (2,156,368 samples, 0.21%)</title><rect x="793.5" y="213" width="2.5" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="796.48" y="223.5" ></text>
</g>
<g >
<title>inode_permission (15,326,693 samples, 1.49%)</title><rect x="226.6" y="277" width="17.6" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="229.59" y="287.5" ></text>
</g>
<g >
<title>__x64_sys_close (99,912,921 samples, 9.72%)</title><rect x="747.0" y="405" width="114.6" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="750.01" y="415.5" >__x64_sys_close</text>
</g>
<g >
<title>asm_exc_page_fault (302,706 samples, 0.03%)</title><rect x="25.8" y="533" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="28.77" y="543.5" ></text>
</g>
<g >
<title>locks_remove_posix (2,192,711 samples, 0.21%)</title><rect x="859.1" y="373" width="2.5" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="862.13" y="383.5" ></text>
</g>
<g >
<title>fsnotify (1,182,934 samples, 0.12%)</title><rect x="986.9" y="341" width="1.4" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="989.94" y="351.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (4,321,118 samples, 0.42%)</title><rect x="277.0" y="245" width="4.9" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="279.98" y="255.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2,190,150 samples, 0.21%)</title><rect x="356.0" y="165" width="2.5" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="358.97" y="175.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_destroy_internal_buffer (1,992,446 samples, 0.19%)</title><rect x="708.1" y="517" width="2.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="711.14" y="527.5" ></text>
</g>
<g >
<title>inode_permission (30,973,391 samples, 3.01%)</title><rect x="517.3" y="293" width="35.5" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="520.25" y="303.5" >ino..</text>
</g>
<g >
<title>vm_mmap_pgoff (103,248 samples, 0.01%)</title><rect x="23.8" y="373" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="26.84" y="383.5" ></text>
</g>
<g >
<title>_dl_lookup_symbol_x (789,060 samples, 0.08%)</title><rect x="24.9" y="533" width="0.9" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="27.86" y="543.5" ></text>
</g>
<g >
<title>filemap_get_pages (14,025,736 samples, 1.36%)</title><rect x="1022.4" y="309" width="16.1" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1025.43" y="319.5" ></text>
</g>
<g >
<title>may_open (25,130,426 samples, 2.44%)</title><rect x="217.8" y="293" width="28.9" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="220.83" y="303.5" >ma..</text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsgetn (246,026,782 samples, 23.92%)</title><rect x="897.3" y="501" width="282.2" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="900.25" y="511.5" >std::basic_streambuf&lt;char, std::char_..</text>
</g>
<g >
<title>__legitimize_mnt (1,125,975 samples, 0.11%)</title><rect x="203.3" y="261" width="1.3" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="206.30" y="271.5" ></text>
</g>
<g >
<title>complete_walk (19,080,126 samples, 1.86%)</title><rect x="194.5" y="293" width="21.9" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="197.46" y="303.5" >c..</text>
</g>
<g >
<title>srso_alias_safe_ret (3,278,400 samples, 0.32%)</title><rect x="682.0" y="421" width="3.8" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="685.01" y="431.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (3,523,276 samples, 0.34%)</title><rect x="893.2" y="501" width="4.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="896.21" y="511.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (3,863,835 samples, 0.38%)</title><rect x="698.7" y="517" width="4.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="701.74" y="527.5" ></text>
</g>
<g >
<title>dl_main (1,979,483 samples, 0.19%)</title><rect x="23.8" y="565" width="2.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="26.84" y="575.5" ></text>
</g>
<g >
<title>xas_load (4,499,454 samples, 0.44%)</title><rect x="1030.8" y="277" width="5.2" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1033.84" y="287.5" ></text>
</g>
<g >
<title>lockref_put_return (4,372,843 samples, 0.43%)</title><rect x="988.3" y="341" width="5.0" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="991.30" y="351.5" ></text>
</g>
<g >
<title>__memset (2,849,944 samples, 0.28%)</title><rect x="155.7" y="261" width="3.3" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="158.69" y="271.5" ></text>
</g>
<g >
<title>update_process_times (1,566,299 samples, 0.15%)</title><rect x="558.6" y="165" width="1.8" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="561.61" y="175.5" ></text>
</g>
<g >
<title>lockref_get_not_zero (2,080,549 samples, 0.20%)</title><rect x="371.1" y="229" width="2.4" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="374.14" y="239.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (2,041,642 samples, 0.20%)</title><rect x="490.8" y="149" width="2.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="493.79" y="159.5" ></text>
</g>
<g >
<title>io_latency_read (1,008,504,961 samples, 98.06%)</title><rect x="26.1" y="549" width="1157.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="29.11" y="559.5" >io_latency_read</text>
</g>
<g >
<title>_dl_fixup (630,232 samples, 0.06%)</title><rect x="23.1" y="517" width="0.7" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="26.12" y="527.5" ></text>
</g>
<g >
<title>do_mmap (103,248 samples, 0.01%)</title><rect x="23.8" y="357" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="26.84" y="367.5" ></text>
</g>
<g >
<title>srso_alias_untrain_ret (640,491 samples, 0.06%)</title><rect x="1166.1" y="453" width="0.7" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1169.11" y="463.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_allocate_internal_buffer (4,328,524 samples, 0.42%)</title><rect x="693.8" y="501" width="4.9" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="696.77" y="511.5" ></text>
</g>
<g >
<title>std::istream::sentry::sentry (3,239,918 samples, 0.32%)</title><rect x="1179.5" y="517" width="3.8" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1182.54" y="527.5" ></text>
</g>
<g >
<title>step_into (2,524,541 samples, 0.25%)</title><rect x="565.8" y="261" width="2.9" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="568.77" y="271.5" ></text>
</g>
<g >
<title>__rcu_read_lock (2,198,079 samples, 0.21%)</title><rect x="320.7" y="229" width="2.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="323.69" y="239.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (2,197,944 samples, 0.21%)</title><rect x="780.8" y="341" width="2.5" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="783.81" y="351.5" ></text>
</g>
<g >
<title>may_open (2,179,568 samples, 0.21%)</title><rect x="568.7" y="309" width="2.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="571.67" y="319.5" ></text>
</g>
<g >
<title>dquot_file_open (1,372,379 samples, 0.13%)</title><rect x="306.6" y="245" width="1.6" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="309.59" y="255.5" ></text>
</g>
<g >
<title>mntput_no_expire (2,187,952 samples, 0.21%)</title><rect x="603.5" y="277" width="2.5" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="606.46" y="287.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_allocate_internal_buffer (2,198,485 samples, 0.21%)</title><rect x="37.5" y="517" width="2.5" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="40.46" y="527.5" ></text>
</g>
<g >
<title>_IO_setb (2,171,847 samples, 0.21%)</title><rect x="729.3" y="453" width="2.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="732.31" y="463.5" ></text>
</g>
<g >
<title>apparmor_file_open (104,239,266 samples, 10.14%)</title><rect x="373.5" y="245" width="119.6" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="376.53" y="255.5" >apparmor_file_..</text>
</g>
<g >
<title>__check_object_size (5,509,889 samples, 0.54%)</title><rect x="627.1" y="309" width="6.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="630.09" y="319.5" ></text>
</g>
<g >
<title>lockref_put_return (1,980,690 samples, 0.19%)</title><rect x="816.1" y="357" width="2.3" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="819.13" y="367.5" ></text>
</g>
<g >
<title>d_namespace_path.constprop.0 (55,222,320 samples, 5.37%)</title><rect x="429.8" y="181" width="63.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="432.77" y="191.5" >d_name..</text>
</g>
<g >
<title>__memcg_slab_post_alloc_hook (103,248 samples, 0.01%)</title><rect x="23.8" y="293" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="26.84" y="303.5" ></text>
</g>
<g >
<title>perf_event_task_tick (1,566,299 samples, 0.15%)</title><rect x="558.6" y="133" width="1.8" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="561.61" y="143.5" ></text>
</g>
<g >
<title>get_cached_acl_rcu (3,848,621 samples, 0.37%)</title><rect x="545.4" y="261" width="4.4" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="548.36" y="271.5" ></text>
</g>
<g >
<title>ext4_file_open (3,731,376 samples, 0.36%)</title><rect x="494.6" y="277" width="4.3" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="497.64" y="287.5" ></text>
</g>
<g >
<title>get_unused_fd_flags (9,931,963 samples, 0.97%)</title><rect x="608.8" y="341" width="11.4" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="611.81" y="351.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (436,580 samples, 0.04%)</title><rect x="552.3" y="277" width="0.5" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="555.29" y="287.5" ></text>
</g>
<g >
<title>openaux (103,248 samples, 0.01%)</title><rect x="23.8" y="517" width="0.2" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="26.84" y="527.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::open (563,076,332 samples, 54.75%)</title><rect x="47.7" y="501" width="646.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="50.70" y="511.5" >std::__basic_file&lt;char&gt;::open</text>
</g>
<g >
<title>kmem_cache_alloc (22,062,290 samples, 2.15%)</title><rect x="162.0" y="293" width="25.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="165.03" y="303.5" >k..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (534,140,832 samples, 51.94%)</title><rect x="69.1" y="421" width="612.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="72.14" y="431.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>_dl_runtime_resolve_xsavec (630,232 samples, 0.06%)</title><rect x="23.1" y="533" width="0.7" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="26.12" y="543.5" ></text>
</g>
<g >
<title>tick_sched_handle (1,566,299 samples, 0.15%)</title><rect x="558.6" y="181" width="1.8" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="561.61" y="191.5" ></text>
</g>
<g >
<title>set_root (2,194,591 samples, 0.21%)</title><rect x="563.3" y="261" width="2.5" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="566.25" y="271.5" ></text>
</g>
<g >
<title>file_close_fd_locked (1,148,867 samples, 0.11%)</title><rect x="846.1" y="373" width="1.3" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="849.07" y="383.5" ></text>
</g>
<g >
<title>aa_lookup_condperms (626,094 samples, 0.06%)</title><rect x="409.1" y="197" width="0.7" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="412.05" y="207.5" ></text>
</g>
<g >
<title>__fsnotify_parent (23,389,471 samples, 2.27%)</title><rect x="269.5" y="261" width="26.9" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="272.54" y="271.5" >_..</text>
</g>
<g >
<title>srso_alias_safe_ret (1,207,106 samples, 0.12%)</title><rect x="489.4" y="133" width="1.4" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="492.40" y="143.5" ></text>
</g>
<g >
<title>scheduler_tick (2,190,150 samples, 0.21%)</title><rect x="356.0" y="85" width="2.5" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="358.97" y="95.5" ></text>
</g>
<g >
<title>get_inode_acl (7,391,858 samples, 0.72%)</title><rect x="235.7" y="245" width="8.5" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="238.69" y="255.5" ></text>
</g>
<g >
<title>fsnotify (1,960,229 samples, 0.19%)</title><rect x="1125.3" y="325" width="2.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1128.28" y="335.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::basic_filebuf (2,189,218 samples, 0.21%)</title><rect x="40.0" y="517" width="2.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="42.98" y="527.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (714,266 samples, 0.07%)</title><rect x="838.0" y="373" width="0.9" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="841.05" y="383.5" ></text>
</g>
<g >
<title>dput (3,347,623 samples, 0.33%)</title><rect x="330.5" y="229" width="3.8" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="333.45" y="239.5" ></text>
</g>
<g >
<title>current_time (6,486,005 samples, 0.63%)</title><rect x="1058.5" y="277" width="7.5" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1061.54" y="287.5" ></text>
</g>
<g >
<title>__mutex_init (1,151,501 samples, 0.11%)</title><rect x="127.7" y="293" width="1.3" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="130.70" y="303.5" ></text>
</g>
<g >
<title>tick_sched_handle (2,190,150 samples, 0.21%)</title><rect x="356.0" y="117" width="2.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="358.97" y="127.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (11,675,868 samples, 1.14%)</title><rect x="638.4" y="309" width="13.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="641.43" y="319.5" ></text>
</g>
<g >
<title>do_open (273,821,749 samples, 26.63%)</title><rect x="187.3" y="309" width="314.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="190.34" y="319.5" >do_open</text>
</g>
<g >
<title>dget_parent (1,294,789 samples, 0.13%)</title><rect x="329.0" y="229" width="1.5" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="331.97" y="239.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (2,189,218 samples, 0.21%)</title><rect x="40.0" y="501" width="2.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="42.98" y="511.5" ></text>
</g>
<g >
<title>do_syscall_64 (103,913,472 samples, 10.10%)</title><rect x="742.4" y="437" width="119.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="745.42" y="447.5" >do_syscall_64</text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::close (137,394,243 samples, 13.36%)</title><rect x="715.4" y="501" width="157.7" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="718.43" y="511.5" >std::__basic_file&lt;ch..</text>
</g>
<g >
<title>__legitimize_path (1,149,384 samples, 0.11%)</title><rect x="197.0" y="277" width="1.3" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="199.98" y="287.5" ></text>
</g>
<g >
<title>std::ios_base::_M_call_callbacks (3,374,662 samples, 0.33%)</title><rect x="880.4" y="533" width="3.8" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="883.37" y="543.5" ></text>
</g>
<g >
<title>do_dentry_open (216,119,582 samples, 21.01%)</title><rect x="246.7" y="277" width="247.9" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="249.66" y="287.5" >do_dentry_open</text>
</g>
<g >
<title>copy_from_kernel_nofault (11,772,632 samples, 1.14%)</title><rect x="473.4" y="101" width="13.5" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="476.41" y="111.5" ></text>
</g>
<g >
<title>file_close_fd (7,428,744 samples, 0.72%)</title><rect x="838.9" y="389" width="8.5" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="841.87" y="399.5" ></text>
</g>
<g >
<title>vm_area_alloc (103,248 samples, 0.01%)</title><rect x="23.8" y="325" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="26.84" y="335.5" ></text>
</g>
<g >
<title>nohz_balancer_kick (2,190,150 samples, 0.21%)</title><rect x="356.0" y="53" width="2.5" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="358.97" y="63.5" ></text>
</g>
<g >
<title>_find_next_zero_bit (2,163,675 samples, 0.21%)</title><rect x="608.8" y="325" width="2.5" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="611.81" y="335.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (2,184,404 samples, 0.21%)</title><rect x="43.1" y="501" width="2.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="46.10" y="511.5" ></text>
</g>
<g >
<title>__fput_sync (77,876,186 samples, 7.57%)</title><rect x="749.5" y="389" width="89.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="752.51" y="399.5" >__fput_sync</text>
</g>
<g >
<title>hrtimer_interrupt (1,566,299 samples, 0.15%)</title><rect x="558.6" y="229" width="1.8" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="561.61" y="239.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::operator! (3,710,453 samples, 0.36%)</title><rect x="1184.6" y="549" width="4.3" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1187.63" y="559.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (103,248 samples, 0.01%)</title><rect x="23.8" y="453" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="26.84" y="463.5" ></text>
</g>
<g >
<title>putname (4,228,809 samples, 0.41%)</title><rect x="668.3" y="341" width="4.9" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="671.35" y="351.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (4,127,087 samples, 0.40%)</title><rect x="950.3" y="373" width="4.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="953.27" y="383.5" ></text>
</g>
<g >
<title>kmem_cache_free (4,831,508 samples, 0.47%)</title><rect x="830.1" y="341" width="5.5" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="833.08" y="351.5" ></text>
</g>
<g >
<title>ext4_file_open (30,849,386 samples, 3.00%)</title><rect x="298.9" y="261" width="35.4" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="301.90" y="271.5" >ex..</text>
</g>
<g >
<title>entry_SYSCALL_64 (2,443,065 samples, 0.24%)</title><rect x="10.0" y="533" width="2.8" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (2,156,368 samples, 0.21%)</title><rect x="793.5" y="341" width="2.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="796.48" y="351.5" ></text>
</g>
<g >
<title>__fsnotify_parent (1,758,329 samples, 0.17%)</title><rect x="948.3" y="373" width="2.0" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="951.25" y="383.5" ></text>
</g>
<g >
<title>get_cached_acl (2,929,148 samples, 0.28%)</title><rect x="240.8" y="229" width="3.4" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="243.81" y="239.5" ></text>
</g>
<g >
<title>aa_path_perm (91,334,001 samples, 8.88%)</title><rect x="388.3" y="229" width="104.8" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="391.34" y="239.5" >aa_path_perm</text>
</g>
<g >
<title>std::ios_base::ios_base (1,243,465 samples, 0.12%)</title><rect x="884.2" y="533" width="1.5" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="887.24" y="543.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1,142,830 samples, 0.11%)</title><rect x="910.1" y="453" width="1.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="913.08" y="463.5" ></text>
</g>
<g >
<title>update_fast_timekeeper (2,156,368 samples, 0.21%)</title><rect x="793.5" y="197" width="2.5" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="796.48" y="207.5" ></text>
</g>
<g >
<title>build_open_flags (2,194,796 samples, 0.21%)</title><rect x="90.3" y="357" width="2.5" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="93.29" y="367.5" ></text>
</g>
<g >
<title>try_module_get (1,207,398 samples, 0.12%)</title><rect x="500.1" y="277" width="1.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="503.14" y="287.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (103,248 samples, 0.01%)</title><rect x="23.8" y="389" width="0.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="26.84" y="399.5" ></text>
</g>
<g >
<title>fopen@@GLIBC_2.2.5 (556,312,039 samples, 54.09%)</title><rect x="55.5" y="485" width="638.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="58.47" y="495.5" >fopen@@GLIBC_2.2.5</text>
</g>
<g >
<title>__rcu_read_lock (3,393,700 samples, 0.33%)</title><rect x="348.3" y="229" width="3.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="351.33" y="239.5" ></text>
</g>
<g >
<title>_IO_file_fopen@@GLIBC_2.2.5 (552,382,926 samples, 53.71%)</title><rect x="57.4" y="469" width="633.8" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="60.45" y="479.5" >_IO_file_fopen@@GLIBC_2.2.5</text>
</g>
<g >
<title>syscall_return_via_sysret (5,935,801 samples, 0.58%)</title><rect x="864.0" y="453" width="6.8" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="867.01" y="463.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (2,156,368 samples, 0.21%)</title><rect x="793.5" y="261" width="2.5" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="796.48" y="271.5" ></text>
</g>
<g >
<title>_dl_start_user (2,609,715 samples, 0.25%)</title><rect x="23.1" y="613" width="3.0" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="26.12" y="623.5" ></text>
</g>
<g >
<title>terminate_walk (14,518,575 samples, 1.41%)</title><rect x="589.3" y="309" width="16.7" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="592.31" y="319.5" ></text>
</g>
<g >
<title>path_name (59,601,496 samples, 5.80%)</title><rect x="424.7" y="213" width="68.4" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="427.75" y="223.5" >path_name</text>
</g>
<g >
<title>__fdget_pos (3,605,741 samples, 0.35%)</title><rect x="944.1" y="373" width="4.2" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="947.11" y="383.5" ></text>
</g>
<g >
<title>__strchr_avx2 (2,190,250 samples, 0.21%)</title><rect x="688.7" y="453" width="2.5" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="691.73" y="463.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (630,232 samples, 0.06%)</title><rect x="23.1" y="565" width="0.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="26.12" y="575.5" ></text>
</g>
<g >
<title>filemap_get_read_batch (12,169,005 samples, 1.18%)</title><rect x="1024.6" y="293" width="13.9" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1027.56" y="303.5" ></text>
</g>
<g >
<title>__GI___libc_open (1,151,125 samples, 0.11%)</title><rect x="687.4" y="453" width="1.3" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="690.41" y="463.5" ></text>
</g>
</g>
</svg>
