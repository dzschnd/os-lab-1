<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="646" onload="init(evt)" viewBox="0 0 1200 646" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="646.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="629" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="629" > </text>
<g id="frames">
<g >
<title>strncpy_from_user (23,239,386 samples, 3.95%)</title><rect x="685.6" y="261" width="46.7" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="688.64" y="271.5" >strn..</text>
</g>
<g >
<title>d_namespace_path.constprop.0 (17,348,047 samples, 2.95%)</title><rect x="384.2" y="133" width="34.8" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="387.15" y="143.5" >d_..</text>
</g>
<g >
<title>fsnotify (2,152,842 samples, 0.37%)</title><rect x="1144.3" y="277" width="4.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1147.25" y="287.5" ></text>
</g>
<g >
<title>may_open (8,574,025 samples, 1.46%)</title><rect x="216.5" y="245" width="17.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="219.53" y="255.5" ></text>
</g>
<g >
<title>do_open (135,566,315 samples, 23.05%)</title><rect x="176.6" y="261" width="272.0" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="179.61" y="271.5" >do_open</text>
</g>
<g >
<title>__rcu_read_unlock (2,147,092 samples, 0.37%)</title><rect x="316.0" y="181" width="4.3" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="319.04" y="191.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (2,166,223 samples, 0.37%)</title><rect x="51.1" y="421" width="4.4" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="54.11" y="431.5" ></text>
</g>
<g >
<title>__lookup_mnt (2,149,869 samples, 0.37%)</title><rect x="560.0" y="229" width="4.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="562.98" y="239.5" ></text>
</g>
<g >
<title>nohz_balancer_kick (2,152,649 samples, 0.37%)</title><rect x="916.9" y="197" width="4.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="919.91" y="207.5" ></text>
</g>
<g >
<title>security_file_open (70,335,600 samples, 11.96%)</title><rect x="294.4" y="213" width="141.1" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="297.44" y="223.5" >security_file_open</text>
</g>
<g >
<title>_IO_file_finish@@GLIBC_2.2.5 (2,172,957 samples, 0.37%)</title><rect x="778.4" y="437" width="4.4" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="781.42" y="447.5" ></text>
</g>
<g >
<title>should_failslab.constprop.0 (6,453,867 samples, 1.10%)</title><rect x="672.7" y="261" width="12.9" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="675.70" y="271.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (2,152,649 samples, 0.37%)</title><rect x="916.9" y="341" width="4.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="919.91" y="351.5" ></text>
</g>
<g >
<title>std::ios_base::_M_init (2,149,812 samples, 0.37%)</title><rect x="763.2" y="453" width="4.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="766.15" y="463.5" ></text>
</g>
<g >
<title>read (143,546,738 samples, 24.41%)</title><rect x="895.2" y="421" width="288.0" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="898.21" y="431.5" >read</text>
</g>
<g >
<title>syscall_exit_to_user_mode (2,176,858 samples, 0.37%)</title><rect x="817.4" y="373" width="4.4" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="820.39" y="383.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (2,183,622 samples, 0.37%)</title><rect x="444.2" y="229" width="4.4" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="447.20" y="239.5" ></text>
</g>
<g >
<title>open_last_lookups (10,172,593 samples, 1.73%)</title><rect x="586.1" y="261" width="20.4" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="589.07" y="271.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (54,008,263 samples, 9.18%)</title><rect x="986.5" y="309" width="108.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="989.47" y="319.5" >ext4_file_rea..</text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (2,157,329 samples, 0.37%)</title><rect x="782.8" y="437" width="4.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="785.78" y="447.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (2,152,649 samples, 0.37%)</title><rect x="916.9" y="293" width="4.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="919.91" y="303.5" ></text>
</g>
<g >
<title>dget_parent (2,160,953 samples, 0.37%)</title><rect x="973.5" y="293" width="4.3" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="976.47" y="303.5" ></text>
</g>
<g >
<title>_IO_file_close_it@@GLIBC_2.2.5 (2,148,631 samples, 0.37%)</title><rect x="804.5" y="421" width="4.3" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="807.48" y="431.5" ></text>
</g>
<g >
<title>do_syscall_64 (38,723,932 samples, 6.58%)</title><rect x="808.8" y="389" width="77.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="811.79" y="399.5" >do_sysca..</text>
</g>
<g >
<title>filemap_get_pages (2,170,410 samples, 0.37%)</title><rect x="990.8" y="277" width="4.3" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="993.79" y="287.5" ></text>
</g>
<g >
<title>filp_flush (2,028,072 samples, 0.34%)</title><rect x="882.4" y="341" width="4.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="885.41" y="351.5" ></text>
</g>
<g >
<title>atime_needs_update (19,441,742 samples, 3.31%)</title><rect x="1055.8" y="245" width="39.0" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="1058.81" y="255.5" >ati..</text>
</g>
<g >
<title>filemap_read (49,683,324 samples, 8.45%)</title><rect x="995.1" y="277" width="99.7" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="998.14" y="287.5" >filemap_read</text>
</g>
<g >
<title>__strchr_avx2 (1,055,759 samples, 0.18%)</title><rect x="752.4" y="405" width="2.1" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="755.36" y="415.5" ></text>
</g>
<g >
<title>getname (1,343,305 samples, 0.23%)</title><rect x="745.3" y="309" width="2.7" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="748.34" y="319.5" ></text>
</g>
<g >
<title>_IO_default_finish (2,169,224 samples, 0.37%)</title><rect x="774.1" y="437" width="4.3" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="777.07" y="447.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (336,718,259 samples, 57.25%)</title><rect x="72.5" y="373" width="675.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="75.51" y="383.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>tick_nohz_highres_handler (2,164,096 samples, 0.37%)</title><rect x="982.1" y="229" width="4.4" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="985.12" y="239.5" ></text>
</g>
<g >
<title>generic_permission (16,732,490 samples, 2.84%)</title><rect x="496.2" y="229" width="33.6" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="499.22" y="239.5" >ge..</text>
</g>
<g >
<title>_int_malloc (4,323,148 samples, 0.74%)</title><rect x="754.5" y="405" width="8.7" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="757.48" y="415.5" ></text>
</g>
<g >
<title>get_inode_acl (4,298,207 samples, 0.73%)</title><rect x="220.9" y="197" width="8.6" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="223.91" y="207.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (4,328,355 samples, 0.74%)</title><rect x="934.4" y="325" width="8.7" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="937.39" y="335.5" ></text>
</g>
<g >
<title>__close_nocancel (2,166,223 samples, 0.37%)</title><rect x="51.1" y="437" width="4.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="54.11" y="447.5" ></text>
</g>
<g >
<title>get_cached_acl (2,150,276 samples, 0.37%)</title><rect x="225.2" y="181" width="4.3" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="228.22" y="191.5" ></text>
</g>
<g >
<title>__GI___libc_open (338,716,485 samples, 57.59%)</title><rect x="68.5" y="389" width="679.5" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="71.50" y="399.5" >__GI___libc_open</text>
</g>
<g >
<title>elf_load (83,017 samples, 0.01%)</title><rect x="14.4" y="389" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="17.37" y="399.5" ></text>
</g>
<g >
<title>lookup_fast (4,309,458 samples, 0.73%)</title><rect x="542.9" y="245" width="8.6" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="545.87" y="255.5" ></text>
</g>
<g >
<title>__virt_addr_valid (8,641,758 samples, 1.47%)</title><rect x="714.9" y="197" width="17.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="717.93" y="207.5" ></text>
</g>
<g >
<title>inode_permission (6,481,450 samples, 1.10%)</title><rect x="216.5" y="229" width="13.0" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="219.53" y="239.5" ></text>
</g>
<g >
<title>security_capable (2,161,688 samples, 0.37%)</title><rect x="525.5" y="213" width="4.3" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="528.45" y="223.5" ></text>
</g>
<g >
<title>read (2,176,924 samples, 0.37%)</title><rect x="10.0" y="501" width="4.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>std::basic_ifstream&lt;char, std::char_traits&lt;char&gt; &gt;::close (59,323,521 samples, 10.09%)</title><rect x="767.5" y="485" width="119.0" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="770.47" y="495.5" >std::basic_ifs..</text>
</g>
<g >
<title>_dl_start (1,594,914 samples, 0.27%)</title><rect x="14.5" y="549" width="3.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="17.53" y="559.5" ></text>
</g>
<g >
<title>dput (2,152,120 samples, 0.37%)</title><rect x="290.1" y="181" width="4.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="293.12" y="191.5" ></text>
</g>
<g >
<title>nohz_balancer_kick (2,164,096 samples, 0.37%)</title><rect x="982.1" y="149" width="4.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="985.12" y="159.5" ></text>
</g>
<g >
<title>aa_str_perms (15,071,143 samples, 2.56%)</title><rect x="342.0" y="149" width="30.2" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="344.97" y="159.5" >aa..</text>
</g>
<g >
<title>dget_parent (2,176,082 samples, 0.37%)</title><rect x="826.1" y="293" width="4.4" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="829.10" y="303.5" ></text>
</g>
<g >
<title>lookup_fast (6,513,739 samples, 1.11%)</title><rect x="564.3" y="229" width="13.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="567.30" y="239.5" ></text>
</g>
<g >
<title>update_process_times (2,164,096 samples, 0.37%)</title><rect x="982.1" y="197" width="4.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="985.12" y="207.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (2,152,649 samples, 0.37%)</title><rect x="916.9" y="325" width="4.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="919.91" y="335.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (2,155,763 samples, 0.37%)</title><rect x="172.3" y="245" width="4.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="175.28" y="255.5" ></text>
</g>
<g >
<title>mntput (4,308,641 samples, 0.73%)</title><rect x="860.8" y="309" width="8.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="863.80" y="319.5" ></text>
</g>
<g >
<title>getname (47,969,621 samples, 8.16%)</title><rect x="636.0" y="293" width="96.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="639.03" y="303.5" >getname</text>
</g>
<g >
<title>copy_page_to_iter (10,790,817 samples, 1.83%)</title><rect x="1016.8" y="261" width="21.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1019.78" y="271.5" >c..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (83,017 samples, 0.01%)</title><rect x="14.4" y="549" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="17.37" y="559.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::is_open (2,172,553 samples, 0.37%)</title><rect x="35.1" y="469" width="4.3" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="38.05" y="479.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::open (350,592,993 samples, 59.61%)</title><rect x="51.1" y="453" width="703.4" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="54.11" y="463.5" >std::__basic_file&lt;char&gt;::open</text>
</g>
<g >
<title>step_into (4,341,769 samples, 0.74%)</title><rect x="577.4" y="229" width="8.7" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="580.36" y="239.5" ></text>
</g>
<g >
<title>std::basic_ifstream&lt;char, std::char_traits&lt;char&gt; &gt;::basic_ifstream (365,070,801 samples, 62.07%)</title><rect x="35.1" y="485" width="732.4" height="15.0" fill="rgb(229,111,26)" rx="2" ry="2" />
<text  x="38.05" y="495.5" >std::basic_ifstream&lt;char, std::char_traits&lt;char&gt; &gt;::basic_ifstream</text>
</g>
<g >
<title>fopen@@GLIBC_2.2.5 (348,426,770 samples, 59.24%)</title><rect x="55.5" y="437" width="699.0" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="58.46" y="447.5" >fopen@@GLIBC_2.2.5</text>
</g>
<g >
<title>__x64_sys_close (32,263,727 samples, 5.49%)</title><rect x="821.8" y="357" width="64.7" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="824.75" y="367.5" >__x64_s..</text>
</g>
<g >
<title>path_init (2,153,223 samples, 0.37%)</title><rect x="102.5" y="277" width="4.4" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="105.54" y="287.5" ></text>
</g>
<g >
<title>[unknown] (2,176,924 samples, 0.37%)</title><rect x="10.0" y="549" width="4.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>vfsgid_in_group_p (2,156,558 samples, 0.37%)</title><rect x="538.5" y="229" width="4.4" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="541.54" y="239.5" ></text>
</g>
<g >
<title>all (588,171,173 samples, 100%)</title><rect x="10.0" y="597" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="607.5" ></text>
</g>
<g >
<title>copy_from_kernel_nofault (6,509,055 samples, 1.11%)</title><rect x="405.9" y="53" width="13.1" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="408.90" y="63.5" ></text>
</g>
<g >
<title>mntput (2,183,724 samples, 0.37%)</title><rect x="627.3" y="245" width="4.4" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="630.29" y="255.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_allocate_internal_buffer (4,323,148 samples, 0.74%)</title><rect x="754.5" y="453" width="8.7" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="757.48" y="463.5" ></text>
</g>
<g >
<title>hook_file_alloc_security (4,324,741 samples, 0.74%)</title><rect x="137.7" y="229" width="8.6" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="140.65" y="239.5" ></text>
</g>
<g >
<title>check_heap_object (10,792,840 samples, 1.83%)</title><rect x="710.6" y="213" width="21.7" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="713.61" y="223.5" >c..</text>
</g>
<g >
<title>ima_file_check (5,950,004 samples, 1.01%)</title><rect x="204.6" y="245" width="11.9" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="207.60" y="255.5" ></text>
</g>
<g >
<title>build_open_flags (2,148,705 samples, 0.37%)</title><rect x="93.8" y="309" width="4.4" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="96.84" y="319.5" ></text>
</g>
<g >
<title>__fsnotify_parent (8,636,624 samples, 1.47%)</title><rect x="964.8" y="309" width="17.3" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="967.80" y="319.5" ></text>
</g>
<g >
<title>x64_sys_call (126,176,841 samples, 21.45%)</title><rect x="921.4" y="373" width="253.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="924.37" y="383.5" >x64_sys_call</text>
</g>
<g >
<title>walk_component (17,226,618 samples, 2.93%)</title><rect x="551.5" y="245" width="34.6" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="554.51" y="255.5" >wa..</text>
</g>
<g >
<title>syscall_return_via_sysret (4,330,197 samples, 0.74%)</title><rect x="1174.5" y="405" width="8.7" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1177.51" y="415.5" ></text>
</g>
<g >
<title>do_dentry_open (102,752,644 samples, 17.47%)</title><rect x="233.7" y="229" width="206.2" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="236.73" y="239.5" >do_dentry_open</text>
</g>
<g >
<title>malloc (4,323,148 samples, 0.74%)</title><rect x="754.5" y="421" width="8.7" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="757.48" y="431.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::close (58,183,746 samples, 9.89%)</title><rect x="769.8" y="469" width="116.7" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="772.75" y="479.5" >std::basic_fil..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (132,722,429 samples, 22.57%)</title><rect x="908.2" y="405" width="266.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="911.24" y="415.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>alloc_empty_file (28,256,869 samples, 4.80%)</title><rect x="119.9" y="261" width="56.7" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="122.92" y="271.5" >alloc_..</text>
</g>
<g >
<title>apparmor_file_free_security (4,337,834 samples, 0.74%)</title><rect x="843.4" y="309" width="8.8" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="846.45" y="319.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (2,164,096 samples, 0.37%)</title><rect x="982.1" y="277" width="4.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="985.12" y="287.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (2,146,387 samples, 0.36%)</title><rect x="1170.2" y="261" width="4.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1173.20" y="271.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2,164,096 samples, 0.37%)</title><rect x="982.1" y="261" width="4.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="985.12" y="271.5" ></text>
</g>
<g >
<title>fsnotify (2,131,972 samples, 0.36%)</title><rect x="834.8" y="293" width="4.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="837.82" y="303.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2,152,649 samples, 0.37%)</title><rect x="916.9" y="309" width="4.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="919.91" y="319.5" ></text>
</g>
<g >
<title>complete_walk (7,472,251 samples, 1.27%)</title><rect x="189.6" y="245" width="15.0" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="192.60" y="255.5" ></text>
</g>
<g >
<title>__rcu_read_lock (5,206,493 samples, 0.89%)</title><rect x="1120.8" y="277" width="10.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1123.81" y="287.5" ></text>
</g>
<g >
<title>main (584,306,438 samples, 99.34%)</title><rect x="17.7" y="517" width="1172.3" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="20.73" y="527.5" >main</text>
</g>
<g >
<title>aa_path_name (23,640,898 samples, 4.02%)</title><rect x="375.9" y="149" width="47.4" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="378.88" y="159.5" >aa_p..</text>
</g>
<g >
<title>aa_get_buffer (1,834,785 samples, 0.31%)</title><rect x="372.2" y="165" width="3.7" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="375.20" y="175.5" ></text>
</g>
<g >
<title>__aa_path_perm (21,528,422 samples, 3.66%)</title><rect x="329.0" y="165" width="43.2" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="332.01" y="175.5" >__aa..</text>
</g>
<g >
<title>ksys_read (124,004,217 samples, 21.08%)</title><rect x="925.7" y="341" width="248.8" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="928.73" y="351.5" >ksys_read</text>
</g>
<g >
<title>__check_object_size (4,317,503 samples, 0.73%)</title><rect x="644.7" y="261" width="8.7" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="647.74" y="271.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (5,309,378 samples, 0.90%)</title><rect x="662.0" y="261" width="10.7" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="665.04" y="271.5" ></text>
</g>
<g >
<title>search_binary_handler (83,017 samples, 0.01%)</title><rect x="14.4" y="421" width="0.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="17.37" y="431.5" ></text>
</g>
<g >
<title>trigger_load_balance (2,164,096 samples, 0.37%)</title><rect x="982.1" y="165" width="4.4" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="985.12" y="175.5" ></text>
</g>
<g >
<title>tick_sched_handle (2,164,096 samples, 0.37%)</title><rect x="982.1" y="213" width="4.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="985.12" y="223.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2,173,183 samples, 0.37%)</title><rect x="886.5" y="453" width="4.3" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="889.48" y="463.5" ></text>
</g>
<g >
<title>security_file_free (2,157,440 samples, 0.37%)</title><rect x="869.4" y="309" width="4.4" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="872.44" y="319.5" ></text>
</g>
<g >
<title>do_syscall_64 (83,017 samples, 0.01%)</title><rect x="14.4" y="533" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="17.37" y="543.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (2,154,750 samples, 0.37%)</title><rect x="423.3" y="165" width="4.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="426.31" y="175.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (2,145,868 samples, 0.36%)</title><rect x="1157.3" y="261" width="4.3" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1160.25" y="271.5" ></text>
</g>
<g >
<title>__check_object_size.part.0 (14,595,082 samples, 2.48%)</title><rect x="703.0" y="229" width="29.3" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="705.99" y="239.5" >__..</text>
</g>
<g >
<title>__rcu_read_unlock (2,164,820 samples, 0.37%)</title><rect x="821.8" y="293" width="4.3" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="824.75" y="303.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::basic_filebuf (1,497,491 samples, 0.25%)</title><rect x="39.4" y="469" width="3.0" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="42.41" y="479.5" ></text>
</g>
<g >
<title>mod_objcg_state (2,159,429 samples, 0.37%)</title><rect x="856.5" y="293" width="4.3" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="859.46" y="303.5" ></text>
</g>
<g >
<title>security_file_permission (12,929,369 samples, 2.20%)</title><rect x="1148.6" y="293" width="25.9" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="1151.57" y="303.5" >s..</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (2,164,096 samples, 0.37%)</title><rect x="982.1" y="293" width="4.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="985.12" y="303.5" ></text>
</g>
<g >
<title>_dl_relocate_object (1,594,914 samples, 0.27%)</title><rect x="14.5" y="501" width="3.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="17.53" y="511.5" ></text>
</g>
<g >
<title>_start (584,306,438 samples, 99.34%)</title><rect x="17.7" y="565" width="1172.3" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="20.73" y="575.5" >_start</text>
</g>
<g >
<title>aa_audit_file (2,156,845 samples, 0.37%)</title><rect x="337.6" y="149" width="4.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="340.64" y="159.5" ></text>
</g>
<g >
<title>vfs_read (111,026,961 samples, 18.88%)</title><rect x="951.8" y="325" width="222.7" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="954.76" y="335.5" >vfs_read</text>
</g>
<g >
<title>_IO_file_fopen@@GLIBC_2.2.5 (344,117,721 samples, 58.51%)</title><rect x="64.1" y="421" width="690.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="67.11" y="431.5" >_IO_file_fopen@@GLIBC_2.2.5</text>
</g>
<g >
<title>xas_load (2,151,748 samples, 0.37%)</title><rect x="1051.5" y="229" width="4.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1054.50" y="239.5" ></text>
</g>
<g >
<title>bprm_execve (83,017 samples, 0.01%)</title><rect x="14.4" y="469" width="0.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="17.37" y="479.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (38,723,932 samples, 6.58%)</title><rect x="808.8" y="405" width="77.7" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="811.79" y="415.5" >entry_SY..</text>
</g>
<g >
<title>prepend (10,842,236 samples, 1.84%)</title><rect x="397.2" y="85" width="21.8" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="400.21" y="95.5" >p..</text>
</g>
<g >
<title>apparmor_file_permission (10,747,579 samples, 1.83%)</title><rect x="1152.9" y="277" width="21.6" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1155.95" y="287.5" >a..</text>
</g>
<g >
<title>path_openat (261,591,647 samples, 44.48%)</title><rect x="106.9" y="277" width="524.8" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="109.86" y="287.5" >path_openat</text>
</g>
<g >
<title>std::istream::read (147,897,149 samples, 25.15%)</title><rect x="886.5" y="485" width="296.7" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="889.48" y="495.5" >std::istream::read</text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::underflow (2,176,924 samples, 0.37%)</title><rect x="10.0" y="517" width="4.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>security_inode_permission (2,092,575 samples, 0.36%)</title><rect x="229.5" y="229" width="4.2" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="232.54" y="239.5" ></text>
</g>
<g >
<title>__memcg_slab_free_hook (2,166,541 samples, 0.37%)</title><rect x="839.1" y="309" width="4.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="842.10" y="319.5" ></text>
</g>
<g >
<title>rw_verify_area (39,721,648 samples, 6.75%)</title><rect x="1094.8" y="309" width="79.7" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="1097.82" y="319.5" >rw_verify..</text>
</g>
<g >
<title>hook_file_open (2,175,642 samples, 0.37%)</title><rect x="431.2" y="197" width="4.3" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="434.18" y="207.5" ></text>
</g>
<g >
<title>__fput (25,925,863 samples, 4.41%)</title><rect x="821.8" y="325" width="52.0" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="824.75" y="335.5" >__fput</text>
</g>
<g >
<title>do_filp_open (265,931,537 samples, 45.21%)</title><rect x="98.2" y="293" width="533.5" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="101.16" y="303.5" >do_filp_open</text>
</g>
<g >
<title>putname (2,165,186 samples, 0.37%)</title><rect x="736.6" y="293" width="4.4" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="739.62" y="303.5" ></text>
</g>
<g >
<title>x64_sys_call (83,017 samples, 0.01%)</title><rect x="14.4" y="517" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="17.37" y="527.5" ></text>
</g>
<g >
<title>dl_main (1,594,914 samples, 0.27%)</title><rect x="14.5" y="517" width="3.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="17.53" y="527.5" ></text>
</g>
<g >
<title>current_time (8,626,984 samples, 1.47%)</title><rect x="1073.2" y="229" width="17.3" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1076.17" y="239.5" ></text>
</g>
<g >
<title>_IO_link_in (2,156,169 samples, 0.37%)</title><rect x="748.0" y="405" width="4.4" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="751.04" y="415.5" ></text>
</g>
<g >
<title>__fsnotify_parent (8,646,639 samples, 1.47%)</title><rect x="821.8" y="309" width="17.3" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="824.75" y="319.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (83,017 samples, 0.01%)</title><rect x="14.4" y="485" width="0.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="17.37" y="495.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (2,164,096 samples, 0.37%)</title><rect x="982.1" y="245" width="4.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="985.12" y="255.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::underflow (143,546,738 samples, 24.41%)</title><rect x="895.2" y="437" width="288.0" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="898.21" y="447.5" >std::basic_filebuf&lt;char, std::char_tra..</text>
</g>
<g >
<title>__mutex_init (2,165,288 samples, 0.37%)</title><rect x="125.2" y="245" width="4.3" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="128.19" y="255.5" ></text>
</g>
<g >
<title>filemap_get_read_batch (6,484,309 samples, 1.10%)</title><rect x="1042.8" y="245" width="13.0" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1045.81" y="255.5" ></text>
</g>
<g >
<title>update_process_times (2,152,649 samples, 0.37%)</title><rect x="916.9" y="245" width="4.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="919.91" y="255.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (68,532,375 samples, 11.65%)</title><rect x="448.6" y="261" width="137.5" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="451.58" y="271.5" >link_path_walk.pa..</text>
</g>
<g >
<title>_copy_to_iter (10,790,817 samples, 1.83%)</title><rect x="1016.8" y="245" width="21.6" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1019.78" y="255.5" >_..</text>
</g>
<g >
<title>entry_SYSCALL_64 (2,176,924 samples, 0.37%)</title><rect x="10.0" y="485" width="4.4" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>[unknown] (2,176,924 samples, 0.37%)</title><rect x="10.0" y="533" width="4.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>x64_sys_call (326,082,262 samples, 55.44%)</title><rect x="93.8" y="341" width="654.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="96.84" y="351.5" >x64_sys_call</text>
</g>
<g >
<title>dput (2,149,339 samples, 0.37%)</title><rect x="852.2" y="309" width="4.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="855.15" y="319.5" ></text>
</g>
<g >
<title>xas_start (2,151,748 samples, 0.37%)</title><rect x="1051.5" y="213" width="4.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1054.50" y="223.5" ></text>
</g>
<g >
<title>prepend_copy (8,669,341 samples, 1.47%)</title><rect x="401.6" y="69" width="17.4" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="404.57" y="79.5" ></text>
</g>
<g >
<title>__fsnotify_parent (24,616,320 samples, 4.19%)</title><rect x="1099.2" y="293" width="49.4" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="1102.18" y="303.5" >__fs..</text>
</g>
<g >
<title>prepend_path (15,197,618 samples, 2.58%)</title><rect x="388.5" y="101" width="30.5" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="391.47" y="111.5" >pr..</text>
</g>
<g >
<title>security_file_free (2,156,166 samples, 0.37%)</title><rect x="873.8" y="325" width="4.3" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="876.77" y="335.5" ></text>
</g>
<g >
<title>copy_from_kernel_nofault_allowed (2,152,765 samples, 0.37%)</title><rect x="414.6" y="37" width="4.4" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="417.64" y="47.5" ></text>
</g>
<g >
<title>lookup_fast (5,802,477 samples, 0.99%)</title><rect x="594.8" y="245" width="11.7" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="597.84" y="255.5" ></text>
</g>
<g >
<title>filemap_get_pages (8,665,580 samples, 1.47%)</title><rect x="1038.4" y="261" width="17.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1041.43" y="271.5" ></text>
</g>
<g >
<title>__close_nocancel (38,723,932 samples, 6.58%)</title><rect x="808.8" y="421" width="77.7" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="811.79" y="431.5" >__close_..</text>
</g>
<g >
<title>x64_sys_call (32,263,727 samples, 5.49%)</title><rect x="821.8" y="373" width="64.7" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="824.75" y="383.5" >x64_sys..</text>
</g>
<g >
<title>getname_flags.part.0 (45,789,970 samples, 7.79%)</title><rect x="640.4" y="277" width="91.9" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="643.40" y="287.5" >getname_fl..</text>
</g>
<g >
<title>get_unused_fd_flags (2,172,246 samples, 0.37%)</title><rect x="631.7" y="293" width="4.3" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="634.67" y="303.5" ></text>
</g>
<g >
<title>inode_permission (31,883,161 samples, 5.42%)</title><rect x="478.9" y="245" width="64.0" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="481.90" y="255.5" >inode_p..</text>
</g>
<g >
<title>obj_cgroup_charge (2,145,582 samples, 0.36%)</title><rect x="168.0" y="245" width="4.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="170.98" y="255.5" ></text>
</g>
<g >
<title>__fput_sync (30,235,655 samples, 5.14%)</title><rect x="821.8" y="341" width="60.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="824.75" y="351.5" >__fput..</text>
</g>
<g >
<title>dput (2,149,012 samples, 0.37%)</title><rect x="320.3" y="181" width="4.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="323.34" y="191.5" ></text>
</g>
<g >
<title>tick_sched_handle (2,152,649 samples, 0.37%)</title><rect x="916.9" y="261" width="4.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="919.91" y="271.5" ></text>
</g>
<g >
<title>__x64_sys_read (4,302,978 samples, 0.73%)</title><rect x="912.6" y="373" width="8.6" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="915.59" y="383.5" ></text>
</g>
<g >
<title>aa_file_perm (4,308,614 samples, 0.73%)</title><rect x="1161.6" y="261" width="8.6" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="1164.56" y="271.5" ></text>
</g>
<g >
<title>[unknown] (2,259,941 samples, 0.38%)</title><rect x="10.0" y="565" width="4.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="575.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::_M_destroy_internal_buffer (1,139,775 samples, 0.19%)</title><rect x="767.5" y="469" width="2.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="770.47" y="479.5" ></text>
</g>
<g >
<title>security_file_alloc (2,151,171 samples, 0.37%)</title><rect x="146.3" y="229" width="4.3" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="149.33" y="239.5" ></text>
</g>
<g >
<title>operator new[] (2,162,893 samples, 0.37%)</title><rect x="46.8" y="453" width="4.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="49.78" y="463.5" ></text>
</g>
<g >
<title>std::locale::~locale (1,232,596 samples, 0.21%)</title><rect x="1183.2" y="485" width="2.5" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1186.20" y="495.5" ></text>
</g>
<g >
<title>trigger_load_balance (2,152,649 samples, 0.37%)</title><rect x="916.9" y="213" width="4.3" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="919.91" y="223.5" ></text>
</g>
<g >
<title>aa_path_perm (49,158,855 samples, 8.36%)</title><rect x="329.0" y="181" width="98.6" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="332.01" y="191.5" >aa_path_perm</text>
</g>
<g >
<title>terminate_walk (8,662,788 samples, 1.47%)</title><rect x="614.3" y="261" width="17.4" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="617.29" y="271.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::open (359,250,945 samples, 61.08%)</title><rect x="42.4" y="469" width="720.8" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="45.42" y="479.5" >std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::open</text>
</g>
<g >
<title>exec_binprm (83,017 samples, 0.01%)</title><rect x="14.4" y="437" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="17.37" y="447.5" ></text>
</g>
<g >
<title>touch_atime (19,441,742 samples, 3.31%)</title><rect x="1055.8" y="261" width="39.0" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1058.81" y="271.5" >tou..</text>
</g>
<g >
<title>__d_lookup_rcu (6,513,739 samples, 1.11%)</title><rect x="564.3" y="213" width="13.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="567.30" y="223.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsgetn (147,897,149 samples, 25.15%)</title><rect x="886.5" y="469" width="296.7" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="889.48" y="479.5" >std::basic_filebuf&lt;char, std::char_trai..</text>
</g>
<g >
<title>_dl_start_user (1,594,914 samples, 0.27%)</title><rect x="14.5" y="565" width="3.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="17.53" y="575.5" ></text>
</g>
<g >
<title>path_init (3,892,939 samples, 0.66%)</title><rect x="606.5" y="261" width="7.8" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="609.48" y="271.5" ></text>
</g>
<g >
<title>__libc_start_call_main (584,306,438 samples, 99.34%)</title><rect x="17.7" y="533" width="1172.3" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="20.73" y="543.5" >__libc_start_call_main</text>
</g>
<g >
<title>do_vmi_align_munmap (83,017 samples, 0.01%)</title><rect x="14.4" y="325" width="0.1" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="17.37" y="335.5" ></text>
</g>
<g >
<title>security_capable (4,011,636 samples, 0.68%)</title><rect x="517.4" y="197" width="8.1" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="520.40" y="207.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (2,151,852 samples, 0.37%)</title><rect x="865.1" y="293" width="4.3" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="868.12" y="303.5" ></text>
</g>
<g >
<title>__x64_sys_read (126,176,841 samples, 21.45%)</title><rect x="921.4" y="357" width="253.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="924.37" y="367.5" >__x64_sys_read</text>
</g>
<g >
<title>init_file (10,524,130 samples, 1.79%)</title><rect x="129.5" y="245" width="21.1" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="132.53" y="255.5" ></text>
</g>
<g >
<title>do_sys_openat2 (320,408,002 samples, 54.48%)</title><rect x="98.2" y="309" width="642.8" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="101.16" y="319.5" >do_sys_openat2</text>
</g>
<g >
<title>path_name (23,640,898 samples, 4.02%)</title><rect x="375.9" y="165" width="47.4" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="378.88" y="175.5" >path..</text>
</g>
<g >
<title>security_file_open (2,155,542 samples, 0.37%)</title><rect x="439.9" y="229" width="4.3" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="442.88" y="239.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (72,948 samples, 0.01%)</title><rect x="921.2" y="373" width="0.2" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="924.22" y="383.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (2,152,649 samples, 0.37%)</title><rect x="916.9" y="277" width="4.3" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="919.91" y="287.5" ></text>
</g>
<g >
<title>scheduler_tick (2,152,649 samples, 0.37%)</title><rect x="916.9" y="229" width="4.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="919.91" y="239.5" ></text>
</g>
<g >
<title>__libc_start_main@@GLIBC_2.34 (584,306,438 samples, 99.34%)</title><rect x="17.7" y="549" width="1172.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="20.73" y="559.5" >__libc_start_main@@GLIBC_2.34</text>
</g>
<g >
<title>capable_wrt_inode_uidgid (12,418,054 samples, 2.11%)</title><rect x="500.5" y="213" width="25.0" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="503.54" y="223.5" >c..</text>
</g>
<g >
<title>_IO_file_open (338,716,485 samples, 57.59%)</title><rect x="68.5" y="405" width="679.5" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="71.50" y="415.5" >_IO_file_open</text>
</g>
<g >
<title>__fsnotify_parent (10,838,208 samples, 1.84%)</title><rect x="255.4" y="213" width="21.7" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="258.37" y="223.5" >_..</text>
</g>
<g >
<title>do_syscall_64 (2,172,704 samples, 0.37%)</title><rect x="895.2" y="405" width="4.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="898.21" y="415.5" ></text>
</g>
<g >
<title>scheduler_tick (2,164,096 samples, 0.37%)</title><rect x="982.1" y="181" width="4.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="985.12" y="191.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (2,158,585 samples, 0.37%)</title><rect x="435.5" y="213" width="4.4" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="438.55" y="223.5" ></text>
</g>
<g >
<title>privileged_wrt_inode_uidgid (4,059,658 samples, 0.69%)</title><rect x="509.3" y="197" width="8.1" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="512.26" y="207.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.33] (2,171,911 samples, 0.37%)</title><rect x="42.4" y="453" width="4.4" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="45.42" y="463.5" ></text>
</g>
<g >
<title>our_mnt (2,170,703 samples, 0.37%)</title><rect x="419.0" y="133" width="4.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="421.96" y="143.5" ></text>
</g>
<g >
<title>security_inode_permission (2,183,937 samples, 0.37%)</title><rect x="534.2" y="229" width="4.3" height="15.0" fill="rgb(208,18,4)" rx="2" ry="2" />
<text  x="537.16" y="239.5" ></text>
</g>
<g >
<title>__vm_munmap (83,017 samples, 0.01%)</title><rect x="14.4" y="357" width="0.1" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="17.37" y="367.5" ></text>
</g>
<g >
<title>vm_munmap (83,017 samples, 0.01%)</title><rect x="14.4" y="373" width="0.1" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="17.37" y="383.5" ></text>
</g>
<g >
<title>std::istream::read (2,148,651 samples, 0.37%)</title><rect x="1185.7" y="501" width="4.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="1188.67" y="511.5" ></text>
</g>
<g >
<title>do_syscall_64 (334,545,700 samples, 56.88%)</title><rect x="76.9" y="357" width="671.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="79.86" y="367.5" >do_syscall_64</text>
</g>
<g >
<title>__memset (4,308,260 samples, 0.73%)</title><rect x="653.4" y="261" width="8.6" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="656.40" y="271.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (2,151,055 samples, 0.37%)</title><rect x="947.4" y="325" width="4.4" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="950.45" y="335.5" ></text>
</g>
<g >
<title>d_absolute_path (15,197,618 samples, 2.58%)</title><rect x="388.5" y="117" width="30.5" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="391.47" y="127.5" >d_..</text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsgetn (4,330,202 samples, 0.74%)</title><rect x="26.4" y="485" width="8.7" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="29.37" y="495.5" ></text>
</g>
<g >
<title>ktime_get_coarse_real_ts64 (2,171,366 samples, 0.37%)</title><rect x="1086.1" y="213" width="4.4" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1089.13" y="223.5" ></text>
</g>
<g >
<title>generic_permission (4,298,207 samples, 0.73%)</title><rect x="220.9" y="213" width="8.6" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="223.91" y="223.5" ></text>
</g>
<g >
<title>dget_parent (2,151,083 samples, 0.37%)</title><rect x="1139.9" y="277" width="4.4" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1142.94" y="287.5" ></text>
</g>
<g >
<title>locks_remove_posix (2,028,072 samples, 0.34%)</title><rect x="882.4" y="325" width="4.1" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="885.41" y="335.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (8,639,969 samples, 1.47%)</title><rect x="150.6" y="245" width="17.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="153.64" y="255.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsgetn (145,723,966 samples, 24.78%)</title><rect x="890.8" y="453" width="292.4" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="893.84" y="463.5" >std::basic_streambuf&lt;char, std::char_tr..</text>
</g>
<g >
<title>io_latency_read (582,157,787 samples, 98.98%)</title><rect x="17.7" y="501" width="1168.0" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="20.73" y="511.5" >io_latency_read</text>
</g>
<g >
<title>do_vmi_munmap (83,017 samples, 0.01%)</title><rect x="14.4" y="341" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="17.37" y="351.5" ></text>
</g>
<g >
<title>apparmor_capable (4,011,636 samples, 0.68%)</title><rect x="517.4" y="181" width="8.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="520.40" y="191.5" ></text>
</g>
<g >
<title>__d_lookup_rcu (3,655,182 samples, 0.62%)</title><rect x="599.1" y="229" width="7.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="602.15" y="239.5" ></text>
</g>
<g >
<title>_IO_file_close (4,340,243 samples, 0.74%)</title><rect x="795.8" y="421" width="8.7" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="798.78" y="431.5" ></text>
</g>
<g >
<title>ext4_sample_last_mounted (2,177,115 samples, 0.37%)</title><rect x="281.4" y="197" width="4.4" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="284.42" y="207.5" ></text>
</g>
<g >
<title>kmem_cache_free (2,159,429 samples, 0.37%)</title><rect x="856.5" y="309" width="4.3" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="859.46" y="319.5" ></text>
</g>
<g >
<title>dput (2,154,392 samples, 0.37%)</title><rect x="977.8" y="293" width="4.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="980.80" y="303.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (1,594,914 samples, 0.27%)</title><rect x="14.5" y="533" width="3.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="17.53" y="543.5" ></text>
</g>
<g >
<title>vfs_open (107,091,808 samples, 18.21%)</title><rect x="233.7" y="245" width="214.9" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="236.73" y="255.5" >vfs_open</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2,152,649 samples, 0.37%)</title><rect x="916.9" y="357" width="4.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="919.91" y="367.5" ></text>
</g>
<g >
<title>make_vfsgid (2,161,947 samples, 0.37%)</title><rect x="1090.5" y="229" width="4.3" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1093.48" y="239.5" ></text>
</g>
<g >
<title>dput (2,173,765 samples, 0.37%)</title><rect x="830.5" y="293" width="4.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="833.46" y="303.5" ></text>
</g>
<g >
<title>rw_verify_area (2,182,961 samples, 0.37%)</title><rect x="943.1" y="325" width="4.3" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="946.07" y="335.5" ></text>
</g>
<g >
<title>try_to_unlazy (7,472,251 samples, 1.27%)</title><rect x="189.6" y="229" width="15.0" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="192.60" y="239.5" ></text>
</g>
<g >
<title>generic_file_read_iter (51,853,734 samples, 8.82%)</title><rect x="990.8" y="293" width="104.0" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="993.79" y="303.5" >generic_file..</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2,164,096 samples, 0.37%)</title><rect x="982.1" y="309" width="4.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="985.12" y="319.5" ></text>
</g>
<g >
<title>__fsnotify_parent (10,735,058 samples, 1.83%)</title><rect x="303.1" y="197" width="21.6" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="306.12" y="207.5" >_..</text>
</g>
<g >
<title>__rcu_read_unlock (4,324,989 samples, 0.74%)</title><rect x="1131.3" y="277" width="8.6" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="1134.26" y="287.5" ></text>
</g>
<g >
<title>__memcg_slab_post_alloc_hook (4,317,839 samples, 0.73%)</title><rect x="159.3" y="229" width="8.7" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="162.32" y="239.5" ></text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::close (56,033,803 samples, 9.53%)</title><rect x="774.1" y="453" width="112.4" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="777.07" y="463.5" >std::__basic_..</text>
</g>
<g >
<title>get_current_fs_domain (2,175,642 samples, 0.37%)</title><rect x="431.2" y="181" width="4.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="434.18" y="191.5" ></text>
</g>
<g >
<title>operator new (4,323,148 samples, 0.74%)</title><rect x="754.5" y="437" width="8.7" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="757.48" y="447.5" ></text>
</g>
<g >
<title>unmap_region (83,017 samples, 0.01%)</title><rect x="14.4" y="309" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="17.37" y="319.5" ></text>
</g>
<g >
<title>load_elf_binary (83,017 samples, 0.01%)</title><rect x="14.4" y="405" width="0.1" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="17.37" y="415.5" ></text>
</g>
<g >
<title>do_syscall_64 (130,552,767 samples, 22.20%)</title><rect x="912.6" y="389" width="261.9" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="915.59" y="399.5" >do_syscall_64</text>
</g>
<g >
<title>get_current_fs_domain (1,767,402 samples, 0.30%)</title><rect x="427.6" y="197" width="3.6" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="430.64" y="207.5" ></text>
</g>
<g >
<title>ext4_file_open (8,636,644 samples, 1.47%)</title><rect x="277.1" y="213" width="17.3" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="280.11" y="223.5" ></text>
</g>
<g >
<title>__x64_sys_openat (326,082,262 samples, 55.44%)</title><rect x="93.8" y="325" width="654.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="96.84" y="335.5" >__x64_sys_openat</text>
</g>
<g >
<title>__legitimize_path (1,001,770 samples, 0.17%)</title><rect x="202.6" y="213" width="2.0" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="205.59" y="223.5" ></text>
</g>
<g >
<title>fclose@@GLIBC_2.2.5 (49,534,293 samples, 8.42%)</title><rect x="787.1" y="437" width="99.4" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="790.11" y="447.5" >fclose@@GLIB..</text>
</g>
<g >
<title>__check_object_size (14,595,082 samples, 2.48%)</title><rect x="703.0" y="245" width="29.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="705.99" y="255.5" >__..</text>
</g>
<g >
<title>from_kuid (2,155,974 samples, 0.37%)</title><rect x="504.9" y="197" width="4.4" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="507.93" y="207.5" ></text>
</g>
<g >
<title>apparmor_file_open (51,330,912 samples, 8.73%)</title><rect x="324.7" y="197" width="102.9" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="327.66" y="207.5" >apparmor_fil..</text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (2,149,812 samples, 0.37%)</title><rect x="763.2" y="469" width="4.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="766.15" y="479.5" ></text>
</g>
<g >
<title>alloc_fd (2,172,246 samples, 0.37%)</title><rect x="631.7" y="277" width="4.3" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="634.67" y="287.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (2,153,626 samples, 0.37%)</title><rect x="878.1" y="325" width="4.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="881.09" y="335.5" ></text>
</g>
<g >
<title>make_vfsuid (2,178,805 samples, 0.37%)</title><rect x="529.8" y="229" width="4.4" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="532.79" y="239.5" ></text>
</g>
<g >
<title>__x64_sys_execve (83,017 samples, 0.01%)</title><rect x="14.4" y="501" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="17.37" y="511.5" ></text>
</g>
<g >
<title>fscrypt_file_open (4,310,024 samples, 0.73%)</title><rect x="285.8" y="197" width="8.6" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="288.79" y="207.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (4,321,408 samples, 0.73%)</title><rect x="899.6" y="405" width="8.6" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="902.57" y="415.5" ></text>
</g>
<g >
<title>aa_dfa_match (15,071,143 samples, 2.56%)</title><rect x="342.0" y="133" width="30.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="344.97" y="143.5" >aa..</text>
</g>
<g >
<title>bprm_execve.part.0 (83,017 samples, 0.01%)</title><rect x="14.4" y="453" width="0.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="17.37" y="463.5" ></text>
</g>
<g >
<title>unlink_anon_vmas (83,017 samples, 0.01%)</title><rect x="14.4" y="293" width="0.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="17.37" y="303.5" ></text>
</g>
<g >
<title>kmem_cache_free (2,169,412 samples, 0.37%)</title><rect x="732.3" y="293" width="4.3" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="735.27" y="303.5" ></text>
</g>
<g >
<title>__rcu_read_lock (2,157,904 samples, 0.37%)</title><rect x="285.8" y="181" width="4.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="288.79" y="191.5" ></text>
</g>
<g >
<title>ioLatRead (588,161,293 samples, 100.00%)</title><rect x="10.0" y="581" width="1180.0" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="13.00" y="591.5" >ioLatRead</text>
</g>
<g >
<title>get_unused_fd_flags (2,182,250 samples, 0.37%)</title><rect x="741.0" y="309" width="4.3" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="743.96" y="319.5" ></text>
</g>
</g>
</svg>
