<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="518" onload="init(evt)" viewBox="0 0 1200 518" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="518.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="501" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="501" > </text>
<g id="frames">
<g >
<title>task_tick_fair (6,536,837 samples, 0.03%)</title><rect x="1028.0" y="181" width="0.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1031.00" y="191.5" ></text>
</g>
<g >
<title>update_process_times (30,249,121 samples, 0.14%)</title><rect x="840.0" y="229" width="1.7" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="843.04" y="239.5" ></text>
</g>
<g >
<title>int* std::__fill_n_a&lt;int*, unsigned long, int&gt; (8,551,766 samples, 0.04%)</title><rect x="1189.3" y="261" width="0.5" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1192.31" y="271.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (2,108,704 samples, 0.01%)</title><rect x="1188.0" y="245" width="0.1" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="1191.00" y="255.5" ></text>
</g>
<g >
<title>mmput (2,175,077 samples, 0.01%)</title><rect x="1189.9" y="325" width="0.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1192.88" y="335.5" ></text>
</g>
<g >
<title>perf_ibs_stop (2,170,724 samples, 0.01%)</title><rect x="840.7" y="165" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="843.73" y="175.5" ></text>
</g>
<g >
<title>__update_load_avg_se (2,172,188 samples, 0.01%)</title><rect x="1028.2" y="149" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1031.24" y="159.5" ></text>
</g>
<g >
<title>arch_scale_freq_tick (2,108,504 samples, 0.01%)</title><rect x="1027.9" y="181" width="0.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1030.89" y="191.5" ></text>
</g>
<g >
<title>do_syscall_64 (2,175,077 samples, 0.01%)</title><rect x="1189.9" y="421" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1192.88" y="431.5" ></text>
</g>
<g >
<title>psi_group_change (2,102,790 samples, 0.01%)</title><rect x="842.4" y="229" width="0.1" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="845.36" y="239.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (10,769,390 samples, 0.05%)</title><rect x="1027.8" y="277" width="0.6" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1030.78" y="287.5" ></text>
</g>
<g >
<title>__common_interrupt (4,165,716 samples, 0.02%)</title><rect x="1187.7" y="309" width="0.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1190.67" y="319.5" ></text>
</g>
<g >
<title>handle_irq_event (1,995,124 samples, 0.01%)</title><rect x="1187.7" y="277" width="0.1" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1190.67" y="287.5" ></text>
</g>
<g >
<title>irq_exit_rcu (2,177,967 samples, 0.01%)</title><rect x="842.1" y="309" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="845.13" y="319.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (2,175,077 samples, 0.01%)</title><rect x="1189.9" y="229" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1192.88" y="239.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (2,174,509 samples, 0.01%)</title><rect x="1189.8" y="229" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1192.77" y="239.5" ></text>
</g>
<g >
<title>ktime_get_update_offsets_now (2,182,010 samples, 0.01%)</title><rect x="841.9" y="277" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="844.90" y="287.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (2,139,086 samples, 0.01%)</title><rect x="838.6" y="261" width="0.1" height="15.0" fill="rgb(236,147,35)" rx="2" ry="2" />
<text  x="841.55" y="271.5" ></text>
</g>
<g >
<title>__libc_start_main@@GLIBC_2.34 (22,038,138,314 samples, 99.99%)</title><rect x="10.0" y="421" width="1179.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="13.05" y="431.5" >__libc_start_main@@GLIBC_2.34</text>
</g>
<g >
<title>calc_timer_values (4,346,971 samples, 0.02%)</title><rect x="840.5" y="133" width="0.2" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="843.50" y="143.5" ></text>
</g>
<g >
<title>schedule (2,108,655 samples, 0.01%)</title><rect x="842.4" y="277" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="845.36" y="287.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (8,685,200 samples, 0.04%)</title><rect x="840.4" y="181" width="0.4" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="843.38" y="191.5" ></text>
</g>
<g >
<title>perf_pmu_nop_void (2,133,478 samples, 0.01%)</title><rect x="840.8" y="181" width="0.2" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="843.85" y="191.5" ></text>
</g>
<g >
<title>task_tick_fair (6,530,009 samples, 0.03%)</title><rect x="841.0" y="197" width="0.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="843.96" y="207.5" ></text>
</g>
<g >
<title>update_load_avg (2,185,143 samples, 0.01%)</title><rect x="841.2" y="181" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="844.20" y="191.5" ></text>
</g>
<g >
<title>read_tsc (2,170,416 samples, 0.01%)</title><rect x="839.3" y="245" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="842.35" y="255.5" ></text>
</g>
<g >
<title>default_send_IPI_single_phys (2,139,086 samples, 0.01%)</title><rect x="838.6" y="37" width="0.1" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="841.55" y="47.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (56,285,152 samples, 0.26%)</title><rect x="839.1" y="293" width="3.0" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="842.12" y="303.5" ></text>
</g>
<g >
<title>srso_alias_safe_ret (2,145,088 samples, 0.01%)</title><rect x="839.5" y="245" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="842.46" y="255.5" ></text>
</g>
<g >
<title>sched_use_asym_prio (2,173,836 samples, 0.01%)</title><rect x="1188.3" y="165" width="0.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1191.34" y="175.5" ></text>
</g>
<g >
<title>handle_pte_fault (4,436,472 samples, 0.02%)</title><rect x="1189.5" y="133" width="0.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1192.53" y="143.5" ></text>
</g>
<g >
<title>trigger_load_balance (2,159,948 samples, 0.01%)</title><rect x="14.4" y="213" width="0.1" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="17.41" y="223.5" ></text>
</g>
<g >
<title>idle_cpu (6,533,111 samples, 0.03%)</title><rect x="841.3" y="149" width="0.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="844.31" y="159.5" ></text>
</g>
<g >
<title>do_anonymous_page (4,436,472 samples, 0.02%)</title><rect x="1189.5" y="117" width="0.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1192.53" y="127.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2,159,948 samples, 0.01%)</title><rect x="14.4" y="357" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="17.41" y="367.5" ></text>
</g>
<g >
<title>x64_sys_call (2,174,509 samples, 0.01%)</title><rect x="1189.8" y="245" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1192.77" y="255.5" ></text>
</g>
<g >
<title>hrtimer_active (2,155,068 samples, 0.01%)</title><rect x="841.1" y="181" width="0.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="844.08" y="191.5" ></text>
</g>
<g >
<title>generic_handle_domain_irq_safe (2,139,086 samples, 0.01%)</title><rect x="838.6" y="213" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="841.55" y="223.5" ></text>
</g>
<g >
<title>exit_mmap (2,175,077 samples, 0.01%)</title><rect x="1189.9" y="293" width="0.1" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1192.88" y="303.5" ></text>
</g>
<g >
<title>native_read_msr (2,108,504 samples, 0.01%)</title><rect x="1027.9" y="165" width="0.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1030.89" y="175.5" ></text>
</g>
<g >
<title>perf_ibs_start (4,346,971 samples, 0.02%)</title><rect x="840.5" y="165" width="0.2" height="15.0" fill="rgb(206,4,1)" rx="2" ry="2" />
<text  x="843.50" y="175.5" ></text>
</g>
<g >
<title>__lruvec_stat_mod_folio (4,436,472 samples, 0.02%)</title><rect x="1189.5" y="85" width="0.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1192.53" y="95.5" ></text>
</g>
<g >
<title>update_process_times (8,645,341 samples, 0.04%)</title><rect x="1027.9" y="213" width="0.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1030.89" y="223.5" ></text>
</g>
<g >
<title>timekeeping_advance (6,492,227 samples, 0.03%)</title><rect x="839.6" y="197" width="0.3" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="842.58" y="207.5" ></text>
</g>
<g >
<title>fast_mix (2,170,592 samples, 0.01%)</title><rect x="1187.8" y="261" width="0.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="1190.78" y="271.5" ></text>
</g>
<g >
<title>binSearch (22,041,234,481 samples, 100.00%)</title><rect x="10.0" y="453" width="1180.0" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="13.00" y="463.5" >binSearch</text>
</g>
<g >
<title>update_wall_time (8,652,239 samples, 0.04%)</title><rect x="839.6" y="213" width="0.4" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="842.58" y="223.5" ></text>
</g>
<g >
<title>tick_sched_handle (30,249,121 samples, 0.14%)</title><rect x="840.0" y="245" width="1.7" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="843.04" y="255.5" ></text>
</g>
<g >
<title>schedule (2,173,607 samples, 0.01%)</title><rect x="1028.5" y="261" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1031.47" y="271.5" ></text>
</g>
<g >
<title>int* std::__uninitialized_default_n_1&lt;true&gt;::__uninit_default_n&lt;int*, unsigned long&gt; (8,551,766 samples, 0.04%)</title><rect x="1189.3" y="293" width="0.5" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1192.31" y="303.5" ></text>
</g>
<g >
<title>sysvec_reschedule_ipi (2,181,947 samples, 0.01%)</title><rect x="1028.5" y="309" width="0.1" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="1031.47" y="319.5" ></text>
</g>
<g >
<title>sched_clock (2,185,143 samples, 0.01%)</title><rect x="841.2" y="149" width="0.1" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="844.20" y="159.5" ></text>
</g>
<g >
<title>update_vsyscall (2,172,370 samples, 0.01%)</title><rect x="839.8" y="165" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="842.81" y="175.5" ></text>
</g>
<g >
<title>do_vmi_munmap (2,174,509 samples, 0.01%)</title><rect x="1189.8" y="197" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1192.77" y="207.5" ></text>
</g>
<g >
<title>sync_regs (1,961,887 samples, 0.01%)</title><rect x="1188.6" y="341" width="0.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1191.57" y="351.5" ></text>
</g>
<g >
<title>int* std::__uninitialized_default_n_a&lt;int*, unsigned long, int&gt; (8,551,766 samples, 0.04%)</title><rect x="1189.3" y="325" width="0.5" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1192.31" y="335.5" ></text>
</g>
<g >
<title>void std::__fill_a&lt;int*, int&gt; (8,551,766 samples, 0.04%)</title><rect x="1189.3" y="245" width="0.5" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="1192.31" y="255.5" ></text>
</g>
<g >
<title>timekeeping_update (6,492,227 samples, 0.03%)</title><rect x="839.6" y="181" width="0.3" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="842.58" y="191.5" ></text>
</g>
<g >
<title>nohz_balancer_kick (2,173,836 samples, 0.01%)</title><rect x="1188.3" y="181" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1191.34" y="191.5" ></text>
</g>
<g >
<title>sched_use_asym_prio (2,159,948 samples, 0.01%)</title><rect x="14.4" y="181" width="0.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="17.41" y="191.5" ></text>
</g>
<g >
<title>__irqentry_text_start (1,934,457 samples, 0.01%)</title><rect x="1027.6" y="325" width="0.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1030.56" y="335.5" ></text>
</g>
<g >
<title>handle_fasteoi_irq (2,170,592 samples, 0.01%)</title><rect x="1187.8" y="293" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1190.78" y="303.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (10,769,390 samples, 0.05%)</title><rect x="1027.8" y="293" width="0.6" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1030.78" y="303.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (2,159,948 samples, 0.01%)</title><rect x="14.4" y="277" width="0.1" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="17.41" y="287.5" ></text>
</g>
<g >
<title>unmap_page_range (2,174,509 samples, 0.01%)</title><rect x="1189.8" y="117" width="0.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1192.77" y="127.5" ></text>
</g>
<g >
<title>_compound_head (2,175,077 samples, 0.01%)</title><rect x="1189.9" y="213" width="0.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1192.88" y="223.5" ></text>
</g>
<g >
<title>unmap_vmas (2,174,509 samples, 0.01%)</title><rect x="1189.8" y="149" width="0.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1192.77" y="159.5" ></text>
</g>
<g >
<title>irqentry_exit (2,181,947 samples, 0.01%)</title><rect x="1028.5" y="293" width="0.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1031.47" y="303.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (2,159,948 samples, 0.01%)</title><rect x="14.4" y="341" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="17.41" y="351.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1,995,124 samples, 0.01%)</title><rect x="1187.7" y="261" width="0.1" height="15.0" fill="rgb(236,147,35)" rx="2" ry="2" />
<text  x="1190.67" y="271.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64 (2,124,049 samples, 0.01%)</title><rect x="1027.8" y="213" width="0.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1030.78" y="223.5" ></text>
</g>
<g >
<title>perf_event_update_userpage (4,346,971 samples, 0.02%)</title><rect x="840.5" y="149" width="0.2" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="843.50" y="159.5" ></text>
</g>
<g >
<title>__irqentry_text_start (2,112,893 samples, 0.01%)</title><rect x="838.1" y="341" width="0.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="841.09" y="351.5" ></text>
</g>
<g >
<title>timekeeping_update (2,108,704 samples, 0.01%)</title><rect x="1188.0" y="181" width="0.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1191.00" y="191.5" ></text>
</g>
<g >
<title>handle_irq_event (4,310,404 samples, 0.02%)</title><rect x="838.6" y="277" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="841.55" y="287.5" ></text>
</g>
<g >
<title>update_wall_time (2,108,704 samples, 0.01%)</title><rect x="1188.0" y="213" width="0.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1191.00" y="223.5" ></text>
</g>
<g >
<title>handle_mm_fault (4,436,472 samples, 0.02%)</title><rect x="1189.5" y="165" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1192.53" y="175.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (2,175,077 samples, 0.01%)</title><rect x="1189.9" y="389" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1192.88" y="399.5" ></text>
</g>
<g >
<title>all (22,041,244,334 samples, 100%)</title><rect x="10.0" y="469" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>do_exit (2,175,077 samples, 0.01%)</title><rect x="1189.9" y="357" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1192.88" y="367.5" ></text>
</g>
<g >
<title>update_load_avg (2,182,944 samples, 0.01%)</title><rect x="1188.2" y="181" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1191.23" y="191.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (2,177,451 samples, 0.01%)</title><rect x="841.8" y="261" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="844.78" y="271.5" ></text>
</g>
<g >
<title>idle_cpu (2,173,836 samples, 0.01%)</title><rect x="1188.3" y="149" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1191.34" y="159.5" ></text>
</g>
<g >
<title>read_tsc (2,170,615 samples, 0.01%)</title><rect x="842.0" y="245" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="845.01" y="255.5" ></text>
</g>
<g >
<title>scheduler_tick (26,051,059 samples, 0.12%)</title><rect x="840.3" y="213" width="1.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="843.27" y="223.5" ></text>
</g>
<g >
<title>irqentry_exit (2,117,798 samples, 0.01%)</title><rect x="842.4" y="309" width="0.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="845.36" y="319.5" ></text>
</g>
<g >
<title>std::__new_allocator&lt;int&gt;::deallocate (2,174,509 samples, 0.01%)</title><rect x="1189.8" y="309" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1192.77" y="319.5" ></text>
</g>
<g >
<title>do_amd_gpio_irq_handler (2,139,086 samples, 0.01%)</title><rect x="838.6" y="229" width="0.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="841.55" y="239.5" ></text>
</g>
<g >
<title>sched_clock_cpu (2,185,143 samples, 0.01%)</title><rect x="841.2" y="165" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="844.20" y="175.5" ></text>
</g>
<g >
<title>common_interrupt (10,401,449 samples, 0.05%)</title><rect x="838.5" y="325" width="0.5" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="841.46" y="335.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64 (8,652,239 samples, 0.04%)</title><rect x="839.6" y="229" width="0.4" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="842.58" y="239.5" ></text>
</g>
<g >
<title>psi_task_switch (2,167,312 samples, 0.01%)</title><rect x="1028.5" y="229" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1031.47" y="239.5" ></text>
</g>
<g >
<title>__munmap (2,174,509 samples, 0.01%)</title><rect x="1189.8" y="293" width="0.1" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1192.77" y="303.5" ></text>
</g>
<g >
<title>unmap_region (2,174,509 samples, 0.01%)</title><rect x="1189.8" y="165" width="0.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1192.77" y="175.5" ></text>
</g>
<g >
<title>native_read_msr (2,169,261 samples, 0.01%)</title><rect x="840.3" y="181" width="0.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="843.27" y="191.5" ></text>
</g>
<g >
<title>handle_irq_event (2,139,086 samples, 0.01%)</title><rect x="838.6" y="165" width="0.1" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="841.55" y="175.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2,159,948 samples, 0.01%)</title><rect x="14.4" y="309" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="17.41" y="319.5" ></text>
</g>
<g >
<title>handle_level_irq (2,139,086 samples, 0.01%)</title><rect x="838.6" y="181" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="841.55" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::~vector (2,174,509 samples, 0.01%)</title><rect x="1189.8" y="357" width="0.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1192.77" y="367.5" ></text>
</g>
<g >
<title>update_curr (2,173,460 samples, 0.01%)</title><rect x="1028.0" y="165" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1031.00" y="175.5" ></text>
</g>
<g >
<title>rcu_pending (2,177,898 samples, 0.01%)</title><rect x="840.2" y="197" width="0.1" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="843.15" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::_M_deallocate (2,174,509 samples, 0.01%)</title><rect x="1189.8" y="325" width="0.1" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1192.77" y="335.5" ></text>
</g>
<g >
<title>handle_irq_event (2,170,592 samples, 0.01%)</title><rect x="1187.8" y="277" width="0.1" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1190.78" y="287.5" ></text>
</g>
<g >
<title>tick_sched_handle (8,682,868 samples, 0.04%)</title><rect x="1188.1" y="245" width="0.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1191.11" y="255.5" ></text>
</g>
<g >
<title>handle_irq_desc (2,139,086 samples, 0.01%)</title><rect x="838.6" y="197" width="0.1" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="841.55" y="207.5" ></text>
</g>
<g >
<title>sysvec_reschedule_ipi (2,117,798 samples, 0.01%)</title><rect x="842.4" y="325" width="0.1" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="845.36" y="335.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (2,181,947 samples, 0.01%)</title><rect x="1028.5" y="277" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1031.47" y="287.5" ></text>
</g>
<g >
<title>timerqueue_add (2,178,378 samples, 0.01%)</title><rect x="839.2" y="245" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="842.23" y="255.5" ></text>
</g>
<g >
<title>unmap_vmas (2,175,077 samples, 0.01%)</title><rect x="1189.9" y="277" width="0.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1192.88" y="287.5" ></text>
</g>
<g >
<title>__handle_mm_fault (4,436,472 samples, 0.02%)</title><rect x="1189.5" y="149" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1192.53" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::_M_default_initialize (8,551,766 samples, 0.04%)</title><rect x="1189.3" y="341" width="0.5" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1192.31" y="351.5" ></text>
</g>
<g >
<title>do_group_exit (2,175,077 samples, 0.01%)</title><rect x="1189.9" y="373" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1192.88" y="383.5" ></text>
</g>
<g >
<title>update_load_avg (4,363,377 samples, 0.02%)</title><rect x="1028.1" y="165" width="0.3" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1031.12" y="175.5" ></text>
</g>
<g >
<title>psi_group_change (2,167,312 samples, 0.01%)</title><rect x="1028.5" y="213" width="0.1" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="1031.47" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (170,424,260 samples, 0.77%)</title><rect x="1028.6" y="341" width="9.1" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1031.59" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (2,819,977,651 samples, 12.79%)</title><rect x="1037.7" y="357" width="151.0" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1040.71" y="367.5" >std::vector&lt;int, st..</text>
</g>
<g >
<title>arch_scale_freq_tick (2,169,261 samples, 0.01%)</title><rect x="840.3" y="197" width="0.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="843.27" y="207.5" ></text>
</g>
<g >
<title>handle_edge_irq (1,995,124 samples, 0.01%)</title><rect x="1187.7" y="293" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1190.67" y="303.5" ></text>
</g>
<g >
<title>timekeeping_advance (2,108,704 samples, 0.01%)</title><rect x="1188.0" y="197" width="0.1" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="1191.00" y="207.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (2,113,421 samples, 0.01%)</title><rect x="838.9" y="293" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="841.90" y="303.5" ></text>
</g>
<g >
<title>__vm_munmap (2,174,509 samples, 0.01%)</title><rect x="1189.8" y="213" width="0.1" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="1192.77" y="223.5" ></text>
</g>
<g >
<title>asm_sysvec_reschedule_ipi (2,181,947 samples, 0.01%)</title><rect x="1028.5" y="325" width="0.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1031.47" y="335.5" ></text>
</g>
<g >
<title>tick_sched_handle (8,645,341 samples, 0.04%)</title><rect x="1027.9" y="229" width="0.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1030.89" y="239.5" ></text>
</g>
<g >
<title>native_send_call_func_single_ipi (2,139,086 samples, 0.01%)</title><rect x="838.6" y="53" width="0.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="841.55" y="63.5" ></text>
</g>
<g >
<title>exc_page_fault (4,436,472 samples, 0.02%)</title><rect x="1189.5" y="197" width="0.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1192.53" y="207.5" ></text>
</g>
<g >
<title>tick_program_event (2,170,615 samples, 0.01%)</title><rect x="842.0" y="277" width="0.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="845.01" y="287.5" ></text>
</g>
<g >
<title>update_process_times (8,682,868 samples, 0.04%)</title><rect x="1188.1" y="229" width="0.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1191.11" y="239.5" ></text>
</g>
<g >
<title>folio_add_new_anon_rmap (4,436,472 samples, 0.02%)</title><rect x="1189.5" y="101" width="0.3" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="1192.53" y="111.5" ></text>
</g>
<g >
<title>rseq_update_cpu_node_id (2,113,421 samples, 0.01%)</title><rect x="838.9" y="261" width="0.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="841.90" y="271.5" ></text>
</g>
<g >
<title>asm_common_interrupt (10,401,449 samples, 0.05%)</title><rect x="838.5" y="341" width="0.5" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="841.46" y="351.5" ></text>
</g>
<g >
<title>try_to_wake_up (2,139,086 samples, 0.01%)</title><rect x="838.6" y="101" width="0.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="841.55" y="111.5" ></text>
</g>
<g >
<title>handle_fasteoi_irq (4,310,404 samples, 0.02%)</title><rect x="838.6" y="293" width="0.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="841.55" y="303.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (2,177,967 samples, 0.01%)</title><rect x="842.1" y="293" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="845.13" y="303.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (10,792,686 samples, 0.05%)</title><rect x="1188.0" y="325" width="0.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1191.00" y="335.5" ></text>
</g>
<g >
<title>rcu_sched_clock_irq (4,198,062 samples, 0.02%)</title><rect x="840.0" y="213" width="0.3" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="843.04" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::size (11,757,337 samples, 0.05%)</title><rect x="1188.7" y="357" width="0.6" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="1191.68" y="367.5" ></text>
</g>
<g >
<title>__smp_call_single_queue (2,139,086 samples, 0.01%)</title><rect x="838.6" y="69" width="0.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="841.55" y="79.5" ></text>
</g>
<g >
<title>irqentry_exit (2,113,421 samples, 0.01%)</title><rect x="838.9" y="309" width="0.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="841.90" y="319.5" ></text>
</g>
<g >
<title>task_tick_fair (4,353,115 samples, 0.02%)</title><rect x="1188.1" y="197" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1191.11" y="207.5" ></text>
</g>
<g >
<title>raw_notifier_call_chain (2,108,704 samples, 0.01%)</title><rect x="1188.0" y="165" width="0.1" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1191.00" y="175.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (10,791,572 samples, 0.05%)</title><rect x="1188.0" y="277" width="0.6" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1191.00" y="287.5" ></text>
</g>
<g >
<title>notifier_call_chain (2,108,704 samples, 0.01%)</title><rect x="1188.0" y="149" width="0.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1191.00" y="159.5" ></text>
</g>
<g >
<title>__rseq_handle_notify_resume (2,113,421 samples, 0.01%)</title><rect x="838.9" y="277" width="0.1" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="841.90" y="287.5" ></text>
</g>
<g >
<title>do_syscall_64 (2,174,509 samples, 0.01%)</title><rect x="1189.8" y="261" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1192.77" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::vector (8,551,766 samples, 0.04%)</title><rect x="1189.3" y="357" width="0.5" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1192.31" y="367.5" ></text>
</g>
<g >
<title>update_process_times (2,159,948 samples, 0.01%)</title><rect x="14.4" y="245" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="17.41" y="255.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (60,387,379 samples, 0.27%)</title><rect x="839.0" y="341" width="3.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="842.01" y="351.5" ></text>
</g>
<g >
<title>sched_use_asym_prio (6,533,111 samples, 0.03%)</title><rect x="841.3" y="165" width="0.4" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="844.31" y="175.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (2,174,509 samples, 0.01%)</title><rect x="1189.8" y="101" width="0.1" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="1192.77" y="111.5" ></text>
</g>
<g >
<title>binary_search (83,597,604 samples, 0.38%)</title><rect x="10.0" y="373" width="4.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.05" y="383.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (2,159,948 samples, 0.01%)</title><rect x="14.4" y="325" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="17.41" y="335.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (10,791,572 samples, 0.05%)</title><rect x="1188.0" y="309" width="0.6" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1191.00" y="319.5" ></text>
</g>
<g >
<title>x64_sys_call (2,175,077 samples, 0.01%)</title><rect x="1189.9" y="405" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1192.88" y="415.5" ></text>
</g>
<g >
<title>scheduler_tick (8,645,341 samples, 0.04%)</title><rect x="1027.9" y="197" width="0.5" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1030.89" y="207.5" ></text>
</g>
<g >
<title>update_rq_clock (2,155,917 samples, 0.01%)</title><rect x="1188.5" y="213" width="0.1" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="1191.46" y="223.5" ></text>
</g>
<g >
<title>int* std::__uninitialized_default_n&lt;int*, unsigned long&gt; (8,551,766 samples, 0.04%)</title><rect x="1189.3" y="309" width="0.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1192.31" y="319.5" ></text>
</g>
<g >
<title>int* std::fill_n&lt;int*, unsigned long, int&gt; (8,551,766 samples, 0.04%)</title><rect x="1189.3" y="277" width="0.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1192.31" y="287.5" ></text>
</g>
<g >
<title>common_interrupt (6,030,384 samples, 0.03%)</title><rect x="1187.7" y="325" width="0.3" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1190.67" y="335.5" ></text>
</g>
<g >
<title>binary_search (19,032,066,775 samples, 86.35%)</title><rect x="18.8" y="357" width="1018.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="21.81" y="367.5" >binary_search</text>
</g>
<g >
<title>__irq_exit_rcu (2,169,212 samples, 0.01%)</title><rect x="838.8" y="309" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="841.78" y="319.5" ></text>
</g>
<g >
<title>timekeeping_advance (2,124,049 samples, 0.01%)</title><rect x="1027.8" y="181" width="0.1" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="1030.78" y="191.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (10,791,572 samples, 0.05%)</title><rect x="1188.0" y="293" width="0.6" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1191.00" y="303.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (10,769,390 samples, 0.05%)</title><rect x="1027.8" y="245" width="0.6" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1030.78" y="255.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (4,436,472 samples, 0.02%)</title><rect x="1189.5" y="213" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1192.53" y="223.5" ></text>
</g>
<g >
<title>clockevents_program_event (2,170,615 samples, 0.01%)</title><rect x="842.0" y="261" width="0.1" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="845.01" y="271.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (2,117,798 samples, 0.01%)</title><rect x="842.4" y="293" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="845.36" y="303.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (56,285,152 samples, 0.26%)</title><rect x="839.1" y="309" width="3.0" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="842.12" y="319.5" ></text>
</g>
<g >
<title>main (22,038,138,314 samples, 99.99%)</title><rect x="10.0" y="389" width="1179.9" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="13.05" y="399.5" >main</text>
</g>
<g >
<title>_start (22,038,138,314 samples, 99.99%)</title><rect x="10.0" y="437" width="1179.9" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="13.05" y="447.5" >_start</text>
</g>
<g >
<title>tick_sched_do_timer (2,124,049 samples, 0.01%)</title><rect x="1027.8" y="229" width="0.1" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="1030.78" y="239.5" ></text>
</g>
<g >
<title>timekeeping_update (2,160,012 samples, 0.01%)</title><rect x="839.9" y="197" width="0.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="842.93" y="207.5" ></text>
</g>
<g >
<title>psi_task_switch (2,102,790 samples, 0.01%)</title><rect x="842.4" y="245" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="845.36" y="255.5" ></text>
</g>
<g >
<title>__update_load_avg_se (2,182,944 samples, 0.01%)</title><rect x="1188.2" y="165" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1191.23" y="175.5" ></text>
</g>
<g >
<title>__schedule (2,108,655 samples, 0.01%)</title><rect x="842.4" y="261" width="0.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="845.36" y="271.5" ></text>
</g>
<g >
<title>unmap_page_range (2,175,077 samples, 0.01%)</title><rect x="1189.9" y="245" width="0.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1192.88" y="255.5" ></text>
</g>
<g >
<title>scheduler_tick (6,526,951 samples, 0.03%)</title><rect x="1188.1" y="213" width="0.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1191.11" y="223.5" ></text>
</g>
<g >
<title>update_fast_timekeeper (2,172,428 samples, 0.01%)</title><rect x="839.7" y="165" width="0.1" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="842.69" y="175.5" ></text>
</g>
<g >
<title>_compound_head (2,174,509 samples, 0.01%)</title><rect x="1189.8" y="85" width="0.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1192.77" y="95.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (10,792,686 samples, 0.05%)</title><rect x="1188.0" y="341" width="0.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1191.00" y="351.5" ></text>
</g>
<g >
<title>timerqueue_add (2,177,645 samples, 0.01%)</title><rect x="841.7" y="261" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="844.66" y="271.5" ></text>
</g>
<g >
<title>fast_mix (2,171,318 samples, 0.01%)</title><rect x="838.7" y="261" width="0.1" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="841.67" y="271.5" ></text>
</g>
<g >
<title>unmap_single_vma (2,174,509 samples, 0.01%)</title><rect x="1189.8" y="133" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1192.77" y="143.5" ></text>
</g>
<g >
<title>__common_interrupt (6,118,816 samples, 0.03%)</title><rect x="838.5" y="309" width="0.3" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="841.46" y="319.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (14,991,058 samples, 0.07%)</title><rect x="1027.7" y="325" width="0.8" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1030.67" y="335.5" ></text>
</g>
<g >
<title>asm_sysvec_reschedule_ipi (4,288,006 samples, 0.02%)</title><rect x="842.2" y="341" width="0.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="845.25" y="351.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2,175,077 samples, 0.01%)</title><rect x="1189.9" y="437" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1192.88" y="447.5" ></text>
</g>
<g >
<title>__libc_start_call_main (22,038,138,314 samples, 99.99%)</title><rect x="10.0" y="405" width="1179.9" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="13.05" y="415.5" >__libc_start_call_main</text>
</g>
<g >
<title>unmap_single_vma (2,175,077 samples, 0.01%)</title><rect x="1189.9" y="261" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1192.88" y="271.5" ></text>
</g>
<g >
<title>__irq_wake_thread (2,139,086 samples, 0.01%)</title><rect x="838.6" y="133" width="0.1" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="841.55" y="143.5" ></text>
</g>
<g >
<title>do_user_addr_fault (4,436,472 samples, 0.02%)</title><rect x="1189.5" y="181" width="0.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1192.53" y="191.5" ></text>
</g>
<g >
<title>trigger_load_balance (2,173,836 samples, 0.01%)</title><rect x="1188.3" y="197" width="0.2" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="1191.34" y="207.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (58,463,119 samples, 0.27%)</title><rect x="839.1" y="325" width="3.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="842.12" y="335.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (10,791,572 samples, 0.05%)</title><rect x="1188.0" y="261" width="0.6" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1191.00" y="271.5" ></text>
</g>
<g >
<title>scheduler_tick (2,159,948 samples, 0.01%)</title><rect x="14.4" y="229" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="17.41" y="239.5" ></text>
</g>
<g >
<title>local_clock (2,161,971 samples, 0.01%)</title><rect x="840.6" y="117" width="0.1" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="843.62" y="127.5" ></text>
</g>
<g >
<title>exit_mm (2,175,077 samples, 0.01%)</title><rect x="1189.9" y="341" width="0.1" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1192.88" y="351.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (8,652,239 samples, 0.04%)</title><rect x="839.6" y="245" width="0.4" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="842.58" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;int, std::allocator&lt;int&gt; &gt;::operator[] (3,476,360,182 samples, 15.77%)</title><rect x="842.5" y="341" width="186.1" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="845.47" y="351.5" >std::vector&lt;int, std::al..</text>
</g>
<g >
<title>trigger_load_balance (6,533,111 samples, 0.03%)</title><rect x="841.3" y="197" width="0.4" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="844.31" y="207.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (49,755,076 samples, 0.23%)</title><rect x="839.1" y="277" width="2.7" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="842.12" y="287.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (4,360,567 samples, 0.02%)</title><rect x="839.1" y="261" width="0.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="842.12" y="271.5" ></text>
</g>
<g >
<title>do_vmi_align_munmap (2,174,509 samples, 0.01%)</title><rect x="1189.8" y="181" width="0.1" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1192.77" y="191.5" ></text>
</g>
<g >
<title>_nv041541rm (4,718,487 samples, 0.02%)</title><rect x="838.2" y="341" width="0.3" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="841.20" y="351.5" ></text>
</g>
<g >
<title>__schedule (2,173,607 samples, 0.01%)</title><rect x="1028.5" y="245" width="0.1" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="1031.47" y="255.5" ></text>
</g>
<g >
<title>wake_up_process (2,139,086 samples, 0.01%)</title><rect x="838.6" y="117" width="0.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="841.55" y="127.5" ></text>
</g>
<g >
<title>nohz_balancer_kick (2,159,948 samples, 0.01%)</title><rect x="14.4" y="197" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="17.41" y="207.5" ></text>
</g>
<g >
<title>nohz_balancer_kick (6,533,111 samples, 0.03%)</title><rect x="841.3" y="181" width="0.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="844.31" y="191.5" ></text>
</g>
<g >
<title>ttwu_queue_wakelist (2,139,086 samples, 0.01%)</title><rect x="838.6" y="85" width="0.1" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="841.55" y="95.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (12,939,595 samples, 0.06%)</title><rect x="1027.8" y="309" width="0.7" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1030.78" y="319.5" ></text>
</g>
<g >
<title>tick_sched_handle (2,159,948 samples, 0.01%)</title><rect x="14.4" y="261" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="17.41" y="271.5" ></text>
</g>
<g >
<title>__mmput (2,175,077 samples, 0.01%)</title><rect x="1189.9" y="309" width="0.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1192.88" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2,174,509 samples, 0.01%)</title><rect x="1189.8" y="277" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1192.77" y="287.5" ></text>
</g>
<g >
<title>run_binary_search (21,954,540,710 samples, 99.61%)</title><rect x="14.5" y="373" width="1175.4" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="17.52" y="383.5" >run_binary_search</text>
</g>
<g >
<title>tick_do_update_jiffies64 (2,108,704 samples, 0.01%)</title><rect x="1188.0" y="229" width="0.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1191.00" y="239.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (2,170,171 samples, 0.01%)</title><rect x="1188.1" y="181" width="0.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1191.11" y="191.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (10,769,390 samples, 0.05%)</title><rect x="1027.8" y="261" width="0.6" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1030.78" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__enable_if&lt;std::__is_scalar&lt;int&gt;::__value, void&gt;::__type std::__fill_a1&lt;int*, int&gt; (8,551,766 samples, 0.04%)</title><rect x="1189.3" y="229" width="0.5" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1192.31" y="239.5" ></text>
</g>
<g >
<title>irq_exit_rcu (2,170,205 samples, 0.01%)</title><rect x="1028.4" y="293" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1031.35" y="303.5" ></text>
</g>
<g >
<title>hrtimer_update_next_event (2,177,451 samples, 0.01%)</title><rect x="841.8" y="277" width="0.1" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="844.78" y="287.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (2,159,948 samples, 0.01%)</title><rect x="14.4" y="293" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="17.41" y="303.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (43,216,864 samples, 0.20%)</title><rect x="839.3" y="261" width="2.4" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="842.35" y="271.5" ></text>
</g>
<g >
<title>update_wall_time (2,124,049 samples, 0.01%)</title><rect x="1027.8" y="197" width="0.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1030.78" y="207.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (2,139,086 samples, 0.01%)</title><rect x="838.6" y="149" width="0.1" height="15.0" fill="rgb(236,147,35)" rx="2" ry="2" />
<text  x="841.55" y="159.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;int, std::allocator&lt;int&gt; &gt;::~_Vector_base (2,174,509 samples, 0.01%)</title><rect x="1189.8" y="341" width="0.1" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="1192.77" y="351.5" ></text>
</g>
<g >
<title>perf_event_task_tick (10,818,678 samples, 0.05%)</title><rect x="840.4" y="197" width="0.6" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="843.38" y="207.5" ></text>
</g>
<g >
<title>asm_common_interrupt (6,030,384 samples, 0.03%)</title><rect x="1187.7" y="341" width="0.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1190.67" y="351.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (2,170,205 samples, 0.01%)</title><rect x="1028.4" y="277" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1031.35" y="287.5" ></text>
</g>
<g >
<title>amd_gpio_irq_handler (2,139,086 samples, 0.01%)</title><rect x="838.6" y="245" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="841.55" y="255.5" ></text>
</g>
</g>
</svg>
